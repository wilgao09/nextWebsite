{
    "classdir": [
        {
            "name": "auth",
            "desc": "Management of remote authentication services"
        },
        {
            "name": "blob",
            "desc": "A placeholder for a binary blob"
        },
        {
            "name": "Bond",
            "desc": "&nbsp;"
        },
        {
            "name": "Certificate",
            "desc": "Description"
        },
        {
            "name": "Cluster",
            "desc": "Cluster-wide Cluster metadata"
        },
        {
            "name": "Cluster_host",
            "desc": "Cluster member metadata"
        },
        {
            "name": "console",
            "desc": "A console"
        },
        {
            "name": "crashdump",
            "desc": "<strong>Deprecated</strong>. A VM crashdump"
        },
        {
            "name": "data_source",
            "desc": "Data sources for logging in RRDs"
        },
        {
            "name": "DR_task",
            "desc": "DR task"
        },
        {
            "name": "event",
            "desc": "Asynchronous event registration and handling"
        },
        {
            "name": "Feature",
            "desc": "A new piece of functionality"
        },
        {
            "name": "GPU_group",
            "desc": "A group of compatible GPUs across the resource pool"
        },
        {
            "name": "host",
            "desc": "A physical host"
        },
        {
            "name": "host_cpu",
            "desc": "<strong>Deprecated</strong>. A physical CPU"
        },
        {
            "name": "host_crashdump",
            "desc": "Represents a host crash dump"
        },
        {
            "name": "host_metrics",
            "desc": "The metrics associated with a host"
        },
        {
            "name": "host_patch",
            "desc": "<strong>Deprecated</strong>. Represents a patch stored on a server"
        },
        {
            "name": "LVHD",
            "desc": "LVHD SR specific operations"
        },
        {
            "name": "message",
            "desc": "An message for the attention of the administrator"
        },
        {
            "name": "network",
            "desc": "A virtual network"
        },
        {
            "name": "network_sriov",
            "desc": "network-sriov which connects logical pif and physical pif"
        },
        {
            "name": "Observer",
            "desc": "Describes a observer which will control observability activity in the Toolstack"
        },
        {
            "name": "PBD",
            "desc": "The physical block devices through which hosts access SRs"
        },
        {
            "name": "PCI",
            "desc": "A PCI device"
        },
        {
            "name": "PGPU",
            "desc": "A physical GPU (pGPU)"
        },
        {
            "name": "PIF",
            "desc": "A physical network interface (note separate VLANs are represented as several PIFs)"
        },
        {
            "name": "PIF_metrics",
            "desc": "The metrics associated with a physical network interface"
        },
        {
            "name": "pool",
            "desc": "Pool-wide information"
        },
        {
            "name": "pool_patch",
            "desc": "<strong>Deprecated</strong>. Pool-wide patches"
        },
        {
            "name": "pool_update",
            "desc": "Pool-wide updates to the host software"
        },
        {
            "name": "probe_result",
            "desc": "A set of properties that describe one result element of SR.probe. Result elements and properties can change dynamically based on changes to the the SR.probe input-parameters or the target."
        },
        {
            "name": "PUSB",
            "desc": "A physical USB device"
        },
        {
            "name": "PVS_cache_storage",
            "desc": "Describes the storage that is available to a PVS site for caching purposes"
        },
        {
            "name": "PVS_proxy",
            "desc": "a proxy connects a VM/VIF with a PVS site"
        },
        {
            "name": "PVS_server",
            "desc": "individual machine serving provisioning (block) data"
        },
        {
            "name": "PVS_site",
            "desc": "machines serving blocks of data for provisioning VMs"
        },
        {
            "name": "Repository",
            "desc": "Repository for updates"
        },
        {
            "name": "role",
            "desc": "A set of permissions associated with a subject"
        },
        {
            "name": "SDN_controller",
            "desc": "Describes the SDN controller that is to connect with the pool"
        },
        {
            "name": "secret",
            "desc": "A secret"
        },
        {
            "name": "session",
            "desc": "A session"
        },
        {
            "name": "SM",
            "desc": "A storage manager plugin"
        },
        {
            "name": "SR",
            "desc": "A storage repository"
        },
        {
            "name": "sr_stat",
            "desc": "A set of high-level properties associated with an SR."
        },
        {
            "name": "subject",
            "desc": "A user or group that can log in xapi"
        },
        {
            "name": "task",
            "desc": "A long-running asynchronous task"
        },
        {
            "name": "tunnel",
            "desc": "A tunnel for network traffic"
        },
        {
            "name": "USB_group",
            "desc": "A group of compatible USBs across the resource pool"
        },
        {
            "name": "user",
            "desc": "<strong>Deprecated</strong>. A user of the system"
        },
        {
            "name": "VBD",
            "desc": "A virtual block device"
        },
        {
            "name": "VBD_metrics",
            "desc": "<strong>Removed</strong>. The metrics associated with a virtual block device"
        },
        {
            "name": "VDI",
            "desc": "A virtual disk image"
        },
        {
            "name": "vdi_nbd_server_info",
            "desc": "Details for connecting to a VDI using the Network Block Device protocol"
        },
        {
            "name": "VGPU",
            "desc": "A virtual GPU (vGPU)"
        },
        {
            "name": "VGPU_type",
            "desc": "A type of virtual GPU"
        },
        {
            "name": "VIF",
            "desc": "A virtual network interface"
        },
        {
            "name": "VIF_metrics",
            "desc": "<strong>Removed</strong>. The metrics associated with a virtual network device"
        },
        {
            "name": "VLAN",
            "desc": "A VLAN mux/demux"
        },
        {
            "name": "VM",
            "desc": "A virtual machine (or ‘guest’)."
        },
        {
            "name": "VM_appliance",
            "desc": "VM appliance"
        },
        {
            "name": "VM_guest_metrics",
            "desc": "The metrics reported by the guest (as opposed to inferred from outside)"
        },
        {
            "name": "VM_metrics",
            "desc": "The metrics associated with a VM"
        },
        {
            "name": "VMPP",
            "desc": "<strong>Removed</strong>. VM Protection Policy"
        },
        {
            "name": "VMSS",
            "desc": "VM Snapshot Schedule"
        },
        {
            "name": "VTPM",
            "desc": "A virtual TPM device"
        },
        {
            "name": "VUSB",
            "desc": "Describes the vusb device"
        }
    ],
    "enums": [
        {
            "name": "enum after_apply_guidance",
            "values": [
                [
                    "restartHost",
                    "This patch requires the host to be restarted once applied."
                ],
                [
                    "restartHVM",
                    "This patch requires HVM guests to be restarted once applied."
                ],
                [
                    "restartPV",
                    "This patch requires PV guests to be restarted once applied."
                ],
                [
                    "restartXAPI",
                    "This patch requires XAPI to be restarted once applied."
                ]
            ]
        },
        {
            "name": "enum allocation_algorithm",
            "values": [
                [
                    "breadth_first",
                    "vGPUs of a given type are allocated evenly across supporting pGPUs."
                ],
                [
                    "depth_first",
                    "vGPUs of a given type are allocated on supporting pGPUs until they are full."
                ]
            ]
        },
        {
            "name": "enum bond_mode",
            "values": [
                [
                    "active-backup",
                    "Active/passive bonding: only one NIC is carrying traffic"
                ],
                [
                    "balance-slb",
                    "Source-level balancing"
                ],
                [
                    "lacp",
                    "Link aggregation control protocol"
                ]
            ]
        },
        {
            "name": "enum certificate_type",
            "values": [
                [
                    "ca",
                    "Certificate that is trusted by the whole pool"
                ],
                [
                    "host",
                    "Certificate that identifies a single host to entities outside the pool"
                ],
                [
                    "host_internal",
                    "Certificate that identifies a single host to other pool members"
                ]
            ]
        },
        {
            "name": "enum cls",
            "values": [
                [
                    "Certificate",
                    "Certificate"
                ],
                [
                    "Host",
                    "Host"
                ],
                [
                    "Pool",
                    "Pool"
                ],
                [
                    "PVS_proxy",
                    "PVS_proxy"
                ],
                [
                    "SR",
                    "SR"
                ],
                [
                    "VDI",
                    "VDI"
                ],
                [
                    "VM",
                    "VM"
                ],
                [
                    "VMPP",
                    "VMPP"
                ],
                [
                    "VMSS",
                    "VMSS"
                ]
            ]
        },
        {
            "name": "enum cluster_host_operation",
            "values": [
                [
                    "destroy",
                    "completely destroying a cluster host"
                ],
                [
                    "disable",
                    "disabling cluster membership on a particular host"
                ],
                [
                    "enable",
                    "enabling cluster membership on a particular host"
                ]
            ]
        },
        {
            "name": "enum cluster_operation",
            "values": [
                [
                    "add",
                    "adding a new member to the cluster"
                ],
                [
                    "destroy",
                    "completely destroying a cluster"
                ],
                [
                    "disable",
                    "disabling any cluster member"
                ],
                [
                    "enable",
                    "enabling any cluster member"
                ],
                [
                    "remove",
                    "removing a member from the cluster"
                ]
            ]
        },
        {
            "name": "enum console_protocol",
            "values": [
                [
                    "rdp",
                    "Remote Desktop Protocol"
                ],
                [
                    "rfb",
                    "Remote FrameBuffer protocol (as used in VNC)"
                ],
                [
                    "vt100",
                    "VT100 terminal"
                ]
            ]
        },
        {
            "name": "enum domain_type",
            "values": [
                [
                    "hvm",
                    "HVM; Fully Virtualised"
                ],
                [
                    "pv",
                    "PV: Paravirtualised"
                ],
                [
                    "pv_in_pvh",
                    "PV inside a PVH container"
                ],
                [
                    "pvh",
                    "PVH"
                ],
                [
                    "unspecified",
                    "Not specified or unknown domain type"
                ]
            ]
        },
        {
            "name": "enum event_operation",
            "values": [
                [
                    "add",
                    "An object has been created"
                ],
                [
                    "del",
                    "An object has been deleted"
                ],
                [
                    "mod",
                    "An object has been modified"
                ]
            ]
        },
        {
            "name": "enum host_allowed_operations",
            "values": [
                [
                    "apply_updates",
                    "Indicates this host is being updated"
                ],
                [
                    "evacuate",
                    "Indicates this host is evacuating"
                ],
                [
                    "power_on",
                    "Indicates this host is in the process of being powered on"
                ],
                [
                    "provision",
                    "Indicates this host is able to provision another VM"
                ],
                [
                    "reboot",
                    "Indicates this host is in the process of rebooting"
                ],
                [
                    "shutdown",
                    "Indicates this host is in the process of shutting itself down"
                ],
                [
                    "vm_migrate",
                    "This host is the migration target of a VM"
                ],
                [
                    "vm_resume",
                    "This host is resuming a VM"
                ],
                [
                    "vm_start",
                    "This host is starting a VM"
                ]
            ]
        },
        {
            "name": "enum host_display",
            "values": [
                [
                    "disable_on_reboot",
                    "The host will stop outputting its console to a physical display device on next boot"
                ],
                [
                    "disabled",
                    "This host is not outputting its console to a physical display device"
                ],
                [
                    "enable_on_reboot",
                    "The host will start outputting its console to a physical display device on next boot"
                ],
                [
                    "enabled",
                    "This host is outputting its console to a physical display device"
                ]
            ]
        },
        {
            "name": "enum host_numa_affinity_policy",
            "values": [
                [
                    "any",
                    "VMs are spread across all available NUMA nodes"
                ],
                [
                    "best_effort",
                    "VMs are placed on the smallest number of NUMA nodes that they fit using soft-pinning, but the policy doesn’t guarantee a balanced placement, falling back to the ‘any’ policy."
                ],
                [
                    "default_policy",
                    "Use the NUMA affinity policy that is the default for the current version"
                ]
            ]
        },
        {
            "name": "enum host_sched_gran",
            "values": [
                [
                    "core",
                    "core scheduling"
                ],
                [
                    "cpu",
                    "CPU scheduling"
                ],
                [
                    "socket",
                    "socket scheduling"
                ]
            ]
        },
        {
            "name": "enum ip_configuration_mode",
            "values": [
                [
                    "DHCP",
                    "Acquire an IP address by DHCP"
                ],
                [
                    "None",
                    "Do not acquire an IP address"
                ],
                [
                    "Static",
                    "Static IP address configuration"
                ]
            ]
        },
        {
            "name": "enum ipv6_configuration_mode",
            "values": [
                [
                    "Autoconf",
                    "Router assigned prefix delegation IPv6 allocation"
                ],
                [
                    "DHCP",
                    "Acquire an IPv6 address by DHCP"
                ],
                [
                    "None",
                    "Do not acquire an IPv6 address"
                ],
                [
                    "Static",
                    "Static IPv6 address configuration"
                ]
            ]
        },
        {
            "name": "enum latest_synced_updates_applied_state",
            "values": [
                [
                    "no",
                    "The host is outdated with the latest updates synced from remote CDN"
                ],
                [
                    "unknown",
                    "If the host is up to date with the latest updates synced from remote CDN is unknown"
                ],
                [
                    "yes",
                    "The host is up to date with the latest updates synced from remote CDN"
                ]
            ]
        },
        {
            "name": "enum livepatch_status",
            "values": [
                [
                    "ok",
                    "There is no applicable live patch"
                ],
                [
                    "ok_livepatch_complete",
                    "An applicable live patch exists for every required component"
                ],
                [
                    "ok_livepatch_incomplete",
                    "An applicable live patch exists but it is not sufficient"
                ]
            ]
        },
        {
            "name": "enum network_default_locking_mode",
            "values": [
                [
                    "disabled",
                    "Treat all VIFs on this network with locking_mode = ‘default’ as if they have locking_mode = ‘disabled’"
                ],
                [
                    "unlocked",
                    "Treat all VIFs on this network with locking_mode = ‘default’ as if they have locking_mode = ‘unlocked’"
                ]
            ]
        },
        {
            "name": "enum network_operations",
            "values": [
                [
                    "attaching",
                    "Indicates this network is attaching to a VIF or PIF"
                ]
            ]
        },
        {
            "name": "enum network_purpose",
            "values": [
                [
                    "insecure_nbd",
                    "Network Block Device service without integrity or confidentiality: NOT RECOMMENDED"
                ],
                [
                    "nbd",
                    "Network Block Device service using TLS"
                ]
            ]
        },
        {
            "name": "enum on_boot",
            "values": [
                [
                    "persist",
                    "Standard behaviour."
                ],
                [
                    "reset",
                    "When a VM containing this VDI is started, the contents of the VDI are reset to the state they were in when this flag was last set."
                ]
            ]
        },
        {
            "name": "enum on_crash_behaviour",
            "values": [
                [
                    "coredump_and_destroy",
                    "record a coredump and then destroy the VM state"
                ],
                [
                    "coredump_and_restart",
                    "record a coredump and then restart the VM"
                ],
                [
                    "destroy",
                    "destroy the VM state"
                ],
                [
                    "preserve",
                    "leave the crashed VM paused"
                ],
                [
                    "rename_restart",
                    "rename the crashed VM and start a new copy"
                ],
                [
                    "restart",
                    "restart the VM"
                ]
            ]
        },
        {
            "name": "enum on_normal_exit",
            "values": [
                [
                    "destroy",
                    "destroy the VM state"
                ],
                [
                    "restart",
                    "restart the VM"
                ]
            ]
        },
        {
            "name": "enum on_softreboot_behavior",
            "values": [
                [
                    "destroy",
                    "destroy the VM state"
                ],
                [
                    "preserve",
                    "leave the VM paused"
                ],
                [
                    "restart",
                    "restart the VM"
                ],
                [
                    "soft_reboot",
                    "perform soft-reboot"
                ]
            ]
        },
        {
            "name": "enum persistence_backend",
            "values": [
                [
                    "xapi",
                    "This VTPM is persisted in XAPI’s DB"
                ]
            ]
        },
        {
            "name": "enum pgpu_dom0_access",
            "values": [
                [
                    "disable_on_reboot",
                    "On host reboot dom0 will be blocked from accessing this device"
                ],
                [
                    "disabled",
                    "dom0 cannot access this device"
                ],
                [
                    "enable_on_reboot",
                    "On host reboot dom0 will be allowed to access this device"
                ],
                [
                    "enabled",
                    "dom0 can access this device as normal"
                ]
            ]
        },
        {
            "name": "enum pif_igmp_status",
            "values": [
                [
                    "disabled",
                    "IGMP Snooping is disabled in the corresponding backend bridge.’"
                ],
                [
                    "enabled",
                    "IGMP Snooping is enabled in the corresponding backend bridge.’"
                ],
                [
                    "unknown",
                    "IGMP snooping status is unknown. If this is a VLAN master, then please consult the underlying VLAN slave PIF."
                ]
            ]
        },
        {
            "name": "enum pool_allowed_operations",
            "values": [
                [
                    "apply_updates",
                    "Indicates this pool is in the process of applying updates"
                ],
                [
                    "cert_refresh",
                    "A certificate refresh and distribution is in progress"
                ],
                [
                    "cluster_create",
                    "Indicates this pool is in the process of creating a cluster"
                ],
                [
                    "configure_repositories",
                    "Indicates this pool is in the process of configuring repositories"
                ],
                [
                    "copy_primary_host_certs",
                    "Indicates the primary host is sending its certificates to another host"
                ],
                [
                    "designate_new_master",
                    "Indicates this pool is in the process of changing master"
                ],
                [
                    "exchange_ca_certificates_on_join",
                    "Indicates this pool is exchanging ca certificates with a new joiner"
                ],
                [
                    "exchange_certificates_on_join",
                    "Indicates this pool is exchanging internal certificates with a new joiner"
                ],
                [
                    "get_updates",
                    "Indicates this pool is in the process of getting updates"
                ],
                [
                    "ha_disable",
                    "Indicates this pool is in the process of disabling HA"
                ],
                [
                    "ha_enable",
                    "Indicates this pool is in the process of enabling HA"
                ],
                [
                    "sync_updates",
                    "Indicates this pool is in the process of syncing updates"
                ],
                [
                    "tls_verification_enable",
                    "Indicates this pool is in the process of enabling TLS verification"
                ]
            ]
        },
        {
            "name": "enum primary_address_type",
            "values": [
                [
                    "IPv4",
                    "Primary address is the IPv4 address"
                ],
                [
                    "IPv6",
                    "Primary address is the IPv6 address"
                ]
            ]
        },
        {
            "name": "enum pvs_proxy_status",
            "values": [
                [
                    "caching",
                    "The proxy is currently caching data"
                ],
                [
                    "incompatible_protocol_version",
                    "The PVS protocol in use is not compatible with the PVS proxy"
                ],
                [
                    "incompatible_write_cache_mode",
                    "The PVS device is configured to use an incompatible write-cache mode"
                ],
                [
                    "initialised",
                    "The proxy is setup but has not yet cached anything"
                ],
                [
                    "stopped",
                    "The proxy is not currently running"
                ]
            ]
        },
        {
            "name": "enum sdn_controller_protocol",
            "values": [
                [
                    "pssl",
                    "Passive ssl connection"
                ],
                [
                    "ssl",
                    "Active ssl connection"
                ]
            ]
        },
        {
            "name": "enum sr_health",
            "values": [
                [
                    "healthy",
                    "Storage is fully available"
                ],
                [
                    "recovering",
                    "Storage is busy recovering, e.g. rebuilding mirrors."
                ]
            ]
        },
        {
            "name": "enum sriov_configuration_mode",
            "values": [
                [
                    "manual",
                    "Configure network sriov manually"
                ],
                [
                    "modprobe",
                    "Configure network sriov by modprobe, need reboot"
                ],
                [
                    "sysfs",
                    "Configure network sriov by sysfs, do not need reboot"
                ],
                [
                    "unknown",
                    "Unknown mode"
                ]
            ]
        },
        {
            "name": "enum storage_operations",
            "values": [
                [
                    "destroy",
                    "Destroying the SR"
                ],
                [
                    "forget",
                    "Forgetting about SR"
                ],
                [
                    "pbd_create",
                    "Creating a PBD for this SR"
                ],
                [
                    "pbd_destroy",
                    "Destroying one of this SR’s PBDs"
                ],
                [
                    "plug",
                    "Plugging a PBD into this SR"
                ],
                [
                    "scan",
                    "Scanning backends for new or deleted VDIs"
                ],
                [
                    "unplug",
                    "Unplugging a PBD from this SR"
                ],
                [
                    "update",
                    "Refresh the fields on the SR"
                ],
                [
                    "vdi_clone",
                    "Cloneing a VDI"
                ],
                [
                    "vdi_create",
                    "Creating a new VDI"
                ],
                [
                    "vdi_data_destroy",
                    "Deleting the data of the VDI"
                ],
                [
                    "vdi_destroy",
                    "Destroying a VDI"
                ],
                [
                    "vdi_disable_cbt",
                    "Disabling changed block tracking for a VDI"
                ],
                [
                    "vdi_enable_cbt",
                    "Enabling changed block tracking for a VDI"
                ],
                [
                    "vdi_introduce",
                    "Introducing a new VDI"
                ],
                [
                    "vdi_list_changed_blocks",
                    "Exporting a bitmap that shows the changed blocks between two VDIs"
                ],
                [
                    "vdi_mirror",
                    "Mirroring a VDI"
                ],
                [
                    "vdi_resize",
                    "Resizing a VDI"
                ],
                [
                    "vdi_set_on_boot",
                    "Setting the on_boot field of the VDI"
                ],
                [
                    "vdi_snapshot",
                    "Snapshotting a VDI"
                ]
            ]
        },
        {
            "name": "enum task_allowed_operations",
            "values": [
                [
                    "cancel",
                    "refers to the operation “cancel”"
                ],
                [
                    "destroy",
                    "refers to the operation “destroy”"
                ]
            ]
        },
        {
            "name": "enum task_status_type",
            "values": [
                [
                    "cancelled",
                    "task has been cancelled"
                ],
                [
                    "cancelling",
                    "task is being cancelled"
                ],
                [
                    "failure",
                    "task has failed"
                ],
                [
                    "pending",
                    "task is in progress"
                ],
                [
                    "success",
                    "task was completed successfully"
                ]
            ]
        },
        {
            "name": "enum telemetry_frequency",
            "values": [
                [
                    "daily",
                    "Run telemetry task daily"
                ],
                [
                    "monthly",
                    "Run telemetry task monthly"
                ],
                [
                    "weekly",
                    "Run telemetry task weekly"
                ]
            ]
        },
        {
            "name": "enum tristate_type",
            "values": [
                [
                    "no",
                    "Known to be false"
                ],
                [
                    "unspecified",
                    "Unknown or unspecified"
                ],
                [
                    "yes",
                    "Known to be true"
                ]
            ]
        },
        {
            "name": "enum tunnel_protocol",
            "values": [
                [
                    "gre",
                    "GRE protocol"
                ],
                [
                    "vxlan",
                    "VxLAN Protocol"
                ]
            ]
        },
        {
            "name": "enum update_after_apply_guidance",
            "values": [
                [
                    "restartHost",
                    "This update requires the host to be restarted once applied."
                ],
                [
                    "restartHVM",
                    "This update requires HVM guests to be restarted once applied."
                ],
                [
                    "restartPV",
                    "This update requires PV guests to be restarted once applied."
                ],
                [
                    "restartXAPI",
                    "This update requires XAPI to be restarted once applied."
                ]
            ]
        },
        {
            "name": "enum update_guidances",
            "values": [
                [
                    "reboot_host",
                    "Indicates the updated host should reboot as soon as possible"
                ],
                [
                    "reboot_host_on_livepatch_failure",
                    "Indicates the updated host should reboot as soon as possible since one or more livepatch(es) failed to be applied."
                ],
                [
                    "restart_device_model",
                    "Indicates the device model of a running VM should restart as soon as possible"
                ],
                [
                    "restart_toolstack",
                    "Indicates the Toolstack running on the updated host should restart as soon as possible"
                ]
            ]
        },
        {
            "name": "enum update_sync_frequency",
            "values": [
                [
                    "daily",
                    "The update synchronizations happen every day"
                ],
                [
                    "weekly",
                    "The update synchronizations happen every week on the chosen day"
                ]
            ]
        },
        {
            "name": "enum vbd_mode",
            "values": [
                [
                    "RO",
                    "only read-only access will be allowed"
                ],
                [
                    "RW",
                    "read-write access will be allowed"
                ]
            ]
        },
        {
            "name": "enum vbd_operations",
            "values": [
                [
                    "attach",
                    "Attempting to attach this VBD to a VM"
                ],
                [
                    "eject",
                    "Attempting to eject the media from this VBD"
                ],
                [
                    "insert",
                    "Attempting to insert new media into this VBD"
                ],
                [
                    "pause",
                    "Attempting to pause a block device backend"
                ],
                [
                    "plug",
                    "Attempting to hotplug this VBD"
                ],
                [
                    "unpause",
                    "Attempting to unpause a block device backend"
                ],
                [
                    "unplug",
                    "Attempting to hot unplug this VBD"
                ],
                [
                    "unplug_force",
                    "Attempting to forcibly unplug this VBD"
                ]
            ]
        },
        {
            "name": "enum vbd_type",
            "values": [
                [
                    "CD",
                    "VBD will appear to guest as CD"
                ],
                [
                    "Disk",
                    "VBD will appear to guest as disk"
                ],
                [
                    "Floppy",
                    "VBD will appear as a floppy"
                ]
            ]
        },
        {
            "name": "enum vdi_operations",
            "values": [
                [
                    "blocked",
                    "Operations on this VDI are temporarily blocked"
                ],
                [
                    "clone",
                    "Cloning the VDI"
                ],
                [
                    "copy",
                    "Copying the VDI"
                ],
                [
                    "data_destroy",
                    "Deleting the data of the VDI"
                ],
                [
                    "destroy",
                    "Destroying the VDI"
                ],
                [
                    "disable_cbt",
                    "Disabling changed block tracking for a VDI"
                ],
                [
                    "enable_cbt",
                    "Enabling changed block tracking for a VDI"
                ],
                [
                    "force_unlock",
                    "Forcibly unlocking the VDI"
                ],
                [
                    "forget",
                    "Forget about the VDI"
                ],
                [
                    "generate_config",
                    "Generating static configuration"
                ],
                [
                    "list_changed_blocks",
                    "Exporting a bitmap that shows the changed blocks between two VDIs"
                ],
                [
                    "mirror",
                    "Mirroring the VDI"
                ],
                [
                    "resize",
                    "Resizing the VDI"
                ],
                [
                    "resize_online",
                    "Resizing the VDI which may or may not be online"
                ],
                [
                    "set_on_boot",
                    "Setting the on_boot field of the VDI"
                ],
                [
                    "snapshot",
                    "Snapshotting the VDI"
                ],
                [
                    "update",
                    "Refreshing the fields of the VDI"
                ]
            ]
        },
        {
            "name": "enum vdi_type",
            "values": [
                [
                    "cbt_metadata",
                    "Metadata about a snapshot VDI that has been deleted: the set of blocks that changed between some previous version of the disk and the version tracked by the snapshot."
                ],
                [
                    "crashdump",
                    "a disk that stores VM crashdump information"
                ],
                [
                    "ephemeral",
                    "a disk that may be reformatted on upgrade"
                ],
                [
                    "ha_statefile",
                    "a disk used for HA storage heartbeating"
                ],
                [
                    "metadata",
                    "a disk used for HA Pool metadata"
                ],
                [
                    "pvs_cache",
                    "a disk that stores PVS cache data"
                ],
                [
                    "redo_log",
                    "a disk used for a general metadata redo-log"
                ],
                [
                    "rrd",
                    "a disk that stores SR-level RRDs"
                ],
                [
                    "suspend",
                    "a disk that stores a suspend image"
                ],
                [
                    "system",
                    "a disk that may be replaced on upgrade"
                ],
                [
                    "user",
                    "a disk that is always preserved on upgrade"
                ]
            ]
        },
        {
            "name": "enum vgpu_type_implementation",
            "values": [
                [
                    "gvt_g",
                    "vGPU using Intel GVT-g"
                ],
                [
                    "mxgpu",
                    "vGPU using AMD MxGPU"
                ],
                [
                    "nvidia",
                    "vGPU using NVIDIA hardware"
                ],
                [
                    "nvidia_sriov",
                    "vGPU using NVIDIA hardware with SR-IOV"
                ],
                [
                    "passthrough",
                    "Pass through an entire physical GPU to a guest"
                ]
            ]
        },
        {
            "name": "enum vif_ipv4_configuration_mode",
            "values": [
                [
                    "None",
                    "Follow the default IPv4 configuration of the guest (this is guest-dependent)"
                ],
                [
                    "Static",
                    "Static IPv4 address configuration"
                ]
            ]
        },
        {
            "name": "enum vif_ipv6_configuration_mode",
            "values": [
                [
                    "None",
                    "Follow the default IPv6 configuration of the guest (this is guest-dependent)"
                ],
                [
                    "Static",
                    "Static IPv6 address configuration"
                ]
            ]
        },
        {
            "name": "enum vif_locking_mode",
            "values": [
                [
                    "disabled",
                    "No traffic is permitted"
                ],
                [
                    "locked",
                    "Only traffic to a specific MAC and a list of IPv4 or IPv6 addresses is permitted"
                ],
                [
                    "network_default",
                    "No specific configuration set - default network policy applies"
                ],
                [
                    "unlocked",
                    "All traffic is permitted"
                ]
            ]
        },
        {
            "name": "enum vif_operations",
            "values": [
                [
                    "attach",
                    "Attempting to attach this VIF to a VM"
                ],
                [
                    "plug",
                    "Attempting to hotplug this VIF"
                ],
                [
                    "unplug",
                    "Attempting to hot unplug this VIF"
                ]
            ]
        },
        {
            "name": "enum vm_appliance_operation",
            "values": [
                [
                    "clean_shutdown",
                    "Clean shutdown"
                ],
                [
                    "hard_shutdown",
                    "Hard shutdown"
                ],
                [
                    "shutdown",
                    "Shutdown"
                ],
                [
                    "start",
                    "Start"
                ]
            ]
        },
        {
            "name": "enum vm_operations",
            "values": [
                [
                    "assert_operation_valid",
                    "&nbsp;"
                ],
                [
                    "awaiting_memory_live",
                    "Waiting for the memory settings to change"
                ],
                [
                    "call_plugin",
                    "refers to the operation “call_plugin”"
                ],
                [
                    "changing_dynamic_range",
                    "Changing the memory dynamic range"
                ],
                [
                    "changing_memory_limits",
                    "Changing the memory limits"
                ],
                [
                    "changing_memory_live",
                    "Changing the memory settings"
                ],
                [
                    "changing_NVRAM",
                    "Changing NVRAM for a halted VM."
                ],
                [
                    "changing_shadow_memory",
                    "Changing the shadow memory for a halted VM."
                ],
                [
                    "changing_shadow_memory_live",
                    "Changing the shadow memory for a running VM."
                ],
                [
                    "changing_static_range",
                    "Changing the memory static range"
                ],
                [
                    "changing_VCPUs",
                    "Changing VCPU settings for a halted VM."
                ],
                [
                    "changing_VCPUs_live",
                    "Changing VCPU settings for a running VM."
                ],
                [
                    "checkpoint",
                    "refers to the operation “checkpoint”"
                ],
                [
                    "clean_reboot",
                    "refers to the operation “clean_reboot”"
                ],
                [
                    "clean_shutdown",
                    "refers to the operation “clean_shutdown”"
                ],
                [
                    "clone",
                    "refers to the operation “clone”"
                ],
                [
                    "copy",
                    "refers to the operation “copy”"
                ],
                [
                    "create_template",
                    "refers to the operation “create_template”"
                ],
                [
                    "create_vtpm",
                    "Creating and adding a VTPM to this VM"
                ],
                [
                    "csvm",
                    "refers to the operation “csvm”"
                ],
                [
                    "data_source_op",
                    "Add, remove, query or list data sources"
                ],
                [
                    "destroy",
                    "refers to the act of uninstalling the VM"
                ],
                [
                    "export",
                    "exporting a VM to a network stream"
                ],
                [
                    "get_boot_record",
                    "refers to the operation “get_boot_record”"
                ],
                [
                    "hard_reboot",
                    "refers to the operation “hard_reboot”"
                ],
                [
                    "hard_shutdown",
                    "refers to the operation “hard_shutdown”"
                ],
                [
                    "import",
                    "importing a VM from a network stream"
                ],
                [
                    "make_into_template",
                    "Turning this VM into a template"
                ],
                [
                    "metadata_export",
                    "exporting VM metadata to a network stream"
                ],
                [
                    "migrate_send",
                    "refers to the operation “migrate_send”"
                ],
                [
                    "pause",
                    "refers to the operation “pause”"
                ],
                [
                    "pool_migrate",
                    "refers to the operation “pool_migrate”"
                ],
                [
                    "power_state_reset",
                    "refers to the operation “power_state_reset”"
                ],
                [
                    "provision",
                    "refers to the operation “provision”"
                ],
                [
                    "query_services",
                    "refers to the operation “query_services”"
                ],
                [
                    "resume",
                    "refers to the operation “resume”"
                ],
                [
                    "resume_on",
                    "refers to the operation “resume_on”"
                ],
                [
                    "revert",
                    "refers to the operation “revert”"
                ],
                [
                    "reverting",
                    "Reverting the VM to a previous snapshotted state"
                ],
                [
                    "send_sysrq",
                    "refers to the operation “send_sysrq”"
                ],
                [
                    "send_trigger",
                    "refers to the operation “send_trigger”"
                ],
                [
                    "shutdown",
                    "refers to the operation “shutdown”"
                ],
                [
                    "snapshot",
                    "refers to the operation “snapshot”"
                ],
                [
                    "snapshot_with_quiesce",
                    "refers to the operation “snapshot_with_quiesce”"
                ],
                [
                    "start",
                    "refers to the operation “start”"
                ],
                [
                    "start_on",
                    "refers to the operation “start_on”"
                ],
                [
                    "suspend",
                    "refers to the operation “suspend”"
                ],
                [
                    "unpause",
                    "refers to the operation “unpause”"
                ],
                [
                    "update_allowed_operations",
                    "&nbsp;"
                ]
            ]
        },
        {
            "name": "enum vm_power_state",
            "values": [
                [
                    "Halted",
                    "VM is offline and not using any resources"
                ],
                [
                    "Paused",
                    "All resources have been allocated but the VM itself is paused and its vCPUs are not running"
                ],
                [
                    "Running",
                    "Running"
                ],
                [
                    "Suspended",
                    "VM state has been saved to disk and it is nolonger running. Note that disks remain in-use while the VM is suspended."
                ]
            ]
        },
        {
            "name": "enum vmpp_archive_frequency",
            "values": [
                [
                    "always_after_backup",
                    "Archive after backup"
                ],
                [
                    "daily",
                    "Daily archives"
                ],
                [
                    "never",
                    "Never archive"
                ],
                [
                    "weekly",
                    "Weekly backups"
                ]
            ]
        },
        {
            "name": "enum vmpp_archive_target_type",
            "values": [
                [
                    "cifs",
                    "CIFS target config"
                ],
                [
                    "nfs",
                    "NFS target config"
                ],
                [
                    "none",
                    "No target config"
                ]
            ]
        },
        {
            "name": "enum vmpp_backup_frequency",
            "values": [
                [
                    "daily",
                    "Daily backups"
                ],
                [
                    "hourly",
                    "Hourly backups"
                ],
                [
                    "weekly",
                    "Weekly backups"
                ]
            ]
        },
        {
            "name": "enum vmpp_backup_type",
            "values": [
                [
                    "checkpoint",
                    "The backup is a checkpoint"
                ],
                [
                    "snapshot",
                    "The backup is a snapshot"
                ]
            ]
        },
        {
            "name": "enum vmss_frequency",
            "values": [
                [
                    "daily",
                    "Daily snapshots"
                ],
                [
                    "hourly",
                    "Hourly snapshots"
                ],
                [
                    "weekly",
                    "Weekly snapshots"
                ]
            ]
        },
        {
            "name": "enum vmss_type",
            "values": [
                [
                    "checkpoint",
                    "The snapshot is a checkpoint"
                ],
                [
                    "snapshot",
                    "The snapshot is a disk snapshot"
                ],
                [
                    "snapshot_with_quiesce",
                    "Support for VSS has been removed."
                ]
            ]
        },
        {
            "name": "enum vtpm_operations",
            "values": [
                [
                    "destroy",
                    "Destroy a VTPM"
                ]
            ]
        },
        {
            "name": "enum vusb_operations",
            "values": [
                [
                    "attach",
                    "Attempting to attach this VUSB to a VM"
                ],
                [
                    "plug",
                    "Attempting to plug this VUSB into a VM"
                ],
                [
                    "unplug",
                    "Attempting to hot unplug this VUSB"
                ]
            ]
        }
    ],
    "classes": [
        {
            "name": "auth",
            "state": "supported",
            "desc": "Management of remote authentication services",
            "fields": [],
            "rpcs": [
                {
                    "name": "get_group_membership",
                    "status": "supported",
                    "desc": "This calls queries the external directory service to obtain the transitively-closed set of groups that the the subject_identifier is member of.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "subject_identifier",
                            "desc": "A string containing the subject_identifier, unique in the external directory service"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "set of subject_identifiers that provides the group membership of subject_identifier passed as argument, it contains, recursively, all groups a subject_identifier is member of.",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_subject_identifier",
                    "status": "supported",
                    "desc": "This call queries the external directory service to obtain the subject_identifier as a string from the human-readable subject_name",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "subject_name",
                            "desc": "The human-readable subject_name, such as a username or a groupname"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "the subject_identifier obtained from the external directory service",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_subject_information_from_identifier",
                    "status": "supported",
                    "desc": "This call queries the external directory service to obtain the user information (e.g. username, organization etc) from the specified subject_identifier",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "subject_identifier",
                            "desc": "A string containing the subject_identifier, unique in the external directory service"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "key-value pairs containing at least a key called subject_name",
                        "errs": []
                    },
                    "minrole": "read-only"
                }
            ]
        },
        {
            "name": "blob",
            "state": "supported",
            "desc": "A placeholder for a binary blob",
            "fields": [
                {
                    "field": "last_updated",
                    "type": "datetime",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Time at which the data in the blob was last updated"
                },
                {
                    "field": "mime_type",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "The mime type associated with this object. Defaults to ‘application/octet-stream’ if the empty string is supplied"
                },
                {
                    "field": "name_description",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "a notes field containing human-readable description"
                },
                {
                    "field": "name_label",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "a human-readable name"
                },
                {
                    "field": "public",
                    "type": "bool",
                    "qualifier": "<em>RW</em>",
                    "desc": "True if the blob is publicly accessible"
                },
                {
                    "field": "size",
                    "type": "int",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Size of the binary data, in bytes"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                }
            ],
            "rpcs": [
                {
                    "name": "create",
                    "status": "supported",
                    "desc": "Create a placeholder for a binary blob",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "mime_type",
                            "desc": "The mime-type of the blob. Defaults to ‘application/octet-stream’ if the empty string is supplied"
                        },
                        {
                            "type": "bool",
                            "name": "public",
                            "desc": "True if the blob should be publicly available"
                        }
                    ],
                    "return": {
                        "type": "blob ref",
                        "desc": "The reference to the created blob",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "blob ref",
                            "name": "self",
                            "desc": "The reference of the blob to destroy"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the blobs known to the system.",
                    "args": [],
                    "return": {
                        "type": "blob ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of blob references to blob records for all blobs known to the system.",
                    "args": [],
                    "return": {
                        "type": "(blob ref -&gt; blob record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_name_label",
                    "status": "supported",
                    "desc": "Get all the blob instances with the given label.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "label",
                            "desc": "label of object to return"
                        }
                    ],
                    "return": {
                        "type": "blob ref set",
                        "desc": "references to objects with matching names",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the blob instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "blob ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_last_updated",
                    "status": "supported",
                    "desc": "Get the last_updated field of the given blob.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "blob ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "datetime",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_mime_type",
                    "status": "supported",
                    "desc": "Get the mime_type field of the given blob.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "blob ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_description",
                    "status": "supported",
                    "desc": "Get the name/description field of the given blob.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "blob ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_label",
                    "status": "supported",
                    "desc": "Get the name/label field of the given blob.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "blob ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_public",
                    "status": "supported",
                    "desc": "Get the public field of the given blob.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "blob ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given blob.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "blob ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "blob record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_size",
                    "status": "supported",
                    "desc": "Get the size field of the given blob.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "blob ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given blob.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "blob ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "set_name_description",
                    "status": "supported",
                    "desc": "Set the name/description field of the given blob.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "blob ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_name_label",
                    "status": "supported",
                    "desc": "Set the name/label field of the given blob.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "blob ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_public",
                    "status": "supported",
                    "desc": "Set the public field of the given blob.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "blob ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "bool",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                }
            ]
        },
        {
            "name": "bond",
            "state": "supported",
            "desc": "Fields for class: Bond<a name=\"fields-for-class-bond\" class=\"anchor\" href=\"#fields-for-class-bond\"></a>",
            "fields": [],
            "rpcs": []
        },
        {
            "name": "",
            "state": "supported",
            "desc": "Add the given key-value pair to the other_config field of the given Bond.",
            "fields": [],
            "rpcs": []
        },
        {
            "name": "",
            "state": "supported",
            "desc": "<em>Minimum Role:</em> pool-operator",
            "fields": [],
            "rpcs": []
        },
        {
            "name": "",
            "state": "supported",
            "desc": "<em>Signature:</em>",
            "fields": [],
            "rpcs": []
        },
        {
            "name": "",
            "state": "supported",
            "desc": "<em>Return Type:</em> <code class=\"language-plaintext highlighter-rouge\">Bond ref</code>",
            "fields": [],
            "rpcs": []
        },
        {
            "name": "",
            "state": "supported",
            "desc": "<em>Signature:</em>",
            "fields": [],
            "rpcs": []
        },
        {
            "name": "",
            "state": "supported",
            "desc": "<em>Return Type:</em> <code class=\"language-plaintext highlighter-rouge\">void</code>",
            "fields": [],
            "rpcs": []
        },
        {
            "name": "",
            "state": "supported",
            "desc": "<div class=\"highlight\"> <pre class=\"highlight\"><code>Bond ref set get_all (session ref session_id) &lt;!--NeedCopy--&gt; </code></pre> </div>",
            "fields": [],
            "rpcs": [
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of Bond references to Bond records for all Bonds known to the system.",
                    "args": [],
                    "return": {
                        "type": "(Bond ref -&gt; Bond record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_auto_update_mac",
                    "status": "supported",
                    "desc": "Get the auto_update_mac field of the given Bond.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Bond ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the Bond instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "Bond ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_links_up",
                    "status": "supported",
                    "desc": "Get the links_up field of the given Bond.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Bond ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_master",
                    "status": "supported",
                    "desc": "Get the master field of the given Bond.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Bond ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PIF ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_mode",
                    "status": "supported",
                    "desc": "Get the mode field of the given Bond.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Bond ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bond_mode",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given Bond.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Bond ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_primary_slave",
                    "status": "supported",
                    "desc": "Get the primary_slave field of the given Bond.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Bond ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PIF ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_properties",
                    "status": "supported",
                    "desc": "Get the properties field of the given Bond.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Bond ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given Bond.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Bond ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "Bond record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_slaves",
                    "status": "supported",
                    "desc": "Get the slaves field of the given Bond.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Bond ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PIF ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given Bond.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Bond ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given Bond. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Bond ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_mode",
                    "status": "supported",
                    "desc": "Change the bond mode",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Bond ref",
                            "name": "self",
                            "desc": "The bond"
                        },
                        {
                            "type": "bond_mode",
                            "name": "value",
                            "desc": "The new bond mode"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given Bond.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Bond ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_property",
                    "status": "supported",
                    "desc": "Set the value of a property of the bond",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Bond ref",
                            "name": "self",
                            "desc": "The bond"
                        },
                        {
                            "type": "string",
                            "name": "name",
                            "desc": "The property name"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "The property value"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                }
            ]
        },
        {
            "name": "certificate",
            "state": "supported",
            "desc": "Description",
            "fields": [
                {
                    "field": "fingerprint",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "The certificate’s SHA256 fingerprint / hash"
                },
                {
                    "field": "host",
                    "type": "host ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "The host where the certificate is installed"
                },
                {
                    "field": "name",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The name of the certificate, only present on certificates of type ‘ca’"
                },
                {
                    "field": "not_after",
                    "type": "datetime",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Date before which the certificate is valid"
                },
                {
                    "field": "not_before",
                    "type": "datetime",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Date after which the certificate is valid"
                },
                {
                    "field": "type",
                    "type": "certificate_type",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The type of the certificate, either ‘ca’, ‘host’ or ‘host_internal’"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                }
            ],
            "rpcs": [
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the Certificates known to the system.",
                    "args": [],
                    "return": {
                        "type": "Certificate ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of Certificate references to Certificate records for all Certificates known to the system.",
                    "args": [],
                    "return": {
                        "type": "(Certificate ref -&gt; Certificate record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the Certificate instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "Certificate ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_fingerprint",
                    "status": "supported",
                    "desc": "Get the fingerprint field of the given Certificate.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Certificate ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_host",
                    "status": "supported",
                    "desc": "Get the host field of the given Certificate.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Certificate ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name",
                    "status": "supported",
                    "desc": "Get the name field of the given Certificate.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Certificate ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_not_after",
                    "status": "supported",
                    "desc": "Get the not_after field of the given Certificate.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Certificate ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "datetime",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_not_before",
                    "status": "supported",
                    "desc": "Get the not_before field of the given Certificate.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Certificate ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "datetime",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given Certificate.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Certificate ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "Certificate record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_type",
                    "status": "supported",
                    "desc": "Get the type field of the given Certificate.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Certificate ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "certificate_type",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given Certificate.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Certificate ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                }
            ]
        },
        {
            "name": "cluster",
            "state": "supported",
            "desc": "Cluster-wide Cluster metadata",
            "fields": [
                {
                    "field": "allowed_operations",
                    "type": "cluster_operation set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client."
                },
                {
                    "field": "cluster_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Contains read-only settings for the cluster, such as timeouts and other options. It can only be set at cluster create time"
                },
                {
                    "field": "cluster_hosts",
                    "type": "Cluster_host ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "A list of the cluster_host objects associated with the Cluster"
                },
                {
                    "field": "cluster_stack",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Simply the string ‘corosync’. No other cluster stacks are currently supported"
                },
                {
                    "field": "cluster_token",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "The secret key used by xapi-clusterd when it talks to itself on other hosts"
                },
                {
                    "field": "current_operations",
                    "type": "(string -&gt; cluster_operation) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task."
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "Additional configuration"
                },
                {
                    "field": "pending_forget",
                    "type": "string set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Internal field used by Host.destroy to store the IP of cluster members marked as permanently dead but not yet removed"
                },
                {
                    "field": "pool_auto_join",
                    "type": "bool",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "True if automatically joining new pool members to the cluster. This will be <code class=\"language-plaintext highlighter-rouge\">true</code> in the first release"
                },
                {
                    "field": "token_timeout",
                    "type": "float",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "The corosync token timeout in seconds"
                },
                {
                    "field": "token_timeout_coefficient",
                    "type": "float",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "The corosync token timeout coefficient in seconds"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_other_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the other_config field of the given Cluster.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "create",
                    "status": "supported",
                    "desc": "Creates a Cluster object and one Cluster_host object as its first member",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "PIF",
                            "desc": "The PIF to connect the cluster’s first cluster_host to"
                        },
                        {
                            "type": "string",
                            "name": "cluster_stack",
                            "desc": "simply the string ‘corosync’. No other cluster stacks are currently supported"
                        },
                        {
                            "type": "bool",
                            "name": "pool_auto_join",
                            "desc": "true if xapi is automatically joining new pool members to the cluster"
                        },
                        {
                            "type": "float",
                            "name": "token_timeout",
                            "desc": "Corosync token timeout in seconds"
                        },
                        {
                            "type": "float",
                            "name": "token_timeout_coefficient",
                            "desc": "Corosync token timeout coefficient in seconds"
                        }
                    ],
                    "return": {
                        "type": "Cluster ref",
                        "desc": "the new Cluster",
                        "errs": [
                            "INVALID_CLUSTER_STACK",
                            "INVALID_VALUE",
                            "PIF_ALLOWS_UNPLUG",
                            "REQUIRED_PIF_IS_UNPLUGGED"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "Destroys a Cluster object and the one remaining Cluster_host member",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster ref",
                            "name": "self",
                            "desc": "the Cluster to destroy"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "CLUSTER_DOES_NOT_HAVE_ONE_NODE",
                            "CLUSTER_STACK_IN_USE"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the Clusters known to the system.",
                    "args": [],
                    "return": {
                        "type": "Cluster ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of Cluster references to Cluster records for all Clusters known to the system.",
                    "args": [],
                    "return": {
                        "type": "(Cluster ref -&gt; Cluster record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_allowed_operations",
                    "status": "supported",
                    "desc": "Get the allowed_operations field of the given Cluster.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "cluster_operation set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the Cluster instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "Cluster ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_cluster_config",
                    "status": "supported",
                    "desc": "Get the cluster_config field of the given Cluster.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_cluster_hosts",
                    "status": "supported",
                    "desc": "Get the cluster_hosts field of the given Cluster.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "Cluster_host ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_cluster_stack",
                    "status": "supported",
                    "desc": "Get the cluster_stack field of the given Cluster.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_cluster_token",
                    "status": "supported",
                    "desc": "Get the cluster_token field of the given Cluster.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_current_operations",
                    "status": "supported",
                    "desc": "Get the current_operations field of the given Cluster.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; cluster_operation) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_network",
                    "status": "supported",
                    "desc": "Returns the network used by the cluster for inter-host communication, i.e. the network shared by all cluster host PIFs",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster ref",
                            "name": "self",
                            "desc": "the Cluster with the network"
                        }
                    ],
                    "return": {
                        "type": "network ref",
                        "desc": "network of cluster",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given Cluster.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pending_forget",
                    "status": "supported",
                    "desc": "Get the pending_forget field of the given Cluster.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pool_auto_join",
                    "status": "supported",
                    "desc": "Get the pool_auto_join field of the given Cluster.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given Cluster.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "Cluster record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_token_timeout",
                    "status": "supported",
                    "desc": "Get the token_timeout field of the given Cluster.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "float",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_token_timeout_coefficient",
                    "status": "supported",
                    "desc": "Get the token_timeout_coefficient field of the given Cluster.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "float",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given Cluster.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "pool_create",
                    "status": "supported",
                    "desc": "Attempt to create a Cluster from the entire pool",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "network",
                            "desc": "the single network on which corosync carries out its inter-host communications"
                        },
                        {
                            "type": "string",
                            "name": "cluster_stack",
                            "desc": "simply the string ‘corosync’. No other cluster stacks are currently supported"
                        },
                        {
                            "type": "float",
                            "name": "token_timeout",
                            "desc": "Corosync token timeout in seconds"
                        },
                        {
                            "type": "float",
                            "name": "token_timeout_coefficient",
                            "desc": "Corosync token timeout coefficient in seconds"
                        }
                    ],
                    "return": {
                        "type": "Cluster ref",
                        "desc": "the new Cluster",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "pool_destroy",
                    "status": "supported",
                    "desc": "Attempt to destroy the Cluster_host objects for all hosts in the pool and then destroy the Cluster.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster ref",
                            "name": "self",
                            "desc": "The cluster to destroy."
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "CLUSTER_STACK_IN_USE",
                            "CLUSTERING_DISABLED",
                            "CLUSTER_HOST_IS_LAST"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "pool_force_destroy",
                    "status": "supported",
                    "desc": "Attempt to force destroy the Cluster_host objects, and then destroy the Cluster.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster ref",
                            "name": "self",
                            "desc": "The cluster to force destroy."
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "CLUSTER_FORCE_DESTROY_FAILED"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "pool_resync",
                    "status": "supported",
                    "desc": "Resynchronise the cluster_host objects across the pool. Creates them where they need creating and then plugs them",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster ref",
                            "name": "self",
                            "desc": "The cluster to resync"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given Cluster. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given Cluster.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                }
            ]
        },
        {
            "name": "cluster_host",
            "state": "supported",
            "desc": "Cluster member metadata",
            "fields": [
                {
                    "field": "allowed_operations",
                    "type": "cluster_host_operation set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client."
                },
                {
                    "field": "cluster",
                    "type": "Cluster ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Reference to the Cluster object"
                },
                {
                    "field": "current_operations",
                    "type": "(string -&gt; cluster_host_operation) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task."
                },
                {
                    "field": "enabled",
                    "type": "bool",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Whether the cluster host believes that clustering should be enabled on this host"
                },
                {
                    "field": "host",
                    "type": "host ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Reference to the Host object"
                },
                {
                    "field": "joined",
                    "type": "bool",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Whether the cluster host has joined the cluster"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Additional configuration"
                },
                {
                    "field": "PIF",
                    "type": "PIF ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Reference to the PIF object"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                }
            ],
            "rpcs": [
                {
                    "name": "create",
                    "status": "supported",
                    "desc": "Add a new host to an existing cluster.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster ref",
                            "name": "cluster",
                            "desc": "Cluster to join"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "new cluster member"
                        },
                        {
                            "type": "PIF ref",
                            "name": "pif",
                            "desc": "Network interface to use for communication"
                        }
                    ],
                    "return": {
                        "type": "Cluster_host ref",
                        "desc": "the newly created cluster_host object",
                        "errs": [
                            "PIF_NOT_ATTACHED_TO_HOST",
                            "NO_CLUSTER_HOSTS_REACHABLE"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "Remove a host from an existing cluster.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster_host ref",
                            "name": "self",
                            "desc": "the cluster_host to remove from the cluster"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "CLUSTER_STACK_IN_USE",
                            "CLUSTERING_DISABLED",
                            "CLUSTER_HOST_IS_LAST"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "disable",
                    "status": "supported",
                    "desc": "Disable cluster membership for an enabled cluster host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster_host ref",
                            "name": "self",
                            "desc": "the cluster_host to disable"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "CLUSTER_STACK_IN_USE"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "enable",
                    "status": "supported",
                    "desc": "Enable cluster membership for a disabled cluster host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster_host ref",
                            "name": "self",
                            "desc": "the cluster_host to enable"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "PIF_ALLOWS_UNPLUG",
                            "REQUIRED_PIF_IS_UNPLUGGED"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "force_destroy",
                    "status": "supported",
                    "desc": "Remove a host from an existing cluster forcefully.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster_host ref",
                            "name": "self",
                            "desc": "the cluster_host to remove from the cluster"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "CLUSTER_STACK_IN_USE"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the Cluster_hosts known to the system.",
                    "args": [],
                    "return": {
                        "type": "Cluster_host ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of Cluster_host references to Cluster_host records for all Cluster_hosts known to the system.",
                    "args": [],
                    "return": {
                        "type": "(Cluster_host ref -&gt; Cluster_host record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_allowed_operations",
                    "status": "supported",
                    "desc": "Get the allowed_operations field of the given Cluster_host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster_host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "cluster_host_operation set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the Cluster_host instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "Cluster_host ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_cluster",
                    "status": "supported",
                    "desc": "Get the cluster field of the given Cluster_host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster_host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "Cluster ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_current_operations",
                    "status": "supported",
                    "desc": "Get the current_operations field of the given Cluster_host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster_host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; cluster_host_operation) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_enabled",
                    "status": "supported",
                    "desc": "Get the enabled field of the given Cluster_host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster_host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_host",
                    "status": "supported",
                    "desc": "Get the host field of the given Cluster_host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster_host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_joined",
                    "status": "supported",
                    "desc": "Get the joined field of the given Cluster_host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster_host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given Cluster_host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster_host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pif",
                    "status": "supported",
                    "desc": "Get the PIF field of the given Cluster_host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster_host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PIF ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given Cluster_host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster_host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "Cluster_host record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given Cluster_host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Cluster_host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                }
            ]
        },
        {
            "name": "console",
            "state": "supported",
            "desc": "A console",
            "fields": [
                {
                    "field": "location",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "URI for the console service"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "additional configuration"
                },
                {
                    "field": "protocol",
                    "type": "console_protocol",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "the protocol used by this console"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                },
                {
                    "field": "VM",
                    "type": "VM ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "VM to which this console is attached"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_other_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the other_config field of the given console.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "console ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "create",
                    "status": "supported",
                    "desc": "Create a new console instance, and return its handle.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "console record",
                            "name": "args",
                            "desc": "All constructor arguments"
                        }
                    ],
                    "return": {
                        "type": "console ref",
                        "desc": "reference to the newly created object",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "Destroy the specified console instance.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "console ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the consoles known to the system.",
                    "args": [],
                    "return": {
                        "type": "console ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of console references to console records for all consoles known to the system.",
                    "args": [],
                    "return": {
                        "type": "(console ref -&gt; console record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the console instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "console ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_location",
                    "status": "supported",
                    "desc": "Get the location field of the given console.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "console ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given console.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "console ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_protocol",
                    "status": "supported",
                    "desc": "Get the protocol field of the given console.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "console ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "console_protocol",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given console.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "console ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "console record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given console.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "console ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vm",
                    "status": "supported",
                    "desc": "Get the VM field of the given console.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "console ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VM ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given console. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "console ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given console.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "console ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                }
            ]
        },
        {
            "name": "crashdump",
            "state": "supported",
            "desc": "A VM crashdump",
            "fields": [
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "<strong>Deprecated</strong>. additional configuration"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Deprecated</strong>. Unique identifier/object reference"
                },
                {
                    "field": "VDI",
                    "type": "VDI ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "<strong>Deprecated</strong>. the virtual disk"
                },
                {
                    "field": "VM",
                    "type": "VM ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "<strong>Deprecated</strong>. the virtual machine"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_other_config",
                    "status": "deprecated",
                    "desc": "Add the given key-value pair to the other_config field of the given crashdump.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "crashdump ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "destroy",
                    "status": "deprecated",
                    "desc": "Destroy the specified crashdump",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "crashdump ref",
                            "name": "self",
                            "desc": "The crashdump to destroy"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_all",
                    "status": "deprecated",
                    "desc": "Return a list of all the crashdumps known to the system.",
                    "args": [],
                    "return": {
                        "type": "crashdump ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "deprecated",
                    "desc": "Return a map of crashdump references to crashdump records for all crashdumps known to the system.",
                    "args": [],
                    "return": {
                        "type": "(crashdump ref -&gt; crashdump record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "deprecated",
                    "desc": "Get a reference to the crashdump instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "crashdump ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "deprecated",
                    "desc": "Get the other_config field of the given crashdump.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "crashdump ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "deprecated",
                    "desc": "Get a record containing the current state of the given crashdump.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "crashdump ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "crashdump record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "deprecated",
                    "desc": "Get the uuid field of the given crashdump.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "crashdump ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vdi",
                    "status": "deprecated",
                    "desc": "Get the VDI field of the given crashdump.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "crashdump ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VDI ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vm",
                    "status": "deprecated",
                    "desc": "Get the VM field of the given crashdump.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "crashdump ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VM ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "deprecated",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given crashdump. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "crashdump ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_other_config",
                    "status": "deprecated",
                    "desc": "Set the other_config field of the given crashdump.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "crashdump ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                }
            ],
            "supported": "deprecated"
        },
        {
            "name": "data_source",
            "state": "supported",
            "desc": "Data sources for logging in RRDs",
            "fields": [
                {
                    "field": "enabled",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "true if the data source is being logged"
                },
                {
                    "field": "max",
                    "type": "float",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "the maximum value of the data source"
                },
                {
                    "field": "min",
                    "type": "float",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "the minimum value of the data source"
                },
                {
                    "field": "name_description",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "a notes field containing human-readable description"
                },
                {
                    "field": "name_label",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "a human-readable name"
                },
                {
                    "field": "standard",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "true if the data source is enabled by default. Non-default data sources cannot be disabled"
                },
                {
                    "field": "units",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "the units of the value"
                },
                {
                    "field": "value",
                    "type": "float",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "current value of the data source"
                }
            ],
            "rpcs": []
        },
        {
            "name": "dr_task",
            "deprecated": false,
            "desc": "DR task",
            "fields": [
                {
                    "field": "introduced_SRs",
                    "type": "SR ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "All SRs introduced by this appliance"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                }
            ],
            "rpcs": [
                {
                    "name": "create",
                    "status": "supported",
                    "desc": "Create a disaster recovery task which will query the supplied list of devices",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "type",
                            "desc": "The SR driver type of the SRs to introduce"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "device_config",
                            "desc": "The device configuration of the SRs to introduce"
                        },
                        {
                            "type": "string set",
                            "name": "whitelist",
                            "desc": "The devices to use for disaster recovery"
                        }
                    ],
                    "return": {
                        "type": "DR_task ref",
                        "desc": "The reference to the created task",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "Destroy the disaster recovery task, detaching and forgetting any SRs introduced which are no longer required",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "DR_task ref",
                            "name": "self",
                            "desc": "The disaster recovery task to destroy"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the DR_tasks known to the system.",
                    "args": [],
                    "return": {
                        "type": "DR_task ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of DR_task references to DR_task records for all DR_tasks known to the system.",
                    "args": [],
                    "return": {
                        "type": "(DR_task ref -&gt; DR_task record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the DR_task instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "DR_task ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_introduced_srs",
                    "status": "supported",
                    "desc": "Get the introduced_SRs field of the given DR_task.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "DR_task ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "SR ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given DR_task.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "DR_task ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "DR_task record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given DR_task.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "DR_task ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                }
            ]
        },
        {
            "name": "event",
            "state": "supported",
            "desc": "Asynchronous event registration and handling",
            "fields": [
                {
                    "field": "class",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "The name of the class of the object that changed"
                },
                {
                    "field": "id",
                    "type": "int",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "An ID, monotonically increasing, and local to the current session"
                },
                {
                    "field": "obj_uuid",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "<strong>Deprecated</strong>. The uuid of the object that changed"
                },
                {
                    "field": "operation",
                    "type": "event_operation",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "The operation that was performed"
                },
                {
                    "field": "ref",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "A reference to the object that changed"
                },
                {
                    "field": "timestamp",
                    "type": "datetime",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "<strong>Deprecated</strong>. The time at which the event occurred"
                },
                {
                    "field": "snapshot",
                    "type": "&lt;object record&gt;",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The record of the database object that was added, changed or deleted"
                }
            ],
            "rpcs": [
                {
                    "name": "from",
                    "status": "supported",
                    "desc": "Blocking call which returns a new token and a (possibly empty) batch of events. The returned token can be used in subsequent calls to this function.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string set",
                            "name": "classes",
                            "desc": "register for events for the indicated classes"
                        },
                        {
                            "type": "string",
                            "name": "token",
                            "desc": "A token representing the point from which to generate database events. The empty string represents the beginning."
                        },
                        {
                            "type": "float",
                            "name": "timeout",
                            "desc": "Return after this many seconds if no events match"
                        }
                    ],
                    "return": {
                        "type": "an event batch",
                        "desc": "a structure consisting of a token (‘token’), a map of valid references per object type (‘valid_ref_counts’), and a set of event records (‘events’).",
                        "errs": [
                            "SESSION_NOT_REGISTERED",
                            "EVENTS_LOST"
                        ]
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_current_id",
                    "status": "supported",
                    "desc": "Return the ID of the next event to be generated by the system",
                    "args": [],
                    "return": {
                        "type": "int",
                        "desc": "the event ID",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "inject",
                    "status": "supported",
                    "desc": "Injects an artificial event on the given object and returns the corresponding ID in the form of a token, which can be used as a point of reference for database events. For example, to check whether an object has reached the right state before attempting an operation, one can inject an artificial event on the object and wait until the token returned by consecutive event.from calls is lexicographically greater than the one returned by event.inject.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "class",
                            "desc": "class of the object"
                        },
                        {
                            "type": "string",
                            "name": "ref",
                            "desc": "A reference to the object that will be changed."
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "the event ID in the form of a token",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "next",
                    "status": "deprecated",
                    "desc": "Blocking call which returns a (possibly empty) batch of events. This method is only recommended for legacy use. New development should use event.from which supercedes this method.",
                    "args": [],
                    "return": {
                        "type": "event record set",
                        "desc": "A set of events",
                        "errs": [
                            "SESSION_NOT_REGISTERED",
                            "EVENTS_LOST"
                        ]
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "register",
                    "status": "deprecated",
                    "desc": "Registers this session with the event system for a set of given classes. This method is only recommended for legacy use in conjunction with event.next.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string set",
                            "name": "classes",
                            "desc": "the classes for which the session will register with the event system; specifying * as the desired class will register for all classes"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "unregister",
                    "status": "deprecated",
                    "desc": "Removes this session’s registration with the event system for a set of given classes. This method is only recommended for legacy use in conjunction with event.next.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string set",
                            "name": "classes",
                            "desc": "the classes for which the session’s registration with the event system will be removed"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "read-only"
                }
            ]
        },
        {
            "name": "feature",
            "state": "supported",
            "desc": "A new piece of functionality",
            "fields": [
                {
                    "field": "enabled",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Indicates whether the feature is enabled"
                },
                {
                    "field": "experimental",
                    "type": "bool",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Indicates whether the feature is experimental (as opposed to stable and fully supported)"
                },
                {
                    "field": "host",
                    "type": "host ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The host where this feature is available"
                },
                {
                    "field": "name_description",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "a notes field containing human-readable description"
                },
                {
                    "field": "name_label",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "a human-readable name"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                },
                {
                    "field": "version",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "The version of this feature"
                }
            ],
            "rpcs": [
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the Features known to the system.",
                    "args": [],
                    "return": {
                        "type": "Feature ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of Feature references to Feature records for all Features known to the system.",
                    "args": [],
                    "return": {
                        "type": "(Feature ref -&gt; Feature record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_name_label",
                    "status": "supported",
                    "desc": "Get all the Feature instances with the given label.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "label",
                            "desc": "label of object to return"
                        }
                    ],
                    "return": {
                        "type": "Feature ref set",
                        "desc": "references to objects with matching names",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the Feature instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "Feature ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_enabled",
                    "status": "supported",
                    "desc": "Get the enabled field of the given Feature.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Feature ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_experimental",
                    "status": "supported",
                    "desc": "Get the experimental field of the given Feature.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Feature ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_host",
                    "status": "supported",
                    "desc": "Get the host field of the given Feature.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Feature ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_description",
                    "status": "supported",
                    "desc": "Get the name/description field of the given Feature.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Feature ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_label",
                    "status": "supported",
                    "desc": "Get the name/label field of the given Feature.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Feature ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given Feature.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Feature ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "Feature record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given Feature.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Feature ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_version",
                    "status": "supported",
                    "desc": "Get the version field of the given Feature.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Feature ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                }
            ]
        },
        {
            "name": "gpu_group",
            "state": "supported",
            "desc": "A group of compatible GPUs across the resource pool",
            "fields": [
                {
                    "field": "allocation_algorithm",
                    "type": "allocation_algorithm",
                    "qualifier": "<em>RW</em>",
                    "desc": "Current allocation of vGPUs to pGPUs for this group"
                },
                {
                    "field": "enabled_VGPU_types",
                    "type": "VGPU_type ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "vGPU types supported on at least one of the pGPUs in this group"
                },
                {
                    "field": "GPU_types",
                    "type": "string set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "List of GPU types (vendor+device ID) that can be in this group"
                },
                {
                    "field": "name_description",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "a notes field containing human-readable description"
                },
                {
                    "field": "name_label",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "a human-readable name"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "Additional configuration"
                },
                {
                    "field": "PGPUs",
                    "type": "PGPU ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "List of pGPUs in the group"
                },
                {
                    "field": "supported_VGPU_types",
                    "type": "VGPU_type ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "vGPU types supported on at least one of the pGPUs in this group"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                },
                {
                    "field": "VGPUs",
                    "type": "VGPU ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "List of vGPUs using the group"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_other_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the other_config field of the given GPU_group.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "GPU_group ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "create",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "name_label",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "string",
                            "name": "name_description",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "other_config",
                            "desc": "&nbsp;"
                        }
                    ],
                    "return": {
                        "type": "GPU_group ref",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "GPU_group ref",
                            "name": "self",
                            "desc": "The GPU group to destroy"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the GPU_groups known to the system.",
                    "args": [],
                    "return": {
                        "type": "GPU_group ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of GPU_group references to GPU_group records for all GPU_groups known to the system.",
                    "args": [],
                    "return": {
                        "type": "(GPU_group ref -&gt; GPU_group record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_allocation_algorithm",
                    "status": "supported",
                    "desc": "Get the allocation_algorithm field of the given GPU_group.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "GPU_group ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "allocation_algorithm",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_name_label",
                    "status": "supported",
                    "desc": "Get all the GPU_group instances with the given label.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "label",
                            "desc": "label of object to return"
                        }
                    ],
                    "return": {
                        "type": "GPU_group ref set",
                        "desc": "references to objects with matching names",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the GPU_group instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "GPU_group ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_enabled_vgpu_types",
                    "status": "supported",
                    "desc": "Get the enabled_VGPU_types field of the given GPU_group.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "GPU_group ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VGPU_type ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_gpu_types",
                    "status": "supported",
                    "desc": "Get the GPU_types field of the given GPU_group.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "GPU_group ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_description",
                    "status": "supported",
                    "desc": "Get the name/description field of the given GPU_group.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "GPU_group ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_label",
                    "status": "supported",
                    "desc": "Get the name/label field of the given GPU_group.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "GPU_group ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given GPU_group.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "GPU_group ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pgpus",
                    "status": "supported",
                    "desc": "Get the PGPUs field of the given GPU_group.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "GPU_group ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PGPU ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given GPU_group.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "GPU_group ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "GPU_group record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_remaining_capacity",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "GPU_group ref",
                            "name": "self",
                            "desc": "The GPU group to query"
                        },
                        {
                            "type": "VGPU_type ref",
                            "name": "vgpu_type",
                            "desc": "The VGPU_type for which the remaining capacity will be calculated"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "The number of VGPUs of the given type which can still be started on the PGPUs in the group",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_supported_vgpu_types",
                    "status": "supported",
                    "desc": "Get the supported_VGPU_types field of the given GPU_group.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "GPU_group ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VGPU_type ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given GPU_group.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "GPU_group ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vgpus",
                    "status": "supported",
                    "desc": "Get the VGPUs field of the given GPU_group.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "GPU_group ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VGPU ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given GPU_group. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "GPU_group ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_allocation_algorithm",
                    "status": "supported",
                    "desc": "Set the allocation_algorithm field of the given GPU_group.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "GPU_group ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "allocation_algorithm",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_name_description",
                    "status": "supported",
                    "desc": "Set the name/description field of the given GPU_group.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "GPU_group ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_name_label",
                    "status": "supported",
                    "desc": "Set the name/label field of the given GPU_group.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "GPU_group ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given GPU_group.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "GPU_group ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                }
            ]
        },
        {
            "name": "host",
            "state": "supported",
            "desc": "A physical host",
            "fields": [
                {
                    "field": "address",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "The address by which this host can be contacted from any other host in the pool"
                },
                {
                    "field": "allowed_operations",
                    "type": "host_allowed_operations set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client."
                },
                {
                    "field": "API_version_major",
                    "type": "int",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "major version number"
                },
                {
                    "field": "API_version_minor",
                    "type": "int",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "minor version number"
                },
                {
                    "field": "API_version_vendor",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "identification of vendor"
                },
                {
                    "field": "API_version_vendor_implementation",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "details of vendor implementation"
                },
                {
                    "field": "bios_strings",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "BIOS strings"
                },
                {
                    "field": "blobs",
                    "type": "(string -&gt; blob ref) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Binary blobs associated with this host"
                },
                {
                    "field": "capabilities",
                    "type": "string set",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Xen capabilities"
                },
                {
                    "field": "certificates",
                    "type": "Certificate ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "List of certificates installed in the host"
                },
                {
                    "field": "chipset_info",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Information about chipset features"
                },
                {
                    "field": "control_domain",
                    "type": "VM ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The control domain (domain 0)"
                },
                {
                    "field": "cpu_configuration",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The CPU configuration on this host. May contain keys such as “nr_nodes”, “sockets_per_node”, “cores_per_socket”, or “threads_per_core”"
                },
                {
                    "field": "cpu_info",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Details about the physical CPUs on this host"
                },
                {
                    "field": "crash_dump_sr",
                    "type": "SR ref",
                    "qualifier": "<em>RW</em>",
                    "desc": "The SR in which VDIs for crash dumps are created"
                },
                {
                    "field": "crashdumps",
                    "type": "host_crashdump ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Set of host crash dumps"
                },
                {
                    "field": "current_operations",
                    "type": "(string -&gt; host_allowed_operations) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task."
                },
                {
                    "field": "display",
                    "type": "host_display",
                    "qualifier": "<em>RW</em>",
                    "desc": "indicates whether the host is configured to output its console to a physical display device"
                },
                {
                    "field": "edition",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Product edition"
                },
                {
                    "field": "editions",
                    "type": "string set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "List of all available product editions"
                },
                {
                    "field": "enabled",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "True if the host is currently enabled"
                },
                {
                    "field": "external_auth_configuration",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "configuration specific to external authentication service"
                },
                {
                    "field": "external_auth_service_name",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "name of external authentication service configured; empty if none configured."
                },
                {
                    "field": "external_auth_type",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "type of external authentication service configured; empty if none configured."
                },
                {
                    "field": "features",
                    "type": "Feature ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "List of features available on this host"
                },
                {
                    "field": "guest_VCPUs_params",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "VCPUs params to apply to all resident guests"
                },
                {
                    "field": "ha_network_peers",
                    "type": "string set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The set of hosts visible via the network from this host"
                },
                {
                    "field": "ha_statefiles",
                    "type": "string set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The set of statefiles accessible from this host"
                },
                {
                    "field": "host_CPUs",
                    "type": "host_cpu ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The physical CPUs on this host"
                },
                {
                    "field": "hostname",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "The hostname of this host"
                },
                {
                    "field": "https_only",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Reflects whether port 80 is open (false) or not (true)"
                },
                {
                    "field": "iscsi_iqn",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "The initiator IQN for the host"
                },
                {
                    "field": "last_software_update",
                    "type": "datetime",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Date and time when the last software update was applied"
                },
                {
                    "field": "latest_synced_updates_applied",
                    "type": "latest_synced_updates_applied_state",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Default as ‘unknown’, ‘yes’ if the host is up to date with updates synced from remote CDN, otherwise ‘no’"
                },
                {
                    "field": "license_params",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "State of the current license"
                },
                {
                    "field": "license_server",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "Contact information of the license server"
                },
                {
                    "field": "local_cache_sr",
                    "type": "SR ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "The SR that is used as a local cache"
                },
                {
                    "field": "logging",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "logging configuration"
                },
                {
                    "field": "memory_overhead",
                    "type": "int",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Virtualization memory overhead (bytes)."
                },
                {
                    "field": "metrics",
                    "type": "host_metrics ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "metrics associated with this host"
                },
                {
                    "field": "multipathing",
                    "type": "bool",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Specifies whether multipathing is enabled"
                },
                {
                    "field": "name_description",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "a notes field containing human-readable description"
                },
                {
                    "field": "name_label",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "a human-readable name"
                },
                {
                    "field": "numa_affinity_policy",
                    "type": "host_numa_affinity_policy",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "NUMA-aware VM memory and vCPU placement policy"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "additional configuration"
                },
                {
                    "field": "patches",
                    "type": "host_patch ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Deprecated</strong>. Set of host patches"
                },
                {
                    "field": "PBDs",
                    "type": "PBD ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "physical blockdevices"
                },
                {
                    "field": "PCIs",
                    "type": "PCI ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "List of PCI devices in the host"
                },
                {
                    "field": "pending_guidances",
                    "type": "update_guidances set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The set of pending guidances after applying updates"
                },
                {
                    "field": "PGPUs",
                    "type": "PGPU ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "List of physical GPUs in the host"
                },
                {
                    "field": "PIFs",
                    "type": "PIF ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "physical network interfaces"
                },
                {
                    "field": "power_on_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The power on config"
                },
                {
                    "field": "power_on_mode",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The power on mode"
                },
                {
                    "field": "PUSBs",
                    "type": "PUSB ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "List of physical USBs in the host"
                },
                {
                    "field": "resident_VMs",
                    "type": "VM ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "list of VMs currently resident on host"
                },
                {
                    "field": "sched_policy",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Scheduler policy currently in force on this host"
                },
                {
                    "field": "software_version",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "version strings"
                },
                {
                    "field": "ssl_legacy",
                    "type": "bool",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "<strong>Deprecated</strong>. Allow SSLv3 protocol and ciphersuites as used by older server versions. This controls both incoming and outgoing connections. When this is set to a different value, the host immediately restarts its SSL/TLS listening service; typically this takes less than a second but existing connections to it will be broken. API login sessions will remain valid."
                },
                {
                    "field": "supported_bootloaders",
                    "type": "string set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "a list of the bootloaders installed on the machine"
                },
                {
                    "field": "suspend_image_sr",
                    "type": "SR ref",
                    "qualifier": "<em>RW</em>",
                    "desc": "The SR in which VDIs for suspend images are created"
                },
                {
                    "field": "tags",
                    "type": "string set",
                    "qualifier": "<em>RW</em>",
                    "desc": "user-specified tags for categorization purposes"
                },
                {
                    "field": "tls_verification_enabled",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "True if this host has TLS verifcation enabled"
                },
                {
                    "field": "uefi_certificates",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "<strong>Deprecated</strong>. The UEFI certificates allowing Secure Boot"
                },
                {
                    "field": "updates",
                    "type": "pool_update ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Set of updates"
                },
                {
                    "field": "updates_requiring_reboot",
                    "type": "pool_update ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "List of updates which require reboot"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                },
                {
                    "field": "virtual_hardware_platform_versions",
                    "type": "int set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The set of versions of the virtual hardware platform that the host can offer to its guests"
                }
            ],
            "rpcs": [
                {
                    "name": "add_tags",
                    "status": "supported",
                    "desc": "Add the given value to the tags field of the given host. If the value is already in that Set, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "add_to_guest_vcpus_params",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the guest_VCPUs_params field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "add_to_license_server",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the license_server field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "add_to_logging",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the logging field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "add_to_other_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the other_config field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "apply_edition",
                    "status": "supported",
                    "desc": "Change to another edition, or reactivate the current edition after a license has expired. This may be subject to the successful checkout of an appropriate license.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host"
                        },
                        {
                            "type": "string",
                            "name": "edition",
                            "desc": "The requested edition"
                        },
                        {
                            "type": "bool",
                            "name": "force",
                            "desc": "Update the license params even if the apply call fails"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "apply_recommended_guidances",
                    "status": "removed",
                    "desc": "apply all recommended guidances both on the host and on all HVM VMs on the host after updates are applied on the host",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "The host whose recommended guidances will be applied"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "apply_updates",
                    "status": "supported",
                    "desc": "apply updates from current enabled repository on a host",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "The host where updates will be applied"
                        },
                        {
                            "type": "string",
                            "name": "hash",
                            "desc": "The hash of updateinfo to be applied which is returned by previous pool.sync_udpates"
                        }
                    ],
                    "return": {
                        "type": "string set set",
                        "desc": "The list of results after applying updates, including livepatch apply failures and recommended guidances",
                        "errs": []
                    },
                    "minrole": "client-cert"
                },
                {
                    "name": "assert_can_evacuate",
                    "status": "supported",
                    "desc": "Check this host can be evacuated.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host to evacuate"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "backup_rrds",
                    "status": "supported",
                    "desc": "This causes the RRDs to be backed up to the master",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "Schedule a backup of the RRDs of this host"
                        },
                        {
                            "type": "float",
                            "name": "delay",
                            "desc": "Delay in seconds from when the call is received to perform the backup"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "bugreport_upload",
                    "status": "supported",
                    "desc": "Run xen-bugtool --yestoall and upload the output to support",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host on which to run xen-bugtool"
                        },
                        {
                            "type": "string",
                            "name": "url",
                            "desc": "The URL to upload to"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "options",
                            "desc": "Extra configuration operations"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "call_extension",
                    "status": "supported",
                    "desc": "Call an API extension on this host",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host"
                        },
                        {
                            "type": "string",
                            "name": "call",
                            "desc": "Rpc call for the extension"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "Result from the extension",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "call_plugin",
                    "status": "supported",
                    "desc": "Call an API plugin on this host",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host"
                        },
                        {
                            "type": "string",
                            "name": "plugin",
                            "desc": "The name of the plugin"
                        },
                        {
                            "type": "string",
                            "name": "fn",
                            "desc": "The name of the function within the plugin"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "args",
                            "desc": "Arguments for the function"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "Result from the plugin",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "compute_free_memory",
                    "status": "supported",
                    "desc": "Computes the amount of free memory on the host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host to send the request to"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "the amount of free memory on the host.",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "compute_memory_overhead",
                    "status": "supported",
                    "desc": "Computes the virtualization memory overhead of a host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host for which to compute the memory overhead"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "the virtualization memory overhead of the host.",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "create_new_blob",
                    "status": "supported",
                    "desc": "Create a placeholder for a named binary blob of data that is associated with this host",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host"
                        },
                        {
                            "type": "string",
                            "name": "name",
                            "desc": "The name associated with the blob"
                        },
                        {
                            "type": "string",
                            "name": "mime_type",
                            "desc": "The mime type for the data. Empty string translates to application/octet-stream"
                        },
                        {
                            "type": "bool",
                            "name": "public",
                            "desc": "True if the blob should be publicly available"
                        }
                    ],
                    "return": {
                        "type": "blob ref",
                        "desc": "The reference of the blob, needed for populating its data",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "declare_dead",
                    "status": "supported",
                    "desc": "Declare that a host is dead. This is a dangerous operation, and should only be called if the administrator is absolutely sure the host is definitely dead",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The Host to declare is dead"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "Destroy specified host record in database",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "The host record to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "disable",
                    "status": "supported",
                    "desc": "Puts the host into a state in which no new VMs can be started. Currently active VMs on the host continue to execute.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The Host to disable"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "client-cert"
                },
                {
                    "name": "disable_display",
                    "status": "supported",
                    "desc": "Disable console output to the physical display device next time this host boots",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host"
                        }
                    ],
                    "return": {
                        "type": "host_display",
                        "desc": "This host’s physical display usage",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "disable_external_auth",
                    "status": "supported",
                    "desc": "This call disables external authentication on the local host",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host whose external authentication should be disabled"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "config",
                            "desc": "Optional parameters as a list of key-values containing the configuration data"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "disable_local_storage_caching",
                    "status": "supported",
                    "desc": "Disable the use of a local SR for caching purposes",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "dmesg",
                    "status": "supported",
                    "desc": "Get the host xen dmesg.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The Host to query"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "dmesg string",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "dmesg_clear",
                    "status": "supported",
                    "desc": "Get the host xen dmesg, and clear the buffer.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The Host to query"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "dmesg string",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "emergency_disable_tls_verification",
                    "status": "supported",
                    "desc": "Disable TLS verification for this host only",
                    "args": [],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": ""
                },
                {
                    "name": "emergency_ha_disable",
                    "status": "supported",
                    "desc": "This call disables HA on the local host. This should only be used with extreme care.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "bool",
                            "name": "soft",
                            "desc": "Disable HA temporarily, revert upon host reboot or further changes, idempotent"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "emergency_reenable_tls_verification",
                    "status": "supported",
                    "desc": "Reenable TLS verification for this host only",
                    "args": [],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": ""
                },
                {
                    "name": "emergency_reset_server_certificate",
                    "status": "supported",
                    "desc": "Delete the current TLS server certificate and replace by a new, self-signed one. This should only be used with extreme care.",
                    "args": [],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": ""
                },
                {
                    "name": "enable",
                    "status": "supported",
                    "desc": "Puts the host into a state in which new VMs can be started.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The Host to enable"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "client-cert"
                },
                {
                    "name": "enable_display",
                    "status": "supported",
                    "desc": "Enable console output to the physical display device next time this host boots",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host"
                        }
                    ],
                    "return": {
                        "type": "host_display",
                        "desc": "This host’s physical display usage",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "enable_external_auth",
                    "status": "supported",
                    "desc": "This call enables external authentication on a host",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host whose external authentication should be enabled"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "config",
                            "desc": "A list of key-values containing the configuration data"
                        },
                        {
                            "type": "string",
                            "name": "service_name",
                            "desc": "The name of the service"
                        },
                        {
                            "type": "string",
                            "name": "auth_type",
                            "desc": "The type of authentication (e.g. AD for Active Directory)"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "enable_local_storage_caching",
                    "status": "supported",
                    "desc": "Enable the use of a local SR for caching purposes",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host"
                        },
                        {
                            "type": "SR ref",
                            "name": "sr",
                            "desc": "The SR to use as a local cache"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "evacuate",
                    "status": "supported",
                    "desc": "Migrate all VMs off of this host, where possible.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host to evacuate"
                        },
                        {
                            "type": "network ref",
                            "name": "network",
                            "desc": "Optional preferred network for migration"
                        },
                        {
                            "type": "int",
                            "name": "evacuate_batch_size",
                            "desc": "The maximum number of VMs to be migrated per batch 0 will use the value <code class=\"language-plaintext highlighter-rouge\">evacuation&amp;#45;batch&amp;#45;size</code> defined in xapi.conf"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "client-cert"
                },
                {
                    "name": "forget_data_source_archives",
                    "status": "supported",
                    "desc": "Forget the recorded statistics related to the specified data source",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host"
                        },
                        {
                            "type": "string",
                            "name": "data_source",
                            "desc": "The data source whose archives are to be forgotten"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_address",
                    "status": "supported",
                    "desc": "Get the address field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the hosts known to the system.",
                    "args": [],
                    "return": {
                        "type": "host ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of host references to host records for all hosts known to the system.",
                    "args": [],
                    "return": {
                        "type": "(host ref -&gt; host record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_allowed_operations",
                    "status": "supported",
                    "desc": "Get the allowed_operations field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host_allowed_operations set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_api_version_major",
                    "status": "supported",
                    "desc": "Get the API_version/major field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_api_version_minor",
                    "status": "supported",
                    "desc": "Get the API_version/minor field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_api_version_vendor",
                    "status": "supported",
                    "desc": "Get the API_version/vendor field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_api_version_vendor_implementation",
                    "status": "supported",
                    "desc": "Get the API_version/vendor_implementation field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_bios_strings",
                    "status": "supported",
                    "desc": "Get the bios_strings field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_blobs",
                    "status": "supported",
                    "desc": "Get the blobs field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; blob ref) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_name_label",
                    "status": "supported",
                    "desc": "Get all the host instances with the given label.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "label",
                            "desc": "label of object to return"
                        }
                    ],
                    "return": {
                        "type": "host ref set",
                        "desc": "references to objects with matching names",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the host instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "host ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_capabilities",
                    "status": "supported",
                    "desc": "Get the capabilities field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_certificates",
                    "status": "supported",
                    "desc": "Get the certificates field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "Certificate ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_chipset_info",
                    "status": "supported",
                    "desc": "Get the chipset_info field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_control_domain",
                    "status": "supported",
                    "desc": "Get the control_domain field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VM ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_cpu_configuration",
                    "status": "supported",
                    "desc": "Get the cpu_configuration field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_cpu_info",
                    "status": "supported",
                    "desc": "Get the cpu_info field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_crash_dump_sr",
                    "status": "supported",
                    "desc": "Get the crash_dump_sr field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "SR ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_crashdumps",
                    "status": "supported",
                    "desc": "Get the crashdumps field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host_crashdump ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_current_operations",
                    "status": "supported",
                    "desc": "Get the current_operations field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; host_allowed_operations) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_data_sources",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host to interrogate"
                        }
                    ],
                    "return": {
                        "type": "data_source record set",
                        "desc": "A set of data sources",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_display",
                    "status": "supported",
                    "desc": "Get the display field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host_display",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_edition",
                    "status": "supported",
                    "desc": "Get the edition field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_editions",
                    "status": "supported",
                    "desc": "Get the editions field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_enabled",
                    "status": "supported",
                    "desc": "Get the enabled field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_external_auth_configuration",
                    "status": "supported",
                    "desc": "Get the external_auth_configuration field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_external_auth_service_name",
                    "status": "supported",
                    "desc": "Get the external_auth_service_name field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_external_auth_type",
                    "status": "supported",
                    "desc": "Get the external_auth_type field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_features",
                    "status": "supported",
                    "desc": "Get the features field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "Feature ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_guest_vcpus_params",
                    "status": "supported",
                    "desc": "Get the guest_VCPUs_params field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_ha_network_peers",
                    "status": "supported",
                    "desc": "Get the ha_network_peers field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_ha_statefiles",
                    "status": "supported",
                    "desc": "Get the ha_statefiles field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_host_cpus",
                    "status": "supported",
                    "desc": "Get the host_CPUs field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host_cpu ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_hostname",
                    "status": "supported",
                    "desc": "Get the hostname field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_https_only",
                    "status": "supported",
                    "desc": "Get the https_only field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_iscsi_iqn",
                    "status": "supported",
                    "desc": "Get the iscsi_iqn field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_last_software_update",
                    "status": "supported",
                    "desc": "Get the last_software_update field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "datetime",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_latest_synced_updates_applied",
                    "status": "supported",
                    "desc": "Get the latest_synced_updates_applied field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "latest_synced_updates_applied_state",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_license_params",
                    "status": "supported",
                    "desc": "Get the license_params field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_license_server",
                    "status": "supported",
                    "desc": "Get the license_server field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_local_cache_sr",
                    "status": "supported",
                    "desc": "Get the local_cache_sr field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "SR ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_log",
                    "status": "supported",
                    "desc": "Get the host’s log file",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The Host to query"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "The contents of the host’s primary log file",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_logging",
                    "status": "supported",
                    "desc": "Get the logging field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_management_interface",
                    "status": "supported",
                    "desc": "Returns the management interface for the specified host",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "Which host’s management interface is required"
                        }
                    ],
                    "return": {
                        "type": "PIF ref",
                        "desc": "The management interface for the host",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_memory_overhead",
                    "status": "supported",
                    "desc": "Get the memory/overhead field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_metrics",
                    "status": "supported",
                    "desc": "Get the metrics field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host_metrics ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_multipathing",
                    "status": "supported",
                    "desc": "Get the multipathing field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_description",
                    "status": "supported",
                    "desc": "Get the name/description field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_label",
                    "status": "supported",
                    "desc": "Get the name/label field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_numa_affinity_policy",
                    "status": "supported",
                    "desc": "Get the numa_affinity_policy field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host_numa_affinity_policy",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_patches",
                    "status": "deprecated",
                    "desc": "Get the patches field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host_patch ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pbds",
                    "status": "supported",
                    "desc": "Get the PBDs field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PBD ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pcis",
                    "status": "supported",
                    "desc": "Get the PCIs field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PCI ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pending_guidances",
                    "status": "supported",
                    "desc": "Get the pending_guidances field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "update_guidances set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pgpus",
                    "status": "supported",
                    "desc": "Get the PGPUs field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PGPU ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pifs",
                    "status": "supported",
                    "desc": "Get the PIFs field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PIF ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_power_on_config",
                    "status": "supported",
                    "desc": "Get the power_on_config field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_power_on_mode",
                    "status": "supported",
                    "desc": "Get the power_on_mode field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pusbs",
                    "status": "supported",
                    "desc": "Get the PUSBs field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PUSB ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_resident_vms",
                    "status": "supported",
                    "desc": "Get the resident_VMs field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VM ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_sched_gran",
                    "status": "supported",
                    "desc": "Gets xen’s sched-gran on a host",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "The host"
                        }
                    ],
                    "return": {
                        "type": "host_sched_gran",
                        "desc": "The host’s sched-gran",
                        "errs": []
                    },
                    "minrole": ""
                },
                {
                    "name": "get_sched_policy",
                    "status": "supported",
                    "desc": "Get the sched_policy field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_server_certificate",
                    "status": "supported",
                    "desc": "Get the installed server public TLS certificate.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "The installed server public TLS certificate, in PEM form.",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_server_localtime",
                    "status": "supported",
                    "desc": "This call queries the host’s clock for the current time in the host’s local timezone",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host whose clock should be queried"
                        }
                    ],
                    "return": {
                        "type": "datetime",
                        "desc": "The current local time",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_servertime",
                    "status": "supported",
                    "desc": "This call queries the host’s clock for the current time",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host whose clock should be queried"
                        }
                    ],
                    "return": {
                        "type": "datetime",
                        "desc": "The current time",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_software_version",
                    "status": "supported",
                    "desc": "Get the software_version field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_ssl_legacy",
                    "status": "deprecated",
                    "desc": "Get the ssl_legacy field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_supported_bootloaders",
                    "status": "supported",
                    "desc": "Get the supported_bootloaders field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_suspend_image_sr",
                    "status": "supported",
                    "desc": "Get the suspend_image_sr field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "SR ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_system_status_capabilities",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host to interrogate"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "An XML fragment containing the system status capabilities.",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_tags",
                    "status": "supported",
                    "desc": "Get the tags field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_tls_verification_enabled",
                    "status": "supported",
                    "desc": "Get the tls_verification_enabled field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uefi_certificates",
                    "status": "deprecated",
                    "desc": "Get the uefi_certificates field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uncooperative_resident_vms",
                    "status": "deprecated",
                    "desc": "Return a set of VMs which are not co-operating with the host’s memory control system",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "The host to query"
                        }
                    ],
                    "return": {
                        "type": "VM ref set",
                        "desc": "VMs which are not co-operating",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_updates",
                    "status": "supported",
                    "desc": "Get the updates field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "pool_update ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_updates_requiring_reboot",
                    "status": "supported",
                    "desc": "Get the updates_requiring_reboot field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "pool_update ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_virtual_hardware_platform_versions",
                    "status": "supported",
                    "desc": "Get the virtual_hardware_platform_versions field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vms_which_prevent_evacuation",
                    "status": "supported",
                    "desc": "Return a set of VMs which prevent the host being evacuated, with per-VM error codes",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "The host to query"
                        }
                    ],
                    "return": {
                        "type": "(VM ref -&gt; string set) map",
                        "desc": "VMs which block evacuation together with reasons",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "has_extension",
                    "status": "supported",
                    "desc": "Return true if the extension is available on the host",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host"
                        },
                        {
                            "type": "string",
                            "name": "name",
                            "desc": "The name of the API call"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "True if the extension exists, false otherwise",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "install_server_certificate",
                    "status": "supported",
                    "desc": "Install the TLS server certificate.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host"
                        },
                        {
                            "type": "string",
                            "name": "certificate",
                            "desc": "The server certificate, in PEM form"
                        },
                        {
                            "type": "string",
                            "name": "private_key",
                            "desc": "The unencrypted private key used to sign the certificate, in PKCS#8 form"
                        },
                        {
                            "type": "string",
                            "name": "certificate_chain",
                            "desc": "The certificate chain, in PEM form"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "license_add",
                    "status": "supported",
                    "desc": "Apply a new license to a host",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host to upload the license to"
                        },
                        {
                            "type": "string",
                            "name": "contents",
                            "desc": "The contents of the license file, base64 encoded"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "LICENSE_PROCESSING_ERROR"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "license_apply",
                    "status": "removed",
                    "desc": "Apply a new license to a host",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host to upload the license to"
                        },
                        {
                            "type": "string",
                            "name": "contents",
                            "desc": "The contents of the license file, base64 encoded"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "LICENSE_PROCESSING_ERROR"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "license_remove",
                    "status": "supported",
                    "desc": "Remove any license file from the specified host, and switch that host to the unlicensed edition",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host from which any license will be removed"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "list_methods",
                    "status": "supported",
                    "desc": "List all supported methods",
                    "args": [],
                    "return": {
                        "type": "string set",
                        "desc": "The name of every supported method.",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "local_management_reconfigure",
                    "status": "supported",
                    "desc": "Reconfigure the management network interface. Should only be used if Host.management_reconfigure is impossible because the network configuration is broken.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "interface",
                            "desc": "name of the interface to use as a management interface"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "management_disable",
                    "status": "supported",
                    "desc": "Disable the management network interface",
                    "args": [],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "management_reconfigure",
                    "status": "supported",
                    "desc": "Reconfigure the management network interface",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "pif",
                            "desc": "reference to a PIF object corresponding to the management interface"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "migrate_receive",
                    "status": "supported",
                    "desc": "Prepare to receive a VM, returning a token which can be passed to VM.migrate.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The target host"
                        },
                        {
                            "type": "network ref",
                            "name": "network",
                            "desc": "The network through which migration traffic should be received."
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "options",
                            "desc": "Extra configuration operations"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "A value which should be passed to VM.migrate",
                        "errs": []
                    },
                    "minrole": "vm-power-admin"
                },
                {
                    "name": "power_on",
                    "status": "supported",
                    "desc": "Attempt to power-on the host (if the capability exists).",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The Host to power on"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "query_data_source",
                    "status": "supported",
                    "desc": "Query the latest value of the specified data source",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host"
                        },
                        {
                            "type": "string",
                            "name": "data_source",
                            "desc": "The data source to query"
                        }
                    ],
                    "return": {
                        "type": "float",
                        "desc": "The latest value, averaged over the last 5 seconds",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "reboot",
                    "status": "supported",
                    "desc": "Reboot the host. (This function can only be called if there are no currently running VMs on the host and it is disabled.)",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The Host to reboot"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "record_data_source",
                    "status": "supported",
                    "desc": "Start recording the specified data source",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host"
                        },
                        {
                            "type": "string",
                            "name": "data_source",
                            "desc": "The data source to record"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "refresh_pack_info",
                    "status": "deprecated",
                    "desc": "Refresh the list of installed Supplemental Packs.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The Host to modify"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "refresh_server_certificate",
                    "status": "supported",
                    "desc": "Replace the internal self-signed host certficate with a new one.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "remove_from_guest_vcpus_params",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the guest_VCPUs_params field of the given host. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "remove_from_license_server",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the license_server field of the given host. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "remove_from_logging",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the logging field of the given host. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given host. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "remove_tags",
                    "status": "supported",
                    "desc": "Remove the given value from the tags field of the given host. If the value is not in that Set, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "reset_cpu_features",
                    "status": "removed",
                    "desc": "Remove the feature mask, such that after a reboot all features of the CPU are enabled.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "reset_server_certificate",
                    "status": "supported",
                    "desc": "Delete the current TLS server certificate and replace by a new, self-signed one. This should only be used with extreme care.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "restart_agent",
                    "status": "supported",
                    "desc": "Restarts the agent after a 10 second pause. WARNING: this is a dangerous operation. Any operations in progress will be aborted, and unrecoverable data loss may occur. The caller is responsible for ensuring that there are no operations in progress when this method is called.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The Host on which you want to restart the agent"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "retrieve_wlb_evacuate_recommendations",
                    "status": "supported",
                    "desc": "Retrieves recommended host migrations to perform when evacuating the host from the wlb server. If a VM cannot be migrated from the host the reason is listed instead of a recommendation.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "The host to query"
                        }
                    ],
                    "return": {
                        "type": "(VM ref -&gt; string set) map",
                        "desc": "VMs and the reasons why they would block evacuation, or their target host recommended by the wlb server",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "send_debug_keys",
                    "status": "supported",
                    "desc": "Inject the given string as debugging keys into Xen",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host"
                        },
                        {
                            "type": "string",
                            "name": "keys",
                            "desc": "The keys to send"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "set_address",
                    "status": "supported",
                    "desc": "Set the address field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_cpu_features",
                    "status": "removed",
                    "desc": "Set the CPU features to be used after a reboot, if the given features string is valid.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host"
                        },
                        {
                            "type": "string",
                            "name": "features",
                            "desc": "The features string (32 hexadecimal digits)"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_crash_dump_sr",
                    "status": "supported",
                    "desc": "Set the crash_dump_sr field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "SR ref",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_display",
                    "status": "supported",
                    "desc": "Set the display field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "host_display",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_guest_vcpus_params",
                    "status": "supported",
                    "desc": "Set the guest_VCPUs_params field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_hostname",
                    "status": "supported",
                    "desc": "Set the hostname field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_hostname_live",
                    "status": "supported",
                    "desc": "Sets the host name to the specified string. Both the API and lower-level system hostname are changed immediately.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host whose host name to set"
                        },
                        {
                            "type": "string",
                            "name": "hostname",
                            "desc": "The new host name"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "HOST_NAME_INVALID"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_https_only",
                    "status": "supported",
                    "desc": "updates the host firewall to open or close port 80 depending on the value",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "The Host"
                        },
                        {
                            "type": "bool",
                            "name": "value",
                            "desc": "true - http port 80 will be blocked, false - http port 80 will be open"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_iscsi_iqn",
                    "status": "supported",
                    "desc": "Sets the initiator IQN for the host",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "The value to which the IQN should be set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_license_server",
                    "status": "supported",
                    "desc": "Set the license_server field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_logging",
                    "status": "supported",
                    "desc": "Set the logging field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_multipathing",
                    "status": "supported",
                    "desc": "Specifies whether multipathing is enabled",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host"
                        },
                        {
                            "type": "bool",
                            "name": "value",
                            "desc": "Whether multipathing should be enabled"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_name_description",
                    "status": "supported",
                    "desc": "Set the name/description field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_name_label",
                    "status": "supported",
                    "desc": "Set the name/label field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_numa_affinity_policy",
                    "status": "supported",
                    "desc": "Set VM placement NUMA affinity policy",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "The host"
                        },
                        {
                            "type": "host_numa_affinity_policy",
                            "name": "value",
                            "desc": "The NUMA affinity policy to apply to a host"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_power_on_mode",
                    "status": "supported",
                    "desc": "Set the power-on-mode, host, user and password",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "The host"
                        },
                        {
                            "type": "string",
                            "name": "power_on_mode",
                            "desc": "power-on-mode can be empty, wake-on-lan, DRAC or other"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "power_on_config",
                            "desc": "Power on config"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_sched_gran",
                    "status": "supported",
                    "desc": "Sets xen’s sched-gran on a host. See: <a href=\"https://xenbits.xen.org/docs/unstable/misc/xen-command-line.html#sched-gran-x86\" rel=\"noopener noreferrer\" target=\"_blank\">https://xenbits.xen.org/docs/unstable/misc/xen-command-line.html#sched-gran-x86</a>",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "The host"
                        },
                        {
                            "type": "host_sched_gran",
                            "name": "value",
                            "desc": "The sched-gran to apply to a host"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": ""
                },
                {
                    "name": "set_ssl_legacy",
                    "status": "supported",
                    "desc": "Enable/disable SSLv3 for interoperability with older server versions. When this is set to a different value, the host immediately restarts its SSL/TLS listening service; typically this takes less than a second but existing connections to it will be broken. API login sessions will remain valid.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "The host"
                        },
                        {
                            "type": "bool",
                            "name": "value",
                            "desc": "True to allow SSLv3 and ciphersuites as used in old XenServer versions"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_suspend_image_sr",
                    "status": "supported",
                    "desc": "Set the suspend_image_sr field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "SR ref",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_tags",
                    "status": "supported",
                    "desc": "Set the tags field of the given host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string set",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "set_uefi_certificates",
                    "status": "deprecated",
                    "desc": "Sets the UEFI certificates on a host",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "The certificates to apply to a host"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": ""
                },
                {
                    "name": "shutdown",
                    "status": "supported",
                    "desc": "Shutdown the host. (This function can only be called if there are no currently running VMs on the host and it is disabled.)",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The Host to shutdown"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "shutdown_agent",
                    "status": "supported",
                    "desc": "Shuts the agent down after a 10 second pause. WARNING: this is a dangerous operation. Any operations in progress will be aborted, and unrecoverable data loss may occur. The caller is responsible for ensuring that there are no operations in progress when this method is called.",
                    "args": [],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "sync_data",
                    "status": "supported",
                    "desc": "This causes the synchronisation of the non-database data (messages, RRDs and so on) stored on the master to be synchronised with the host",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host to whom the data should be sent"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "syslog_reconfigure",
                    "status": "supported",
                    "desc": "Re-configure syslog logging",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "Tell the host to reread its Host.logging parameters and reconfigure itself accordingly"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                }
            ]
        },
        {
            "name": "host_cpu",
            "state": "supported",
            "desc": "A physical CPU",
            "fields": [
                {
                    "field": "family",
                    "type": "int",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Deprecated</strong>. the family (number) of the physical CPU"
                },
                {
                    "field": "features",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Deprecated</strong>. the physical CPU feature bitmap"
                },
                {
                    "field": "flags",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Deprecated</strong>. the flags of the physical CPU (a decoded version of the features field)"
                },
                {
                    "field": "host",
                    "type": "host ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Deprecated</strong>. the host the CPU is in"
                },
                {
                    "field": "model",
                    "type": "int",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Deprecated</strong>. the model number of the physical CPU"
                },
                {
                    "field": "modelname",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Deprecated</strong>. the model name of the physical CPU"
                },
                {
                    "field": "number",
                    "type": "int",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Deprecated</strong>. the number of the physical CPU within the host"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "<strong>Deprecated</strong>. additional configuration"
                },
                {
                    "field": "speed",
                    "type": "int",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Deprecated</strong>. the speed of the physical CPU"
                },
                {
                    "field": "stepping",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Deprecated</strong>. the stepping of the physical CPU"
                },
                {
                    "field": "utilisation",
                    "type": "float",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Deprecated</strong>. the current CPU utilisation"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Deprecated</strong>. Unique identifier/object reference"
                },
                {
                    "field": "vendor",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Deprecated</strong>. the vendor of the physical CPU"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_other_config",
                    "status": "deprecated",
                    "desc": "Add the given key-value pair to the other_config field of the given host_cpu.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_cpu ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_all",
                    "status": "deprecated",
                    "desc": "Return a list of all the host_cpus known to the system.",
                    "args": [],
                    "return": {
                        "type": "host_cpu ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "deprecated",
                    "desc": "Return a map of host_cpu references to host_cpu records for all host_cpus known to the system.",
                    "args": [],
                    "return": {
                        "type": "(host_cpu ref -&gt; host_cpu record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "deprecated",
                    "desc": "Get a reference to the host_cpu instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "host_cpu ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_family",
                    "status": "deprecated",
                    "desc": "Get the family field of the given host_cpu.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_cpu ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_features",
                    "status": "deprecated",
                    "desc": "Get the features field of the given host_cpu.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_cpu ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_flags",
                    "status": "deprecated",
                    "desc": "Get the flags field of the given host_cpu.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_cpu ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_host",
                    "status": "deprecated",
                    "desc": "Get the host field of the given host_cpu.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_cpu ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_model",
                    "status": "deprecated",
                    "desc": "Get the model field of the given host_cpu.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_cpu ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_modelname",
                    "status": "deprecated",
                    "desc": "Get the modelname field of the given host_cpu.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_cpu ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_number",
                    "status": "deprecated",
                    "desc": "Get the number field of the given host_cpu.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_cpu ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "deprecated",
                    "desc": "Get the other_config field of the given host_cpu.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_cpu ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "deprecated",
                    "desc": "Get a record containing the current state of the given host_cpu.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_cpu ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host_cpu record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_speed",
                    "status": "deprecated",
                    "desc": "Get the speed field of the given host_cpu.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_cpu ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_stepping",
                    "status": "deprecated",
                    "desc": "Get the stepping field of the given host_cpu.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_cpu ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_utilisation",
                    "status": "deprecated",
                    "desc": "Get the utilisation field of the given host_cpu.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_cpu ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "float",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "deprecated",
                    "desc": "Get the uuid field of the given host_cpu.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_cpu ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vendor",
                    "status": "deprecated",
                    "desc": "Get the vendor field of the given host_cpu.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_cpu ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "deprecated",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given host_cpu. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_cpu ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_other_config",
                    "status": "deprecated",
                    "desc": "Set the other_config field of the given host_cpu.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_cpu ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                }
            ],
            "supported": "deprecated"
        },
        {
            "name": "host_crashdump",
            "state": "supported",
            "desc": "Represents a host crash dump",
            "fields": [
                {
                    "field": "host",
                    "type": "host ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Host the crashdump relates to"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "additional configuration"
                },
                {
                    "field": "size",
                    "type": "int",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Size of the crashdump"
                },
                {
                    "field": "timestamp",
                    "type": "datetime",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Time the crash happened"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_other_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the other_config field of the given host_crashdump.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_crashdump ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "Destroy specified host crash dump, removing it from the disk.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_crashdump ref",
                            "name": "self",
                            "desc": "The host crashdump to destroy"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the host_crashdumps known to the system.",
                    "args": [],
                    "return": {
                        "type": "host_crashdump ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of host_crashdump references to host_crashdump records for all host_crashdumps known to the system.",
                    "args": [],
                    "return": {
                        "type": "(host_crashdump ref -&gt; host_crashdump record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the host_crashdump instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "host_crashdump ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_host",
                    "status": "supported",
                    "desc": "Get the host field of the given host_crashdump.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_crashdump ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given host_crashdump.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_crashdump ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given host_crashdump.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_crashdump ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host_crashdump record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_size",
                    "status": "supported",
                    "desc": "Get the size field of the given host_crashdump.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_crashdump ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_timestamp",
                    "status": "supported",
                    "desc": "Get the timestamp field of the given host_crashdump.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_crashdump ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "datetime",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given host_crashdump.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_crashdump ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given host_crashdump. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_crashdump ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given host_crashdump.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_crashdump ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "upload",
                    "status": "supported",
                    "desc": "Upload the specified host crash dump to a specified URL",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_crashdump ref",
                            "name": "self",
                            "desc": "The host crashdump to upload"
                        },
                        {
                            "type": "string",
                            "name": "url",
                            "desc": "The URL to upload to"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "options",
                            "desc": "Extra configuration operations"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                }
            ]
        },
        {
            "name": "host_metrics",
            "state": "supported",
            "desc": "The metrics associated with a host",
            "fields": [
                {
                    "field": "last_updated",
                    "type": "datetime",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Time at which this information was last updated"
                },
                {
                    "field": "live",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Pool master thinks this host is live"
                },
                {
                    "field": "memory_free",
                    "type": "int",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Removed</strong>. Free host memory (bytes)"
                },
                {
                    "field": "memory_total",
                    "type": "int",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Total host memory (bytes)"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "additional configuration"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_other_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the other_config field of the given host_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the host_metrics instances known to the system.",
                    "args": [],
                    "return": {
                        "type": "host_metrics ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of host_metrics references to host_metrics records for all host_metrics instances known to the system.",
                    "args": [],
                    "return": {
                        "type": "(host_metrics ref -&gt; host_metrics record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the host_metrics instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "host_metrics ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_last_updated",
                    "status": "supported",
                    "desc": "Get the last_updated field of the given host_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "datetime",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_live",
                    "status": "supported",
                    "desc": "Get the live field of the given host_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_memory_free",
                    "status": "removed",
                    "desc": "Get the memory/free field of the given host_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_memory_total",
                    "status": "supported",
                    "desc": "Get the memory/total field of the given host_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given host_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given host_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host_metrics record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given host_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given host_metrics. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given host_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                }
            ]
        },
        {
            "name": "host_patch",
            "state": "supported",
            "desc": "Represents a patch stored on a server",
            "fields": [
                {
                    "field": "applied",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Deprecated</strong>. True if the patch has been applied"
                },
                {
                    "field": "host",
                    "type": "host ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "<strong>Deprecated</strong>. Host the patch relates to"
                },
                {
                    "field": "name_description",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "<strong>Deprecated</strong>. a notes field containing human-readable description"
                },
                {
                    "field": "name_label",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "<strong>Deprecated</strong>. a human-readable name"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "<strong>Deprecated</strong>. additional configuration"
                },
                {
                    "field": "pool_patch",
                    "type": "pool_patch ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "<strong>Deprecated</strong>. The patch applied"
                },
                {
                    "field": "size",
                    "type": "int",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Deprecated</strong>. Size of the patch"
                },
                {
                    "field": "timestamp_applied",
                    "type": "datetime",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Deprecated</strong>. Time the patch was applied"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Deprecated</strong>. Unique identifier/object reference"
                },
                {
                    "field": "version",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "<strong>Deprecated</strong>. Patch version number"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_other_config",
                    "status": "deprecated",
                    "desc": "Add the given key-value pair to the other_config field of the given host_patch.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_patch ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "apply",
                    "status": "deprecated",
                    "desc": "Apply the selected patch and return its output",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_patch ref",
                            "name": "self",
                            "desc": "The patch to apply"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "the output of the patch application process",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "destroy",
                    "status": "deprecated",
                    "desc": "Destroy the specified host patch, removing it from the disk. This does NOT reverse the patch",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_patch ref",
                            "name": "self",
                            "desc": "The patch to destroy"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_all",
                    "status": "deprecated",
                    "desc": "Return a list of all the host_patchs known to the system.",
                    "args": [],
                    "return": {
                        "type": "host_patch ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "deprecated",
                    "desc": "Return a map of host_patch references to host_patch records for all host_patchs known to the system.",
                    "args": [],
                    "return": {
                        "type": "(host_patch ref -&gt; host_patch record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_applied",
                    "status": "deprecated",
                    "desc": "Get the applied field of the given host_patch.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_patch ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_name_label",
                    "status": "deprecated",
                    "desc": "Get all the host_patch instances with the given label.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "label",
                            "desc": "label of object to return"
                        }
                    ],
                    "return": {
                        "type": "host_patch ref set",
                        "desc": "references to objects with matching names",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "deprecated",
                    "desc": "Get a reference to the host_patch instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "host_patch ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_host",
                    "status": "deprecated",
                    "desc": "Get the host field of the given host_patch.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_patch ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_description",
                    "status": "deprecated",
                    "desc": "Get the name/description field of the given host_patch.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_patch ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_label",
                    "status": "deprecated",
                    "desc": "Get the name/label field of the given host_patch.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_patch ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "deprecated",
                    "desc": "Get the other_config field of the given host_patch.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_patch ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pool_patch",
                    "status": "deprecated",
                    "desc": "Get the pool_patch field of the given host_patch.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_patch ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "pool_patch ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "deprecated",
                    "desc": "Get a record containing the current state of the given host_patch.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_patch ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host_patch record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_size",
                    "status": "deprecated",
                    "desc": "Get the size field of the given host_patch.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_patch ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_timestamp_applied",
                    "status": "deprecated",
                    "desc": "Get the timestamp_applied field of the given host_patch.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_patch ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "datetime",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "deprecated",
                    "desc": "Get the uuid field of the given host_patch.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_patch ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_version",
                    "status": "deprecated",
                    "desc": "Get the version field of the given host_patch.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_patch ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "deprecated",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given host_patch. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_patch ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_other_config",
                    "status": "deprecated",
                    "desc": "Set the other_config field of the given host_patch.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host_patch ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                }
            ],
            "supported": "deprecated"
        },
        {
            "name": "lvhd",
            "state": "supported",
            "desc": "LVHD SR specific operations",
            "fields": [
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                }
            ],
            "rpcs": [
                {
                    "name": "enable_thin_provisioning",
                    "status": "supported",
                    "desc": "Upgrades an LVHD SR to enable thin-provisioning. Future VDIs created in this SR will be thinly-provisioned, although existing VDIs will be left alone. Note that the SR must be attached to the SRmaster for upgrade to work.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The LVHD Host to upgrade to being thin-provisioned."
                        },
                        {
                            "type": "SR ref",
                            "name": "SR",
                            "desc": "The LVHD SR to upgrade to being thin-provisioned."
                        },
                        {
                            "type": "int",
                            "name": "initial_allocation",
                            "desc": "The initial amount of space to allocate to a newly-created VDI in bytes"
                        },
                        {
                            "type": "int",
                            "name": "allocation_quantum",
                            "desc": "The amount of space to allocate to a VDI when it needs to be enlarged in bytes"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "Message from LVHD.enable_thin_provisioning extension",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the LVHD instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "LVHD ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given LVHD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "LVHD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "LVHD record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given LVHD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "LVHD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                }
            ]
        },
        {
            "name": "message",
            "state": "supported",
            "desc": "An message for the attention of the administrator",
            "fields": [
                {
                    "field": "body",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The body of the message"
                },
                {
                    "field": "cls",
                    "type": "cls",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The class of the object this message is associated with"
                },
                {
                    "field": "name",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The name of the message"
                },
                {
                    "field": "obj_uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The uuid of the object this message is associated with"
                },
                {
                    "field": "priority",
                    "type": "int",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The message priority, 0 being low priority"
                },
                {
                    "field": "timestamp",
                    "type": "datetime",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The time at which the message was created"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                }
            ],
            "rpcs": [
                {
                    "name": "create",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "name",
                            "desc": "The name of the message"
                        },
                        {
                            "type": "int",
                            "name": "priority",
                            "desc": "The priority of the message"
                        },
                        {
                            "type": "cls",
                            "name": "cls",
                            "desc": "The class of object this message is associated with"
                        },
                        {
                            "type": "string",
                            "name": "obj_uuid",
                            "desc": "The uuid of the object this message is associated with"
                        },
                        {
                            "type": "string",
                            "name": "body",
                            "desc": "The body of the message"
                        }
                    ],
                    "return": {
                        "type": "message ref",
                        "desc": "The reference of the created message",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "message ref",
                            "name": "self",
                            "desc": "The reference of the message to destroy"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "destroy_many",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "message ref set",
                            "name": "messages",
                            "desc": "Messages to destroy"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "cls",
                            "name": "cls",
                            "desc": "The class of object"
                        },
                        {
                            "type": "string",
                            "name": "obj_uuid",
                            "desc": "The uuid of the object"
                        },
                        {
                            "type": "datetime",
                            "name": "since",
                            "desc": "The cutoff time"
                        }
                    ],
                    "return": {
                        "type": "(message ref -&gt; message record) map",
                        "desc": "The relevant messages",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "",
                    "args": [],
                    "return": {
                        "type": "message ref set",
                        "desc": "The references to the messages",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "",
                    "args": [],
                    "return": {
                        "type": "(message ref -&gt; message record) map",
                        "desc": "The messages",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records_where",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "expr",
                            "desc": "The expression to match (not currently used)"
                        }
                    ],
                    "return": {
                        "type": "(message ref -&gt; message record) map",
                        "desc": "The messages",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "The uuid of the message"
                        }
                    ],
                    "return": {
                        "type": "message ref",
                        "desc": "The message reference",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "message ref",
                            "name": "self",
                            "desc": "The reference to the message"
                        }
                    ],
                    "return": {
                        "type": "message record",
                        "desc": "The message record",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_since",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "datetime",
                            "name": "since",
                            "desc": "The cutoff time"
                        }
                    ],
                    "return": {
                        "type": "(message ref -&gt; message record) map",
                        "desc": "The relevant messages",
                        "errs": []
                    },
                    "minrole": "read-only"
                }
            ]
        },
        {
            "name": "network",
            "state": "supported",
            "desc": "A virtual network",
            "fields": [
                {
                    "field": "allowed_operations",
                    "type": "network_operations set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client."
                },
                {
                    "field": "assigned_ips",
                    "type": "(VIF ref -&gt; string) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The IP addresses assigned to VIFs on networks that have active xapi-managed DHCP"
                },
                {
                    "field": "blobs",
                    "type": "(string -&gt; blob ref) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Binary blobs associated with this network"
                },
                {
                    "field": "bridge",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "name of the bridge corresponding to this network on the local host"
                },
                {
                    "field": "current_operations",
                    "type": "(string -&gt; network_operations) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task."
                },
                {
                    "field": "default_locking_mode",
                    "type": "network_default_locking_mode",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The network will use this value to determine the behaviour of all VIFs where locking_mode = default"
                },
                {
                    "field": "managed",
                    "type": "bool",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "true if the bridge is managed by xapi"
                },
                {
                    "field": "MTU",
                    "type": "int",
                    "qualifier": "<em>RW</em>",
                    "desc": "MTU in octets"
                },
                {
                    "field": "name_description",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "a notes field containing human-readable description"
                },
                {
                    "field": "name_label",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "a human-readable name"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "additional configuration"
                },
                {
                    "field": "PIFs",
                    "type": "PIF ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "list of connected pifs"
                },
                {
                    "field": "purpose",
                    "type": "network_purpose set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Set of purposes for which the server will use this network"
                },
                {
                    "field": "tags",
                    "type": "string set",
                    "qualifier": "<em>RW</em>",
                    "desc": "user-specified tags for categorization purposes"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                },
                {
                    "field": "VIFs",
                    "type": "VIF ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "list of connected vifs"
                }
            ],
            "rpcs": [
                {
                    "name": "add_purpose",
                    "status": "supported",
                    "desc": "Give a network a new purpose (if not present already)",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "self",
                            "desc": "The network"
                        },
                        {
                            "type": "network_purpose",
                            "name": "value",
                            "desc": "The purpose to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "NETWORK_INCOMPATIBLE_PURPOSES"
                        ]
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "add_tags",
                    "status": "supported",
                    "desc": "Add the given value to the tags field of the given network. If the value is already in that Set, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "add_to_other_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the other_config field of the given network.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "create",
                    "status": "supported",
                    "desc": "Create a new network instance, and return its handle.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network record",
                            "name": "args",
                            "desc": "All constructor arguments"
                        }
                    ],
                    "return": {
                        "type": "network ref",
                        "desc": "reference to the newly created object",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "create_new_blob",
                    "status": "supported",
                    "desc": "Create a placeholder for a named binary blob of data that is associated with this pool",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "network",
                            "desc": "The network"
                        },
                        {
                            "type": "string",
                            "name": "name",
                            "desc": "The name associated with the blob"
                        },
                        {
                            "type": "string",
                            "name": "mime_type",
                            "desc": "The mime type for the data. Empty string translates to application/octet-stream"
                        },
                        {
                            "type": "bool",
                            "name": "public",
                            "desc": "True if the blob should be publicly available"
                        }
                    ],
                    "return": {
                        "type": "blob ref",
                        "desc": "The reference of the blob, needed for populating its data",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "Destroy the specified network instance.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the networks known to the system.",
                    "args": [],
                    "return": {
                        "type": "network ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of network references to network records for all networks known to the system.",
                    "args": [],
                    "return": {
                        "type": "(network ref -&gt; network record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_allowed_operations",
                    "status": "supported",
                    "desc": "Get the allowed_operations field of the given network.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "network_operations set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_assigned_ips",
                    "status": "supported",
                    "desc": "Get the assigned_ips field of the given network.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(VIF ref -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_blobs",
                    "status": "supported",
                    "desc": "Get the blobs field of the given network.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; blob ref) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_bridge",
                    "status": "supported",
                    "desc": "Get the bridge field of the given network.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_name_label",
                    "status": "supported",
                    "desc": "Get all the network instances with the given label.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "label",
                            "desc": "label of object to return"
                        }
                    ],
                    "return": {
                        "type": "network ref set",
                        "desc": "references to objects with matching names",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the network instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "network ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_current_operations",
                    "status": "supported",
                    "desc": "Get the current_operations field of the given network.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; network_operations) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_default_locking_mode",
                    "status": "supported",
                    "desc": "Get the default_locking_mode field of the given network.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "network_default_locking_mode",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_managed",
                    "status": "supported",
                    "desc": "Get the managed field of the given network.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_mtu",
                    "status": "supported",
                    "desc": "Get the MTU field of the given network.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_description",
                    "status": "supported",
                    "desc": "Get the name/description field of the given network.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_label",
                    "status": "supported",
                    "desc": "Get the name/label field of the given network.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given network.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pifs",
                    "status": "supported",
                    "desc": "Get the PIFs field of the given network.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PIF ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_purpose",
                    "status": "supported",
                    "desc": "Get the purpose field of the given network.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "network_purpose set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given network.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "network record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_tags",
                    "status": "supported",
                    "desc": "Get the tags field of the given network.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given network.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vifs",
                    "status": "supported",
                    "desc": "Get the VIFs field of the given network.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VIF ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given network. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "remove_purpose",
                    "status": "supported",
                    "desc": "Remove a purpose from a network (if present)",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "self",
                            "desc": "The network"
                        },
                        {
                            "type": "network_purpose",
                            "name": "value",
                            "desc": "The purpose to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "remove_tags",
                    "status": "supported",
                    "desc": "Remove the given value from the tags field of the given network. If the value is not in that Set, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "set_default_locking_mode",
                    "status": "supported",
                    "desc": "Set the default locking mode for VIFs attached to this network",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "network",
                            "desc": "The network"
                        },
                        {
                            "type": "network_default_locking_mode",
                            "name": "value",
                            "desc": "The default locking mode for VIFs attached to this network."
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_mtu",
                    "status": "supported",
                    "desc": "Set the MTU field of the given network.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "int",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_name_description",
                    "status": "supported",
                    "desc": "Set the name/description field of the given network.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_name_label",
                    "status": "supported",
                    "desc": "Set the name/label field of the given network.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given network.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_tags",
                    "status": "supported",
                    "desc": "Set the tags field of the given network.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string set",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-operator"
                }
            ]
        },
        {
            "name": "network_sriov",
            "state": "supported",
            "desc": "network-sriov which connects logical pif and physical pif",
            "fields": [
                {
                    "field": "configuration_mode",
                    "type": "sriov_configuration_mode",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The mode for configure network sriov"
                },
                {
                    "field": "logical_PIF",
                    "type": "PIF ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "The logical PIF to connect to the SR-IOV network after enable SR-IOV on the physical PIF"
                },
                {
                    "field": "physical_PIF",
                    "type": "PIF ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "The PIF that has SR-IOV enabled"
                },
                {
                    "field": "requires_reboot",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Indicates whether the host need to be rebooted before SR-IOV is enabled on the physical PIF"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                }
            ],
            "rpcs": [
                {
                    "name": "create",
                    "status": "supported",
                    "desc": "Enable SR-IOV on the specific PIF. It will create a network-sriov based on the specific PIF and automatically create a logical PIF to connect the specific network.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "pif",
                            "desc": "PIF on which to enable SR-IOV"
                        },
                        {
                            "type": "network ref",
                            "name": "network",
                            "desc": "Network to connect SR-IOV virtual functions with VM VIFs"
                        }
                    ],
                    "return": {
                        "type": "network_sriov ref",
                        "desc": "The reference of the created network_sriov object",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "Disable SR-IOV on the specific PIF. It will destroy the network-sriov and the logical PIF accordingly.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network_sriov ref",
                            "name": "self",
                            "desc": "SRIOV to destroy"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the network_sriovs known to the system.",
                    "args": [],
                    "return": {
                        "type": "network_sriov ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of network_sriov references to network_sriov records for all network_sriovs known to the system.",
                    "args": [],
                    "return": {
                        "type": "(network_sriov ref -&gt; network_sriov record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the network_sriov instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "network_sriov ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_configuration_mode",
                    "status": "supported",
                    "desc": "Get the configuration_mode field of the given network_sriov.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network_sriov ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "sriov_configuration_mode",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_logical_pif",
                    "status": "supported",
                    "desc": "Get the logical_PIF field of the given network_sriov.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network_sriov ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PIF ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_physical_pif",
                    "status": "supported",
                    "desc": "Get the physical_PIF field of the given network_sriov.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network_sriov ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PIF ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given network_sriov.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network_sriov ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "network_sriov record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_remaining_capacity",
                    "status": "supported",
                    "desc": "Get the number of free SR-IOV VFs on the associated PIF",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network_sriov ref",
                            "name": "self",
                            "desc": "the NETWORK_SRIOV object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "The number of free SR-IOV VFs on the associated PIF",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_requires_reboot",
                    "status": "supported",
                    "desc": "Get the requires_reboot field of the given network_sriov.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network_sriov ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given network_sriov.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network_sriov ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                }
            ]
        },
        {
            "name": "observer",
            "state": "supported",
            "desc": "Describes a observer which will control observability activity in the Toolstack",
            "fields": [
                {
                    "field": "attributes",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Attributes that observer will add to the data they produce"
                },
                {
                    "field": "components",
                    "type": "string set",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "The list of xenserver components the observer will broadcast. An empty list means all components"
                },
                {
                    "field": "enabled",
                    "type": "bool",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "This denotes if the observer is enabled. true if it is enabled and false if it is disabled"
                },
                {
                    "field": "endpoints",
                    "type": "string set",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "The list of endpoints where data is exported to. Each endpoint is a URL or the string ‘bugtool’ refering to the internal logs"
                },
                {
                    "field": "hosts",
                    "type": "host ref set",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "The list of hosts the observer is active on. An empty list means all hosts"
                },
                {
                    "field": "name_description",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "a notes field containing human-readable description"
                },
                {
                    "field": "name_label",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "a human-readable name"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                }
            ],
            "rpcs": [
                {
                    "name": "create",
                    "status": "supported",
                    "desc": "Create a new Observer instance, and return its handle.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Observer record",
                            "name": "args",
                            "desc": "All constructor arguments"
                        }
                    ],
                    "return": {
                        "type": "Observer ref",
                        "desc": "reference to the newly created object",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "Destroy the specified Observer instance.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Observer ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the Observers known to the system.",
                    "args": [],
                    "return": {
                        "type": "Observer ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of Observer references to Observer records for all Observers known to the system.",
                    "args": [],
                    "return": {
                        "type": "(Observer ref -&gt; Observer record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_attributes",
                    "status": "supported",
                    "desc": "Get the attributes field of the given Observer.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Observer ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_name_label",
                    "status": "supported",
                    "desc": "Get all the Observer instances with the given label.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "label",
                            "desc": "label of object to return"
                        }
                    ],
                    "return": {
                        "type": "Observer ref set",
                        "desc": "references to objects with matching names",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the Observer instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "Observer ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_components",
                    "status": "supported",
                    "desc": "Get the components field of the given Observer.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Observer ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_enabled",
                    "status": "supported",
                    "desc": "Get the enabled field of the given Observer.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Observer ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_endpoints",
                    "status": "supported",
                    "desc": "Get the endpoints field of the given Observer.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Observer ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_hosts",
                    "status": "supported",
                    "desc": "Get the hosts field of the given Observer.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Observer ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_description",
                    "status": "supported",
                    "desc": "Get the name/description field of the given Observer.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Observer ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_label",
                    "status": "supported",
                    "desc": "Get the name/label field of the given Observer.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Observer ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given Observer.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Observer ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "Observer record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given Observer.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Observer ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "set_attributes",
                    "status": "supported",
                    "desc": "Set the attributes of an observer. These are used to emit metadata by the observer",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Observer ref",
                            "name": "self",
                            "desc": "The observer"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "The attributes that the observer emits as part of the data"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "set_components",
                    "status": "supported",
                    "desc": "Set the components on which the observer will broadcast to. i.e. xapi, xenopsd, networkd, etc",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Observer ref",
                            "name": "self",
                            "desc": "The observer"
                        },
                        {
                            "type": "string set",
                            "name": "value",
                            "desc": "The components the observer will broadcast to"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "set_enabled",
                    "status": "supported",
                    "desc": "Enable / disable this observer which will stop the observer from producing observability information",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Observer ref",
                            "name": "self",
                            "desc": "The observer"
                        },
                        {
                            "type": "bool",
                            "name": "value",
                            "desc": "If the observer is to be enabled (true) or disabled (false)"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "set_endpoints",
                    "status": "supported",
                    "desc": "Set the file/HTTP endpoints the observer sends data to",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Observer ref",
                            "name": "self",
                            "desc": "The observer"
                        },
                        {
                            "type": "string set",
                            "name": "value",
                            "desc": "The endpoints that the observer will export data to. A URL or the string ‘bugtool’. This can refer to an enpoint to the local file system"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "set_hosts",
                    "status": "supported",
                    "desc": "Sets the hosts that the observer is to be registered on",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Observer ref",
                            "name": "self",
                            "desc": "The observer"
                        },
                        {
                            "type": "host ref set",
                            "name": "value",
                            "desc": "Hosts the observer is registered on"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "set_name_description",
                    "status": "supported",
                    "desc": "Set the name/description field of the given Observer.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Observer ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "set_name_label",
                    "status": "supported",
                    "desc": "Set the name/label field of the given Observer.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Observer ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                }
            ]
        },
        {
            "name": "pbd",
            "state": "supported",
            "desc": "The physical block devices through which hosts access SRs",
            "fields": [
                {
                    "field": "currently_attached",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "is the SR currently attached on this host?"
                },
                {
                    "field": "device_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "a config string to string map that is provided to the host’s SR-backend-driver"
                },
                {
                    "field": "host",
                    "type": "host ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "physical machine on which the pbd is available"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "additional configuration"
                },
                {
                    "field": "SR",
                    "type": "SR ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "the storage repository that the pbd realises"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_other_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the other_config field of the given PBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "create",
                    "status": "supported",
                    "desc": "Create a new PBD instance, and return its handle.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PBD record",
                            "name": "args",
                            "desc": "All constructor arguments"
                        }
                    ],
                    "return": {
                        "type": "PBD ref",
                        "desc": "reference to the newly created object",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "Destroy the specified PBD instance.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the PBDs known to the system.",
                    "args": [],
                    "return": {
                        "type": "PBD ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of PBD references to PBD records for all PBDs known to the system.",
                    "args": [],
                    "return": {
                        "type": "(PBD ref -&gt; PBD record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the PBD instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "PBD ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_currently_attached",
                    "status": "supported",
                    "desc": "Get the currently_attached field of the given PBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_device_config",
                    "status": "supported",
                    "desc": "Get the device_config field of the given PBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_host",
                    "status": "supported",
                    "desc": "Get the host field of the given PBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given PBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given PBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PBD record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_sr",
                    "status": "supported",
                    "desc": "Get the SR field of the given PBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "SR ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given PBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "plug",
                    "status": "supported",
                    "desc": "Activate the specified PBD, causing the referenced SR to be attached and scanned",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PBD ref",
                            "name": "self",
                            "desc": "The PBD to activate"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "SR_UNKNOWN_DRIVER"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given PBD. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_device_config",
                    "status": "supported",
                    "desc": "Sets the PBD’s device_config field",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PBD ref",
                            "name": "self",
                            "desc": "The PBD to modify"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "The new value of the PBD’s device_config"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given PBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "unplug",
                    "status": "supported",
                    "desc": "Deactivate the specified PBD, causing the referenced SR to be detached and nolonger scanned",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PBD ref",
                            "name": "self",
                            "desc": "The PBD to deactivate"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                }
            ]
        },
        {
            "name": "pci",
            "state": "supported",
            "desc": "A PCI device",
            "fields": [
                {
                    "field": "class_name",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "PCI class name"
                },
                {
                    "field": "dependencies",
                    "type": "PCI ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "List of dependent PCI devices"
                },
                {
                    "field": "device_name",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Device name"
                },
                {
                    "field": "driver_name",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Driver name"
                },
                {
                    "field": "host",
                    "type": "host ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Physical machine that owns the PCI device"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "Additional configuration"
                },
                {
                    "field": "pci_id",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "PCI ID of the physical device"
                },
                {
                    "field": "subsystem_device_name",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Subsystem device name"
                },
                {
                    "field": "subsystem_vendor_name",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Subsystem vendor name"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                },
                {
                    "field": "vendor_name",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Vendor name"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_other_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the other_config field of the given PCI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PCI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the PCIs known to the system.",
                    "args": [],
                    "return": {
                        "type": "PCI ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of PCI references to PCI records for all PCIs known to the system.",
                    "args": [],
                    "return": {
                        "type": "(PCI ref -&gt; PCI record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the PCI instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "PCI ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_class_name",
                    "status": "supported",
                    "desc": "Get the class_name field of the given PCI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PCI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_dependencies",
                    "status": "supported",
                    "desc": "Get the dependencies field of the given PCI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PCI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PCI ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_device_name",
                    "status": "supported",
                    "desc": "Get the device_name field of the given PCI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PCI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_driver_name",
                    "status": "supported",
                    "desc": "Get the driver_name field of the given PCI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PCI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_host",
                    "status": "supported",
                    "desc": "Get the host field of the given PCI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PCI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given PCI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PCI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pci_id",
                    "status": "supported",
                    "desc": "Get the pci_id field of the given PCI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PCI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given PCI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PCI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PCI record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_subsystem_device_name",
                    "status": "supported",
                    "desc": "Get the subsystem_device_name field of the given PCI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PCI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_subsystem_vendor_name",
                    "status": "supported",
                    "desc": "Get the subsystem_vendor_name field of the given PCI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PCI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given PCI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PCI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vendor_name",
                    "status": "supported",
                    "desc": "Get the vendor_name field of the given PCI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PCI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given PCI. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PCI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given PCI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PCI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                }
            ]
        },
        {
            "name": "pgpu",
            "state": "supported",
            "desc": "A physical GPU (pGPU)",
            "fields": [
                {
                    "field": "compatibility_metadata",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "PGPU metadata to determine whether a VGPU can migrate between two PGPUs"
                },
                {
                    "field": "dom0_access",
                    "type": "pgpu_dom0_access",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The accessibility of this device from dom0"
                },
                {
                    "field": "enabled_VGPU_types",
                    "type": "VGPU_type ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "List of VGPU types which have been enabled for this PGPU"
                },
                {
                    "field": "GPU_group",
                    "type": "GPU_group ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "GPU group the pGPU is contained in"
                },
                {
                    "field": "host",
                    "type": "host ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Host that owns the GPU"
                },
                {
                    "field": "is_system_display_device",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Is this device the system display device"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "Additional configuration"
                },
                {
                    "field": "PCI",
                    "type": "PCI ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Link to underlying PCI device"
                },
                {
                    "field": "resident_VGPUs",
                    "type": "VGPU ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "List of VGPUs running on this PGPU"
                },
                {
                    "field": "supported_VGPU_max_capacities",
                    "type": "(VGPU_type ref -&gt; int) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "A map relating each VGPU type supported on this GPU to the maximum number of VGPUs of that type which can run simultaneously on this GPU"
                },
                {
                    "field": "supported_VGPU_types",
                    "type": "VGPU_type ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "List of VGPU types supported by the underlying hardware"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                }
            ],
            "rpcs": [
                {
                    "name": "add_enabled_vgpu_types",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PGPU ref",
                            "name": "self",
                            "desc": "The PGPU to which we are adding an enabled VGPU type"
                        },
                        {
                            "type": "VGPU_type ref",
                            "name": "value",
                            "desc": "The VGPU type to enable"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "add_to_other_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the other_config field of the given PGPU.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "disable_dom0_access",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PGPU ref",
                            "name": "self",
                            "desc": "The PGPU to which dom0 will be denied access"
                        }
                    ],
                    "return": {
                        "type": "pgpu_dom0_access",
                        "desc": "The accessibility of this PGPU from dom0",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "enable_dom0_access",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PGPU ref",
                            "name": "self",
                            "desc": "The PGPU to which dom0 will be granted access"
                        }
                    ],
                    "return": {
                        "type": "pgpu_dom0_access",
                        "desc": "The accessibility of this PGPU from dom0",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the PGPUs known to the system.",
                    "args": [],
                    "return": {
                        "type": "PGPU ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of PGPU references to PGPU records for all PGPUs known to the system.",
                    "args": [],
                    "return": {
                        "type": "(PGPU ref -&gt; PGPU record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the PGPU instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "PGPU ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_compatibility_metadata",
                    "status": "supported",
                    "desc": "Get the compatibility_metadata field of the given PGPU.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_dom0_access",
                    "status": "supported",
                    "desc": "Get the dom0_access field of the given PGPU.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "pgpu_dom0_access",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_enabled_vgpu_types",
                    "status": "supported",
                    "desc": "Get the enabled_VGPU_types field of the given PGPU.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VGPU_type ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_gpu_group",
                    "status": "supported",
                    "desc": "Get the GPU_group field of the given PGPU.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "GPU_group ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_host",
                    "status": "supported",
                    "desc": "Get the host field of the given PGPU.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_is_system_display_device",
                    "status": "supported",
                    "desc": "Get the is_system_display_device field of the given PGPU.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given PGPU.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pci",
                    "status": "supported",
                    "desc": "Get the PCI field of the given PGPU.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PCI ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given PGPU.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PGPU record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_remaining_capacity",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PGPU ref",
                            "name": "self",
                            "desc": "The PGPU to query"
                        },
                        {
                            "type": "VGPU_type ref",
                            "name": "vgpu_type",
                            "desc": "The VGPU type for which we want to find the number of VGPUs which can still be started on this PGPU"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "The number of VGPUs of the specified type which can still be started on this PGPU",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_resident_vgpus",
                    "status": "supported",
                    "desc": "Get the resident_VGPUs field of the given PGPU.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VGPU ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_supported_vgpu_max_capacities",
                    "status": "supported",
                    "desc": "Get the supported_VGPU_max_capacities field of the given PGPU.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(VGPU_type ref -&gt; int) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_supported_vgpu_types",
                    "status": "supported",
                    "desc": "Get the supported_VGPU_types field of the given PGPU.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VGPU_type ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given PGPU.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "remove_enabled_vgpu_types",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PGPU ref",
                            "name": "self",
                            "desc": "The PGPU from which we are removing an enabled VGPU type"
                        },
                        {
                            "type": "VGPU_type ref",
                            "name": "value",
                            "desc": "The VGPU type to disable"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given PGPU. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_enabled_vgpu_types",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PGPU ref",
                            "name": "self",
                            "desc": "The PGPU on which we are enabling a set of VGPU types"
                        },
                        {
                            "type": "VGPU_type ref set",
                            "name": "value",
                            "desc": "The VGPU types to enable"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_gpu_group",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PGPU ref",
                            "name": "self",
                            "desc": "The PGPU to move to a new group"
                        },
                        {
                            "type": "GPU_group ref",
                            "name": "value",
                            "desc": "The group to which the PGPU will be moved"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given PGPU.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                }
            ]
        },
        {
            "name": "pif",
            "state": "supported",
            "desc": "A physical network interface (note separate VLANs are represented as several PIFs)",
            "fields": [
                {
                    "field": "bond_master_of",
                    "type": "Bond ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Indicates this PIF represents the results of a bond"
                },
                {
                    "field": "bond_slave_of",
                    "type": "Bond ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Indicates which bond this interface is part of"
                },
                {
                    "field": "capabilities",
                    "type": "string set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Additional capabilities on the interface."
                },
                {
                    "field": "currently_attached",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "true if this interface is online"
                },
                {
                    "field": "device",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "machine-readable name of the interface (e.g. eth0)"
                },
                {
                    "field": "disallow_unplug",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Prevent this PIF from being unplugged; set this to notify the management tool-stack that the PIF has a special use and should not be unplugged under any circumstances (e.g. because you’re running storage traffic over it)"
                },
                {
                    "field": "DNS",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Comma separated list of the IP addresses of the DNS servers to use"
                },
                {
                    "field": "gateway",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "IP gateway"
                },
                {
                    "field": "host",
                    "type": "host ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "physical machine to which this pif is connected"
                },
                {
                    "field": "igmp_snooping_status",
                    "type": "pif_igmp_status",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The IGMP snooping status of the corresponding network bridge"
                },
                {
                    "field": "IP",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "IP address"
                },
                {
                    "field": "ip_configuration_mode",
                    "type": "ip_configuration_mode",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Sets if and how this interface gets an IP address"
                },
                {
                    "field": "IPv6",
                    "type": "string set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "IPv6 address"
                },
                {
                    "field": "ipv6_configuration_mode",
                    "type": "ipv6_configuration_mode",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Sets if and how this interface gets an IPv6 address"
                },
                {
                    "field": "ipv6_gateway",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "IPv6 gateway"
                },
                {
                    "field": "MAC",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "ethernet MAC address of physical interface"
                },
                {
                    "field": "managed",
                    "type": "bool",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Indicates whether the interface is managed by xapi. If it is not, then xapi will not configure the interface, the commands PIF.plug/unplug/reconfigure_ip(v6) cannot be used, nor can the interface be bonded or have VLANs based on top through xapi."
                },
                {
                    "field": "management",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Indicates whether the control software is listening for connections on this interface"
                },
                {
                    "field": "metrics",
                    "type": "PIF_metrics ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "metrics associated with this PIF"
                },
                {
                    "field": "MTU",
                    "type": "int",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "MTU in octets"
                },
                {
                    "field": "netmask",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "IP netmask"
                },
                {
                    "field": "network",
                    "type": "network ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "virtual network to which this pif is connected"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "Additional configuration"
                },
                {
                    "field": "PCI",
                    "type": "PCI ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Link to underlying PCI device"
                },
                {
                    "field": "physical",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "true if this represents a physical network interface"
                },
                {
                    "field": "primary_address_type",
                    "type": "primary_address_type",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Which protocol should define the primary address of this interface"
                },
                {
                    "field": "properties",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Additional configuration properties for the interface."
                },
                {
                    "field": "sriov_logical_PIF_of",
                    "type": "network_sriov ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Indicates which network_sriov this interface is logical of"
                },
                {
                    "field": "sriov_physical_PIF_of",
                    "type": "network_sriov ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Indicates which network_sriov this interface is physical of"
                },
                {
                    "field": "tunnel_access_PIF_of",
                    "type": "tunnel ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Indicates to which tunnel this PIF gives access"
                },
                {
                    "field": "tunnel_transport_PIF_of",
                    "type": "tunnel ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Indicates to which tunnel this PIF provides transport"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                },
                {
                    "field": "VLAN",
                    "type": "int",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "VLAN tag for all traffic passing through this interface"
                },
                {
                    "field": "VLAN_master_of",
                    "type": "VLAN ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Indicates which VLAN this interface receives untagged traffic from"
                },
                {
                    "field": "VLAN_slave_of",
                    "type": "VLAN ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Indicates which VLANs this interface transmits tagged traffic to"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_other_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the other_config field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "create_vlan",
                    "status": "deprecated",
                    "desc": "Create a VLAN interface from an existing physical interface. This call is deprecated: use VLAN.create instead",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "device",
                            "desc": "physical interface on which to create the VLAN interface"
                        },
                        {
                            "type": "network ref",
                            "name": "network",
                            "desc": "network to which this interface should be connected"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "physical machine to which this PIF is connected"
                        },
                        {
                            "type": "int",
                            "name": "VLAN",
                            "desc": "VLAN tag for the new interface"
                        }
                    ],
                    "return": {
                        "type": "PIF ref",
                        "desc": "The reference of the created PIF object",
                        "errs": [
                            "VLAN_TAG_INVALID"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "db_forget",
                    "status": "supported",
                    "desc": "Destroy a PIF database record.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "The ref of the PIF whose database record should be destroyed"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "db_introduce",
                    "status": "supported",
                    "desc": "Create a new PIF record in the database only",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "device",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "network ref",
                            "name": "network",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "string",
                            "name": "MAC",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "int",
                            "name": "MTU",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "int",
                            "name": "VLAN",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "bool",
                            "name": "physical",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "ip_configuration_mode",
                            "name": "ip_configuration_mode",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "string",
                            "name": "IP",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "string",
                            "name": "netmask",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "string",
                            "name": "gateway",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "string",
                            "name": "DNS",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "Bond ref",
                            "name": "bond_slave_of",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "VLAN ref",
                            "name": "VLAN_master_of",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "bool",
                            "name": "management",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "other_config",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "bool",
                            "name": "disallow_unplug",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "ipv6_configuration_mode",
                            "name": "ipv6_configuration_mode",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "string set",
                            "name": "IPv6",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "string",
                            "name": "ipv6_gateway",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "primary_address_type",
                            "name": "primary_address_type",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "bool",
                            "name": "managed",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "properties",
                            "desc": "&nbsp;"
                        }
                    ],
                    "return": {
                        "type": "PIF ref",
                        "desc": "The ref of the newly created PIF record.",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "destroy",
                    "status": "deprecated",
                    "desc": "Destroy the PIF object (provided it is a VLAN interface). This call is deprecated: use VLAN.destroy or Bond.destroy instead",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "the PIF object to destroy"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "PIF_IS_PHYSICAL"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "forget",
                    "status": "supported",
                    "desc": "Destroy the PIF object matching a particular network interface",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "The PIF object to destroy"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "PIF_TUNNEL_STILL_EXISTS",
                            "CLUSTERING_ENABLED"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the PIFs known to the system.",
                    "args": [],
                    "return": {
                        "type": "PIF ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of PIF references to PIF records for all PIFs known to the system.",
                    "args": [],
                    "return": {
                        "type": "(PIF ref -&gt; PIF record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_bond_master_of",
                    "status": "supported",
                    "desc": "Get the bond_master_of field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "Bond ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_bond_slave_of",
                    "status": "supported",
                    "desc": "Get the bond_slave_of field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "Bond ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the PIF instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "PIF ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_capabilities",
                    "status": "supported",
                    "desc": "Get the capabilities field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_currently_attached",
                    "status": "supported",
                    "desc": "Get the currently_attached field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_device",
                    "status": "supported",
                    "desc": "Get the device field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_disallow_unplug",
                    "status": "supported",
                    "desc": "Get the disallow_unplug field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_dns",
                    "status": "supported",
                    "desc": "Get the DNS field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_gateway",
                    "status": "supported",
                    "desc": "Get the gateway field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_host",
                    "status": "supported",
                    "desc": "Get the host field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_igmp_snooping_status",
                    "status": "supported",
                    "desc": "Get the igmp_snooping_status field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "pif_igmp_status",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_ip",
                    "status": "supported",
                    "desc": "Get the IP field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_ip_configuration_mode",
                    "status": "supported",
                    "desc": "Get the ip_configuration_mode field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "ip_configuration_mode",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_ipv6",
                    "status": "supported",
                    "desc": "Get the IPv6 field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_ipv6_configuration_mode",
                    "status": "supported",
                    "desc": "Get the ipv6_configuration_mode field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "ipv6_configuration_mode",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_ipv6_gateway",
                    "status": "supported",
                    "desc": "Get the ipv6_gateway field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_mac",
                    "status": "supported",
                    "desc": "Get the MAC field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_managed",
                    "status": "supported",
                    "desc": "Get the managed field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_management",
                    "status": "supported",
                    "desc": "Get the management field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_metrics",
                    "status": "supported",
                    "desc": "Get the metrics field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PIF_metrics ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_mtu",
                    "status": "supported",
                    "desc": "Get the MTU field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_netmask",
                    "status": "supported",
                    "desc": "Get the netmask field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_network",
                    "status": "supported",
                    "desc": "Get the network field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "network ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pci",
                    "status": "supported",
                    "desc": "Get the PCI field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PCI ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_physical",
                    "status": "supported",
                    "desc": "Get the physical field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_primary_address_type",
                    "status": "supported",
                    "desc": "Get the primary_address_type field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "primary_address_type",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_properties",
                    "status": "supported",
                    "desc": "Get the properties field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PIF record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_sriov_logical_pif_of",
                    "status": "supported",
                    "desc": "Get the sriov_logical_PIF_of field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "network_sriov ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_sriov_physical_pif_of",
                    "status": "supported",
                    "desc": "Get the sriov_physical_PIF_of field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "network_sriov ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_tunnel_access_pif_of",
                    "status": "supported",
                    "desc": "Get the tunnel_access_PIF_of field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "tunnel ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_tunnel_transport_pif_of",
                    "status": "supported",
                    "desc": "Get the tunnel_transport_PIF_of field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "tunnel ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vlan",
                    "status": "supported",
                    "desc": "Get the VLAN field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vlan_master_of",
                    "status": "supported",
                    "desc": "Get the VLAN_master_of field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VLAN ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vlan_slave_of",
                    "status": "supported",
                    "desc": "Get the VLAN_slave_of field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VLAN ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "introduce",
                    "status": "supported",
                    "desc": "Create a PIF object matching a particular network interface",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host on which the interface exists"
                        },
                        {
                            "type": "string",
                            "name": "MAC",
                            "desc": "The MAC address of the interface"
                        },
                        {
                            "type": "string",
                            "name": "device",
                            "desc": "The device name to use for the interface"
                        },
                        {
                            "type": "bool",
                            "name": "managed",
                            "desc": "Indicates whether the interface is managed by xapi (defaults to “true”)"
                        }
                    ],
                    "return": {
                        "type": "PIF ref",
                        "desc": "The reference of the created PIF object",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "plug",
                    "status": "supported",
                    "desc": "Attempt to bring up a physical interface",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "the PIF object to plug"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "TRANSPORT_PIF_NOT_CONFIGURED"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "reconfigure_ip",
                    "status": "supported",
                    "desc": "Reconfigure the IP address settings for this interface",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "the PIF object to reconfigure"
                        },
                        {
                            "type": "ip_configuration_mode",
                            "name": "mode",
                            "desc": "whether to use dynamic/static/no-assignment"
                        },
                        {
                            "type": "string",
                            "name": "IP",
                            "desc": "the new IP address"
                        },
                        {
                            "type": "string",
                            "name": "netmask",
                            "desc": "the new netmask"
                        },
                        {
                            "type": "string",
                            "name": "gateway",
                            "desc": "the new gateway"
                        },
                        {
                            "type": "string",
                            "name": "DNS",
                            "desc": "the new DNS settings"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "CLUSTERING_ENABLED"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "reconfigure_ipv6",
                    "status": "supported",
                    "desc": "Reconfigure the IPv6 address settings for this interface",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "the PIF object to reconfigure"
                        },
                        {
                            "type": "ipv6_configuration_mode",
                            "name": "mode",
                            "desc": "whether to use dynamic/static/no-assignment"
                        },
                        {
                            "type": "string",
                            "name": "IPv6",
                            "desc": "the new IPv6 address (in <addr>/<prefix length=\"\"> format)</prefix></addr>"
                        },
                        {
                            "type": "string",
                            "name": "gateway",
                            "desc": "the new gateway"
                        },
                        {
                            "type": "string",
                            "name": "DNS",
                            "desc": "the new DNS settings"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "CLUSTERING_ENABLED"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given PIF. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "scan",
                    "status": "supported",
                    "desc": "Scan for physical interfaces on a host and create PIF objects to represent them",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host on which to scan"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_disallow_unplug",
                    "status": "supported",
                    "desc": "Set whether unplugging the PIF is allowed",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "Reference to the object"
                        },
                        {
                            "type": "bool",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "OTHER_OPERATION_IN_PROGRESS",
                            "CLUSTERING_ENABLED"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_primary_address_type",
                    "status": "supported",
                    "desc": "Change the primary address type used by this PIF",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "the PIF object to reconfigure"
                        },
                        {
                            "type": "primary_address_type",
                            "name": "primary_address_type",
                            "desc": "Whether to prefer IPv4 or IPv6 connections"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_property",
                    "status": "supported",
                    "desc": "Set the value of a property of the PIF",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "The PIF"
                        },
                        {
                            "type": "string",
                            "name": "name",
                            "desc": "The property name"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "The property value"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "unplug",
                    "status": "supported",
                    "desc": "Attempt to bring down a physical interface",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "self",
                            "desc": "the PIF object to unplug"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "HA_OPERATION_WOULD_BREAK_FAILOVER_PLAN",
                            "VIF_IN_USE",
                            "PIF_DOES_NOT_ALLOW_UNPLUG",
                            "PIF_HAS_FCOE_SR_IN_USE"
                        ]
                    },
                    "minrole": "pool-operator"
                }
            ]
        },
        {
            "name": "pif_metrics",
            "state": "supported",
            "desc": "The metrics associated with a physical network interface",
            "fields": [
                {
                    "field": "carrier",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Report if the PIF got a carrier or not"
                },
                {
                    "field": "device_id",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Report device ID"
                },
                {
                    "field": "device_name",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Report device name"
                },
                {
                    "field": "duplex",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Full duplex capability of the link (if available)"
                },
                {
                    "field": "io_read_kbs",
                    "type": "float",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Removed</strong>. Read bandwidth (KiB/s)"
                },
                {
                    "field": "io_write_kbs",
                    "type": "float",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Removed</strong>. Write bandwidth (KiB/s)"
                },
                {
                    "field": "last_updated",
                    "type": "datetime",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Time at which this information was last updated"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "additional configuration"
                },
                {
                    "field": "pci_bus_path",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "PCI bus path of the pif (if available)"
                },
                {
                    "field": "speed",
                    "type": "int",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Speed of the link (if available)"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                },
                {
                    "field": "vendor_id",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Report vendor ID"
                },
                {
                    "field": "vendor_name",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Report vendor name"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_other_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the other_config field of the given PIF_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the PIF_metrics instances known to the system.",
                    "args": [],
                    "return": {
                        "type": "PIF_metrics ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of PIF_metrics references to PIF_metrics records for all PIF_metrics instances known to the system.",
                    "args": [],
                    "return": {
                        "type": "(PIF_metrics ref -&gt; PIF_metrics record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the PIF_metrics instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "PIF_metrics ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_carrier",
                    "status": "supported",
                    "desc": "Get the carrier field of the given PIF_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_device_id",
                    "status": "supported",
                    "desc": "Get the device_id field of the given PIF_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_device_name",
                    "status": "supported",
                    "desc": "Get the device_name field of the given PIF_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_duplex",
                    "status": "supported",
                    "desc": "Get the duplex field of the given PIF_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_io_read_kbs",
                    "status": "removed",
                    "desc": "Get the io/read_kbs field of the given PIF_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "float",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_io_write_kbs",
                    "status": "removed",
                    "desc": "Get the io/write_kbs field of the given PIF_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "float",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_last_updated",
                    "status": "supported",
                    "desc": "Get the last_updated field of the given PIF_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "datetime",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given PIF_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pci_bus_path",
                    "status": "supported",
                    "desc": "Get the pci_bus_path field of the given PIF_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given PIF_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PIF_metrics record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_speed",
                    "status": "supported",
                    "desc": "Get the speed field of the given PIF_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given PIF_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vendor_id",
                    "status": "supported",
                    "desc": "Get the vendor_id field of the given PIF_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vendor_name",
                    "status": "supported",
                    "desc": "Get the vendor_name field of the given PIF_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given PIF_metrics. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given PIF_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                }
            ]
        },
        {
            "name": "pool",
            "state": "supported",
            "desc": "Pool-wide information",
            "fields": [
                {
                    "field": "allowed_operations",
                    "type": "pool_allowed_operations set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client."
                },
                {
                    "field": "blobs",
                    "type": "(string -&gt; blob ref) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Binary blobs associated with this pool"
                },
                {
                    "field": "client_certificate_auth_enabled",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "True if authentication by TLS client certificates is enabled"
                },
                {
                    "field": "client_certificate_auth_name",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The name (CN/SAN) that an incoming client certificate must have to allow authentication"
                },
                {
                    "field": "coordinator_bias",
                    "type": "bool",
                    "qualifier": "<em>RW</em>",
                    "desc": "true if bias against pool master when scheduling vms is enabled, false otherwise"
                },
                {
                    "field": "cpu_info",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Details about the physical CPUs on the pool"
                },
                {
                    "field": "crash_dump_SR",
                    "type": "SR ref",
                    "qualifier": "<em>RW</em>",
                    "desc": "The SR in which VDIs for crash dumps are created"
                },
                {
                    "field": "current_operations",
                    "type": "(string -&gt; pool_allowed_operations) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task."
                },
                {
                    "field": "custom_uefi_certificates",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Custom UEFI certificates allowing Secure Boot"
                },
                {
                    "field": "default_SR",
                    "type": "SR ref",
                    "qualifier": "<em>RW</em>",
                    "desc": "Default SR for VDIs"
                },
                {
                    "field": "ext_auth_max_threads",
                    "type": "int",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Maximum number of threads to use for external (AD) authentication"
                },
                {
                    "field": "guest_agent_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Pool-wide guest agent configuration information"
                },
                {
                    "field": "gui_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "gui-specific configuration for pool"
                },
                {
                    "field": "ha_allow_overcommit",
                    "type": "bool",
                    "qualifier": "<em>RW</em>",
                    "desc": "If set to false then operations which would cause the Pool to become overcommitted will be blocked."
                },
                {
                    "field": "ha_cluster_stack",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The HA cluster stack that is currently in use. Only valid when HA is enabled."
                },
                {
                    "field": "ha_configuration",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The current HA configuration"
                },
                {
                    "field": "ha_enabled",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "true if HA is enabled on the pool, false otherwise"
                },
                {
                    "field": "ha_host_failures_to_tolerate",
                    "type": "int",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Number of host failures to tolerate before the Pool is declared to be overcommitted"
                },
                {
                    "field": "ha_overcommitted",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "True if the Pool is considered to be overcommitted i.e. if there exist insufficient physical resources to tolerate the configured number of host failures"
                },
                {
                    "field": "ha_plan_exists_for",
                    "type": "int",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Number of future host failures we have managed to find a plan for. Once this reaches zero any future host failures will cause the failure of protected VMs."
                },
                {
                    "field": "ha_statefiles",
                    "type": "string set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "HA statefile VDIs in use"
                },
                {
                    "field": "health_check_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "Configuration for the automatic health check feature"
                },
                {
                    "field": "igmp_snooping_enabled",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "true if IGMP snooping is enabled in the pool, false otherwise."
                },
                {
                    "field": "is_psr_pending",
                    "type": "bool",
                    "qualifier": "<em>RW</em>",
                    "desc": "True if either a PSR is running or we are waiting for a PSR to be re-run"
                },
                {
                    "field": "last_update_sync",
                    "type": "datetime",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "time of the last update sychronization"
                },
                {
                    "field": "live_patching_disabled",
                    "type": "bool",
                    "qualifier": "<em>RW</em>",
                    "desc": "The pool-wide flag to show if the live patching feauture is disabled or not."
                },
                {
                    "field": "local_auth_max_threads",
                    "type": "int",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Maximum number of threads to use for PAM authentication"
                },
                {
                    "field": "master",
                    "type": "host ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The host that is pool master"
                },
                {
                    "field": "metadata_VDIs",
                    "type": "VDI ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The set of currently known metadata VDIs for this pool"
                },
                {
                    "field": "migration_compression",
                    "type": "bool",
                    "qualifier": "<em>RW</em>",
                    "desc": "Default behaviour during migration, True if stream compression should be used"
                },
                {
                    "field": "name_description",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "Description"
                },
                {
                    "field": "name_label",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "Short name"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "additional configuration"
                },
                {
                    "field": "policy_no_vendor_device",
                    "type": "bool",
                    "qualifier": "<em>RW</em>",
                    "desc": "The pool-wide policy for clients on whether to use the vendor device or not on newly created VMs. This field will also be consulted if the ‘has_vendor_device’ field is not specified in the VM.create call."
                },
                {
                    "field": "redo_log_enabled",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "true a redo-log is to be used other than when HA is enabled, false otherwise"
                },
                {
                    "field": "redo_log_vdi",
                    "type": "VDI ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "indicates the VDI to use for the redo-log other than when HA is enabled"
                },
                {
                    "field": "repositories",
                    "type": "Repository ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The set of currently enabled repositories"
                },
                {
                    "field": "repository_proxy_password",
                    "type": "secret ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Password for the authentication of the proxy used in syncing with the enabled repositories"
                },
                {
                    "field": "repository_proxy_url",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Url of the proxy used in syncing with the enabled repositories"
                },
                {
                    "field": "repository_proxy_username",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Username for the authentication of the proxy used in syncing with the enabled repositories"
                },
                {
                    "field": "restrictions",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Pool-wide restrictions currently in effect"
                },
                {
                    "field": "suspend_image_SR",
                    "type": "SR ref",
                    "qualifier": "<em>RW</em>",
                    "desc": "The SR in which VDIs for suspend images are created"
                },
                {
                    "field": "tags",
                    "type": "string set",
                    "qualifier": "<em>RW</em>",
                    "desc": "user-specified tags for categorization purposes"
                },
                {
                    "field": "telemetry_frequency",
                    "type": "telemetry_frequency",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "How often the telemetry collection will be carried out"
                },
                {
                    "field": "telemetry_next_collection",
                    "type": "datetime",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The earliest timestamp (in UTC) when the next round of telemetry collection can be carried out"
                },
                {
                    "field": "telemetry_uuid",
                    "type": "secret ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The UUID of the pool for identification of telemetry data"
                },
                {
                    "field": "tls_verification_enabled",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "True iff TLS certificate verification is enabled"
                },
                {
                    "field": "uefi_certificates",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "The UEFI certificates allowing Secure Boot"
                },
                {
                    "field": "update_sync_day",
                    "type": "int",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The day of the week the update synchronizations will be scheduled, based on pool’s local timezone. Ignored when update_sync_frequency is daily"
                },
                {
                    "field": "update_sync_enabled",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Whether periodic update synchronization is enabled or not"
                },
                {
                    "field": "update_sync_frequency",
                    "type": "update_sync_frequency",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The frequency at which updates are synchronized from a remote CDN: daily or weekly."
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                },
                {
                    "field": "vswitch_controller",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Deprecated</strong>. address of the vswitch controller"
                },
                {
                    "field": "wlb_enabled",
                    "type": "bool",
                    "qualifier": "<em>RW</em>",
                    "desc": "true if workload balancing is enabled on the pool, false otherwise"
                },
                {
                    "field": "wlb_url",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Url for the configured workload balancing host"
                },
                {
                    "field": "wlb_username",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Username for accessing the workload balancing host"
                },
                {
                    "field": "wlb_verify_cert",
                    "type": "bool",
                    "qualifier": "<em>RW</em>",
                    "desc": "<strong>Deprecated</strong>. true if communication with the WLB server should enforce TLS certificate verification."
                }
            ],
            "rpcs": [
                {
                    "name": "add_repository",
                    "status": "supported",
                    "desc": "Add a repository to the enabled set",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "The pool"
                        },
                        {
                            "type": "Repository ref",
                            "name": "value",
                            "desc": "The repository to be added to the enabled set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "client-cert"
                },
                {
                    "name": "add_tags",
                    "status": "supported",
                    "desc": "Add the given value to the tags field of the given pool. If the value is already in that Set, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "add_to_guest_agent_config",
                    "status": "supported",
                    "desc": "Add a key-value pair to the pool-wide guest agent configuration",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "The pool"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "The key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "The value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "add_to_gui_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the gui_config field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "add_to_health_check_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the health_check_config field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "add_to_other_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the other_config field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "apply_edition",
                    "status": "supported",
                    "desc": "Apply an edition to all hosts in the pool",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "Reference to the pool"
                        },
                        {
                            "type": "string",
                            "name": "edition",
                            "desc": "The requested edition"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "certificate_install",
                    "status": "deprecated",
                    "desc": "Install a TLS CA certificate, pool-wide.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "name",
                            "desc": "A name to give the certificate"
                        },
                        {
                            "type": "string",
                            "name": "cert",
                            "desc": "The certificate in PEM format"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "certificate_list",
                    "status": "deprecated",
                    "desc": "List the names of all installed TLS CA certificates.",
                    "args": [],
                    "return": {
                        "type": "string set",
                        "desc": "All installed certificates",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "certificate_sync",
                    "status": "supported",
                    "desc": "Copy the TLS CA certificates and CRLs of the master to all slaves.",
                    "args": [],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "certificate_uninstall",
                    "status": "deprecated",
                    "desc": "Remove a pool-wide TLS CA certificate.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "name",
                            "desc": "The certificate name"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "check_update_readiness",
                    "status": "supported",
                    "desc": "Check if the pool is ready to be updated. If not, report the reasons.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "The pool"
                        },
                        {
                            "type": "bool",
                            "name": "requires_reboot",
                            "desc": "Assume that the update will require host reboots"
                        }
                    ],
                    "return": {
                        "type": "string set set",
                        "desc": "A set of error codes with arguments, if the pool is not ready to update. An empty list means the pool can be updated.",
                        "errs": []
                    },
                    "minrole": "client-cert"
                },
                {
                    "name": "configure_repository_proxy",
                    "status": "supported",
                    "desc": "Configure proxy for RPM package repositories.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "The pool"
                        },
                        {
                            "type": "string",
                            "name": "url",
                            "desc": "The URL of the proxy server"
                        },
                        {
                            "type": "string",
                            "name": "username",
                            "desc": "The username used to authenticate with the proxy server"
                        },
                        {
                            "type": "string",
                            "name": "password",
                            "desc": "The password used to authenticate with the proxy server"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "client-cert"
                },
                {
                    "name": "configure_update_sync",
                    "status": "supported",
                    "desc": "Configure periodic update synchronization to sync updates from a remote CDN",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "The pool"
                        },
                        {
                            "type": "update_sync_frequency",
                            "name": "update_sync_frequency",
                            "desc": "The frequency at which updates are synchronized from a remote CDN: daily or weekly."
                        },
                        {
                            "type": "int",
                            "name": "update_sync_day",
                            "desc": "The day of the week the update synchronization will happen, based on pool’s local timezone. Valid values are 0 to 6, 0 being Sunday. For ‘daily’ schedule, the value is ignored."
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "create_new_blob",
                    "status": "supported",
                    "desc": "Create a placeholder for a named binary blob of data that is associated with this pool",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "pool",
                            "desc": "The pool"
                        },
                        {
                            "type": "string",
                            "name": "name",
                            "desc": "The name associated with the blob"
                        },
                        {
                            "type": "string",
                            "name": "mime_type",
                            "desc": "The mime type for the data. Empty string translates to application/octet-stream"
                        },
                        {
                            "type": "bool",
                            "name": "public",
                            "desc": "True if the blob should be publicly available"
                        }
                    ],
                    "return": {
                        "type": "blob ref",
                        "desc": "The reference of the blob, needed for populating its data",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "create_vlan",
                    "status": "supported",
                    "desc": "Create PIFs, mapping a network to the same physical interface/VLAN on each host. This call is deprecated: use Pool.create_VLAN_from_PIF instead.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "device",
                            "desc": "physical interface on which to create the VLAN interface"
                        },
                        {
                            "type": "network ref",
                            "name": "network",
                            "desc": "network to which this interface should be connected"
                        },
                        {
                            "type": "int",
                            "name": "VLAN",
                            "desc": "VLAN tag for the new interface"
                        }
                    ],
                    "return": {
                        "type": "PIF ref set",
                        "desc": "The references of the created PIF objects",
                        "errs": [
                            "VLAN_TAG_INVALID"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "create_vlan_from_pif",
                    "status": "supported",
                    "desc": "Create a pool-wide VLAN by taking the PIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "pif",
                            "desc": "physical interface on any particular host, that identifies the PIF on which to create the (pool-wide) VLAN interface"
                        },
                        {
                            "type": "network ref",
                            "name": "network",
                            "desc": "network to which this interface should be connected"
                        },
                        {
                            "type": "int",
                            "name": "VLAN",
                            "desc": "VLAN tag for the new interface"
                        }
                    ],
                    "return": {
                        "type": "PIF ref set",
                        "desc": "The references of the created PIF objects",
                        "errs": [
                            "VLAN_TAG_INVALID"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "crl_install",
                    "status": "supported",
                    "desc": "Install a TLS CA-issued Certificate Revocation List, pool-wide.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "name",
                            "desc": "A name to give the CRL"
                        },
                        {
                            "type": "string",
                            "name": "cert",
                            "desc": "The CRL"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "crl_list",
                    "status": "supported",
                    "desc": "List the names of all installed TLS CA-issued Certificate Revocation Lists.",
                    "args": [],
                    "return": {
                        "type": "string set",
                        "desc": "The names of all installed CRLs",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "crl_uninstall",
                    "status": "supported",
                    "desc": "Remove a pool-wide TLS CA-issued Certificate Revocation List.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "name",
                            "desc": "The CRL name"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "deconfigure_wlb",
                    "status": "supported",
                    "desc": "Permanently deconfigures workload balancing monitoring on this pool",
                    "args": [],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "designate_new_master",
                    "status": "supported",
                    "desc": "Perform an orderly handover of the role of master to the referenced host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host who should become the new master"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "detect_nonhomogeneous_external_auth",
                    "status": "supported",
                    "desc": "This call asynchronously detects if the external authentication configuration in any slave is different from that in the master and raises appropriate alerts",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "pool",
                            "desc": "The pool where to detect non-homogeneous external authentication configuration"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "disable_client_certificate_auth",
                    "status": "supported",
                    "desc": "Disable client certificate authentication on the pool",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "The pool"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "client-cert"
                },
                {
                    "name": "disable_external_auth",
                    "status": "supported",
                    "desc": "This call disables external authentication on all the hosts of the pool",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "pool",
                            "desc": "The pool whose external authentication should be disabled"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "config",
                            "desc": "Optional parameters as a list of key-values containing the configuration data"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "disable_ha",
                    "status": "supported",
                    "desc": "Turn off High Availability mode",
                    "args": [],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "client-cert"
                },
                {
                    "name": "disable_local_storage_caching",
                    "status": "supported",
                    "desc": "This call disables pool-wide local storage caching",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "Reference to the pool"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "disable_redo_log",
                    "status": "supported",
                    "desc": "Disable the redo log if in use, unless HA is enabled.",
                    "args": [],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "disable_repository_proxy",
                    "status": "supported",
                    "desc": "Disable the proxy for RPM package repositories.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "The pool"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "client-cert"
                },
                {
                    "name": "disable_ssl_legacy",
                    "status": "deprecated",
                    "desc": "Sets ssl_legacy false on each host, pool-master last. See Host.ssl_legacy and Host.set_ssl_legacy.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "(ignored)"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "eject",
                    "status": "supported",
                    "desc": "Instruct a pool master to eject a host from the pool",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host to eject"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "emergency_reset_master",
                    "status": "supported",
                    "desc": "Instruct a slave already in a pool that the master has changed",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "master_address",
                            "desc": "The hostname of the master"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "emergency_transition_to_master",
                    "status": "supported",
                    "desc": "Instruct host that’s currently a slave to transition to being master",
                    "args": [],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "enable_client_certificate_auth",
                    "status": "supported",
                    "desc": "Enable client certificate authentication on the pool",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "The pool"
                        },
                        {
                            "type": "string",
                            "name": "name",
                            "desc": "The name (CN/SAN) that an incoming client certificate must have to allow authentication"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "client-cert"
                },
                {
                    "name": "enable_external_auth",
                    "status": "supported",
                    "desc": "This call enables external authentication on all the hosts of the pool",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "pool",
                            "desc": "The pool whose external authentication should be enabled"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "config",
                            "desc": "A list of key-values containing the configuration data"
                        },
                        {
                            "type": "string",
                            "name": "service_name",
                            "desc": "The name of the service"
                        },
                        {
                            "type": "string",
                            "name": "auth_type",
                            "desc": "The type of authentication (e.g. AD for Active Directory)"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "enable_ha",
                    "status": "supported",
                    "desc": "Turn on High Availability mode",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref set",
                            "name": "heartbeat_srs",
                            "desc": "Set of SRs to use for storage heartbeating"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "configuration",
                            "desc": "Detailed HA configuration to apply"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "client-cert"
                },
                {
                    "name": "enable_local_storage_caching",
                    "status": "supported",
                    "desc": "This call attempts to enable pool-wide local storage caching",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "Reference to the pool"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "enable_redo_log",
                    "status": "supported",
                    "desc": "Enable the redo log on the given SR and start using it, unless HA is enabled.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "sr",
                            "desc": "SR to hold the redo log."
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "enable_ssl_legacy",
                    "status": "removed",
                    "desc": "Sets ssl_legacy true on each host, pool-master last. See Host.ssl_legacy and Host.set_ssl_legacy.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "(ignored)"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "enable_tls_verification",
                    "status": "supported",
                    "desc": "Enable TLS server certificate verification",
                    "args": [],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the pools known to the system.",
                    "args": [],
                    "return": {
                        "type": "pool ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of pool references to pool records for all pools known to the system.",
                    "args": [],
                    "return": {
                        "type": "(pool ref -&gt; pool record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_allowed_operations",
                    "status": "supported",
                    "desc": "Get the allowed_operations field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "pool_allowed_operations set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_blobs",
                    "status": "supported",
                    "desc": "Get the blobs field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; blob ref) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the pool instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "pool ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_client_certificate_auth_enabled",
                    "status": "supported",
                    "desc": "Get the client_certificate_auth_enabled field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_client_certificate_auth_name",
                    "status": "supported",
                    "desc": "Get the client_certificate_auth_name field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_coordinator_bias",
                    "status": "supported",
                    "desc": "Get the coordinator_bias field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_cpu_info",
                    "status": "supported",
                    "desc": "Get the cpu_info field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_crash_dump_sr",
                    "status": "supported",
                    "desc": "Get the crash_dump_SR field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "SR ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_current_operations",
                    "status": "supported",
                    "desc": "Get the current_operations field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; pool_allowed_operations) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_custom_uefi_certificates",
                    "status": "supported",
                    "desc": "Get the custom_uefi_certificates field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_default_sr",
                    "status": "supported",
                    "desc": "Get the default_SR field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "SR ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_ext_auth_max_threads",
                    "status": "supported",
                    "desc": "Get the ext_auth_max_threads field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_guest_agent_config",
                    "status": "supported",
                    "desc": "Get the guest_agent_config field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_gui_config",
                    "status": "supported",
                    "desc": "Get the gui_config field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_ha_allow_overcommit",
                    "status": "supported",
                    "desc": "Get the ha_allow_overcommit field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_ha_cluster_stack",
                    "status": "supported",
                    "desc": "Get the ha_cluster_stack field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_ha_configuration",
                    "status": "supported",
                    "desc": "Get the ha_configuration field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_ha_enabled",
                    "status": "supported",
                    "desc": "Get the ha_enabled field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_ha_host_failures_to_tolerate",
                    "status": "supported",
                    "desc": "Get the ha_host_failures_to_tolerate field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_ha_overcommitted",
                    "status": "supported",
                    "desc": "Get the ha_overcommitted field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_ha_plan_exists_for",
                    "status": "supported",
                    "desc": "Get the ha_plan_exists_for field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_ha_statefiles",
                    "status": "supported",
                    "desc": "Get the ha_statefiles field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_health_check_config",
                    "status": "supported",
                    "desc": "Get the health_check_config field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_igmp_snooping_enabled",
                    "status": "supported",
                    "desc": "Get the igmp_snooping_enabled field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_is_psr_pending",
                    "status": "supported",
                    "desc": "Get the is_psr_pending field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_last_update_sync",
                    "status": "supported",
                    "desc": "Get the last_update_sync field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "datetime",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_license_state",
                    "status": "supported",
                    "desc": "This call returns the license state for the pool",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "Reference to the pool"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "The pool’s license state",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_live_patching_disabled",
                    "status": "supported",
                    "desc": "Get the live_patching_disabled field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_local_auth_max_threads",
                    "status": "supported",
                    "desc": "Get the local_auth_max_threads field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_master",
                    "status": "supported",
                    "desc": "Get the master field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_metadata_vdis",
                    "status": "supported",
                    "desc": "Get the metadata_VDIs field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VDI ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_migration_compression",
                    "status": "supported",
                    "desc": "Get the migration_compression field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_description",
                    "status": "supported",
                    "desc": "Get the name_description field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_label",
                    "status": "supported",
                    "desc": "Get the name_label field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_policy_no_vendor_device",
                    "status": "supported",
                    "desc": "Get the policy_no_vendor_device field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "pool record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_redo_log_enabled",
                    "status": "supported",
                    "desc": "Get the redo_log_enabled field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_redo_log_vdi",
                    "status": "supported",
                    "desc": "Get the redo_log_vdi field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VDI ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_repositories",
                    "status": "supported",
                    "desc": "Get the repositories field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "Repository ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_repository_proxy_password",
                    "status": "supported",
                    "desc": "Get the repository_proxy_password field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "secret ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_repository_proxy_url",
                    "status": "supported",
                    "desc": "Get the repository_proxy_url field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_repository_proxy_username",
                    "status": "supported",
                    "desc": "Get the repository_proxy_username field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_restrictions",
                    "status": "supported",
                    "desc": "Get the restrictions field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_suspend_image_sr",
                    "status": "supported",
                    "desc": "Get the suspend_image_SR field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "SR ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_tags",
                    "status": "supported",
                    "desc": "Get the tags field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_telemetry_frequency",
                    "status": "supported",
                    "desc": "Get the telemetry_frequency field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "telemetry_frequency",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_telemetry_next_collection",
                    "status": "supported",
                    "desc": "Get the telemetry_next_collection field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "datetime",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_telemetry_uuid",
                    "status": "supported",
                    "desc": "Get the telemetry_uuid field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "secret ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_tls_verification_enabled",
                    "status": "supported",
                    "desc": "Get the tls_verification_enabled field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uefi_certificates",
                    "status": "supported",
                    "desc": "Get the uefi_certificates field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_update_sync_day",
                    "status": "supported",
                    "desc": "Get the update_sync_day field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_update_sync_enabled",
                    "status": "supported",
                    "desc": "Get the update_sync_enabled field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_update_sync_frequency",
                    "status": "supported",
                    "desc": "Get the update_sync_frequency field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "update_sync_frequency",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vswitch_controller",
                    "status": "deprecated",
                    "desc": "Get the vswitch_controller field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_wlb_enabled",
                    "status": "supported",
                    "desc": "Get the wlb_enabled field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_wlb_url",
                    "status": "supported",
                    "desc": "Get the wlb_url field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_wlb_username",
                    "status": "supported",
                    "desc": "Get the wlb_username field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_wlb_verify_cert",
                    "status": "deprecated",
                    "desc": "Get the wlb_verify_cert field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "ha_compute_hypothetical_max_host_failures_to_tolerate",
                    "status": "supported",
                    "desc": "Returns the maximum number of host failures we could tolerate before we would be unable to restart the provided VMs",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "(VM ref -&gt; string) map",
                            "name": "configuration",
                            "desc": "Map of protected VM reference to restart priority"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "maximum value for ha_host_failures_to_tolerate given provided configuration",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "ha_compute_max_host_failures_to_tolerate",
                    "status": "supported",
                    "desc": "Returns the maximum number of host failures we could tolerate before we would be unable to restart configured VMs",
                    "args": [],
                    "return": {
                        "type": "int",
                        "desc": "maximum value for ha_host_failures_to_tolerate given current configuration",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "ha_compute_vm_failover_plan",
                    "status": "supported",
                    "desc": "Return a VM failover plan assuming a given subset of hosts fail",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref set",
                            "name": "failed_hosts",
                            "desc": "The set of hosts to assume have failed"
                        },
                        {
                            "type": "VM ref set",
                            "name": "failed_vms",
                            "desc": "The set of VMs to restart"
                        }
                    ],
                    "return": {
                        "type": "(VM ref -&gt; (string -&gt; string) map) map",
                        "desc": "VM failover plan: a map of VM to host to restart the host on",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "ha_failover_plan_exists",
                    "status": "supported",
                    "desc": "Returns true if a VM failover plan exists for up to ‘n’ host failures",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "int",
                            "name": "n",
                            "desc": "The number of host failures to plan for"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "true if a failover plan exists for the supplied number of host failures",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "ha_prevent_restarts_for",
                    "status": "supported",
                    "desc": "When this call returns the VM restart logic will not run for the requested number of seconds. If the argument is zero then the restart thread is immediately unblocked",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "int",
                            "name": "seconds",
                            "desc": "The number of seconds to block the restart thread for"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "has_extension",
                    "status": "supported",
                    "desc": "Return true if the extension is available on the pool",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "The pool"
                        },
                        {
                            "type": "string",
                            "name": "name",
                            "desc": "The name of the API call"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "True if the extension exists, false otherwise",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "initialize_wlb",
                    "status": "supported",
                    "desc": "Initializes workload balancing monitoring on this pool with the specified wlb server",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "wlb_url",
                            "desc": "The ip address and port to use when accessing the wlb server"
                        },
                        {
                            "type": "string",
                            "name": "wlb_username",
                            "desc": "The username used to authenticate with the wlb server"
                        },
                        {
                            "type": "string",
                            "name": "wlb_password",
                            "desc": "The password used to authenticate with the wlb server"
                        },
                        {
                            "type": "string",
                            "name": "xenserver_username",
                            "desc": "The username used by the wlb server to authenticate with the xenserver"
                        },
                        {
                            "type": "string",
                            "name": "xenserver_password",
                            "desc": "The password used by the wlb server to authenticate with the xenserver"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "install_ca_certificate",
                    "status": "supported",
                    "desc": "Install a TLS CA certificate, pool-wide.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "name",
                            "desc": "A name to give the certificate"
                        },
                        {
                            "type": "string",
                            "name": "cert",
                            "desc": "The certificate in PEM format"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "client-cert"
                },
                {
                    "name": "join",
                    "status": "supported",
                    "desc": "Instruct host to join a new pool",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "master_address",
                            "desc": "The hostname of the master of the pool to join"
                        },
                        {
                            "type": "string",
                            "name": "master_username",
                            "desc": "The username of the master (for initial authentication)"
                        },
                        {
                            "type": "string",
                            "name": "master_password",
                            "desc": "The password for the master (for initial authentication)"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "JOINING_HOST_CANNOT_CONTAIN_SHARED_SRS"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "join_force",
                    "status": "supported",
                    "desc": "Instruct host to join a new pool",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "master_address",
                            "desc": "The hostname of the master of the pool to join"
                        },
                        {
                            "type": "string",
                            "name": "master_username",
                            "desc": "The username of the master (for initial authentication)"
                        },
                        {
                            "type": "string",
                            "name": "master_password",
                            "desc": "The password for the master (for initial authentication)"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "management_reconfigure",
                    "status": "supported",
                    "desc": "Reconfigure the management network interface for all Hosts in the Pool",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "network ref",
                            "name": "network",
                            "desc": "The network"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "HA_IS_ENABLED",
                            "PIF_NOT_PRESENT",
                            "CANNOT_PLUG_BOND_SLAVE",
                            "PIF_INCOMPATIBLE_PRIMARY_ADDRESS_TYPE",
                            "PIF_HAS_NO_NETWORK_CONFIGURATION",
                            "PIF_HAS_NO_V6_NETWORK_CONFIGURATION"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "recover_slaves",
                    "status": "supported",
                    "desc": "Instruct a pool master, M, to try and contact its slaves and, if slaves are in emergency mode, reset their master address to M.",
                    "args": [],
                    "return": {
                        "type": "host ref set",
                        "desc": "list of hosts whose master address were successfully reset",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "remove_from_guest_agent_config",
                    "status": "supported",
                    "desc": "Remove a key-value pair from the pool-wide guest agent configuration",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "The pool"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "The key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "remove_from_gui_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the gui_config field of the given pool. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "remove_from_health_check_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the health_check_config field of the given pool. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given pool. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "remove_repository",
                    "status": "supported",
                    "desc": "Remove a repository from the enabled set",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "The pool"
                        },
                        {
                            "type": "Repository ref",
                            "name": "value",
                            "desc": "The repository to be removed"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "client-cert"
                },
                {
                    "name": "remove_tags",
                    "status": "supported",
                    "desc": "Remove the given value from the tags field of the given pool. If the value is not in that Set, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "reset_telemetry_uuid",
                    "status": "supported",
                    "desc": "Assign a new UUID to telemetry data.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "The pool"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "retrieve_wlb_configuration",
                    "status": "supported",
                    "desc": "Retrieves the pool optimization criteria from the workload balancing server",
                    "args": [],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "The configuration used in optimizing this pool",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "retrieve_wlb_recommendations",
                    "status": "supported",
                    "desc": "Retrieves vm migrate recommendations for the pool from the workload balancing server",
                    "args": [],
                    "return": {
                        "type": "(VM ref -&gt; string set) map",
                        "desc": "The list of vm migration recommendations",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "rotate_secret",
                    "status": "supported",
                    "desc": "",
                    "args": [],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "INTERNAL_ERROR",
                            "HOST_IS_SLAVE",
                            "CANNOT_CONTACT_HOST",
                            "HA_IS_ENABLED",
                            "NOT_SUPPORTED_DURING_UPGRADE"
                        ]
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "send_test_post",
                    "status": "supported",
                    "desc": "Send the given body to the given host and port, using HTTPS, and print the response. This is used for debugging the SSL layer.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "host",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "int",
                            "name": "port",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "string",
                            "name": "body",
                            "desc": "&nbsp;"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "The response",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "send_wlb_configuration",
                    "status": "supported",
                    "desc": "Sets the pool optimization criteria for the workload balancing server",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "config",
                            "desc": "The configuration to use in optimizing this pool"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_coordinator_bias",
                    "status": "supported",
                    "desc": "Set the coordinator_bias field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "bool",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_crash_dump_sr",
                    "status": "supported",
                    "desc": "Set the crash_dump_SR field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "SR ref",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_custom_uefi_certificates",
                    "status": "supported",
                    "desc": "Set custom UEFI certificates for a pool and all its hosts. Need <code class=\"language-plaintext highlighter-rouge\">allow&amp;#45;custom&amp;#45;uefi&amp;#45;certs</code> set to true in conf. If empty: default back to Pool.uefi_certificates",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "The pool"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "The certificates to apply to the pool and its hosts"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "set_default_sr",
                    "status": "supported",
                    "desc": "Set the default_SR field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "SR ref",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_ext_auth_max_threads",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "The pool"
                        },
                        {
                            "type": "int",
                            "name": "value",
                            "desc": "The new maximum"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_gui_config",
                    "status": "supported",
                    "desc": "Set the gui_config field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "set_ha_allow_overcommit",
                    "status": "supported",
                    "desc": "Set the ha_allow_overcommit field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "bool",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_ha_host_failures_to_tolerate",
                    "status": "supported",
                    "desc": "Set the maximum number of host failures to consider in the HA VM restart planner",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "The pool"
                        },
                        {
                            "type": "int",
                            "name": "value",
                            "desc": "New number of host failures to consider"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_health_check_config",
                    "status": "supported",
                    "desc": "Set the health_check_config field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_https_only",
                    "status": "supported",
                    "desc": "updates all the host firewalls in the pool to open or close port 80 depending on the value",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "The pool"
                        },
                        {
                            "type": "bool",
                            "name": "value",
                            "desc": "true - http port 80 will be blocked, false - http port 80 will be open for the hosts in the pool"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_igmp_snooping_enabled",
                    "status": "supported",
                    "desc": "Enable or disable IGMP Snooping on the pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "The pool"
                        },
                        {
                            "type": "bool",
                            "name": "value",
                            "desc": "Enable or disable IGMP Snooping on the pool"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_is_psr_pending",
                    "status": "supported",
                    "desc": "Set the is_psr_pending field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "bool",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_live_patching_disabled",
                    "status": "supported",
                    "desc": "Set the live_patching_disabled field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "bool",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_local_auth_max_threads",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "The pool"
                        },
                        {
                            "type": "int",
                            "name": "value",
                            "desc": "The new maximum"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_migration_compression",
                    "status": "supported",
                    "desc": "Set the migration_compression field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "bool",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_name_description",
                    "status": "supported",
                    "desc": "Set the name_description field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_name_label",
                    "status": "supported",
                    "desc": "Set the name_label field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_policy_no_vendor_device",
                    "status": "supported",
                    "desc": "Set the policy_no_vendor_device field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "bool",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_repositories",
                    "status": "supported",
                    "desc": "Set enabled set of repositories",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "The pool"
                        },
                        {
                            "type": "Repository ref set",
                            "name": "value",
                            "desc": "The set of repositories to be enabled"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "client-cert"
                },
                {
                    "name": "set_suspend_image_sr",
                    "status": "supported",
                    "desc": "Set the suspend_image_SR field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "SR ref",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_tags",
                    "status": "supported",
                    "desc": "Set the tags field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string set",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "set_telemetry_next_collection",
                    "status": "supported",
                    "desc": "Set the timestamp for the next telemetry data collection.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "The pool"
                        },
                        {
                            "type": "datetime",
                            "name": "value",
                            "desc": "The earliest timestamp (in UTC) when the next round of telemetry collection can be carried out."
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "set_uefi_certificates",
                    "status": "deprecated",
                    "desc": "Set the UEFI certificates for a pool and all its hosts. Deprecated: use set_custom_uefi_certificates instead",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "The pool"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "The certificates to apply to the pool and its hosts"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "set_update_sync_enabled",
                    "status": "supported",
                    "desc": "enable or disable periodic update synchronization depending on the value",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "The pool"
                        },
                        {
                            "type": "bool",
                            "name": "value",
                            "desc": "true - enable periodic update synchronization, false - disable it"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_vswitch_controller",
                    "status": "deprecated",
                    "desc": "Set the IP address of the vswitch controller.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "address",
                            "desc": "IP address of the vswitch controller."
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_wlb_enabled",
                    "status": "supported",
                    "desc": "Set the wlb_enabled field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "bool",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "client-cert"
                },
                {
                    "name": "set_wlb_verify_cert",
                    "status": "deprecated",
                    "desc": "Set the wlb_verify_cert field of the given pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "bool",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "sync_database",
                    "status": "supported",
                    "desc": "Forcibly synchronise the database now",
                    "args": [],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "sync_updates",
                    "status": "supported",
                    "desc": "Sync with the enabled repository",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "The pool"
                        },
                        {
                            "type": "bool",
                            "name": "force",
                            "desc": "If true local mirroring repo will be removed before syncing"
                        },
                        {
                            "type": "string",
                            "name": "token",
                            "desc": "The token for repository client authentication"
                        },
                        {
                            "type": "string",
                            "name": "token_id",
                            "desc": "The ID of the token"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "The SHA256 hash of updateinfo.xml.gz",
                        "errs": []
                    },
                    "minrole": "client-cert"
                },
                {
                    "name": "test_archive_target",
                    "status": "supported",
                    "desc": "This call tests if a location is valid",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool ref",
                            "name": "self",
                            "desc": "Reference to the pool"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "config",
                            "desc": "Location config settings to test"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "An XMLRPC result",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "uninstall_ca_certificate",
                    "status": "supported",
                    "desc": "Remove a pool-wide TLS CA certificate.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "name",
                            "desc": "The certificate name"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "client-cert"
                }
            ]
        },
        {
            "name": "pool_patch",
            "state": "supported",
            "desc": "Pool-wide patches",
            "fields": [
                {
                    "field": "after_apply_guidance",
                    "type": "after_apply_guidance set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Deprecated</strong>. What the client should do after this patch has been applied."
                },
                {
                    "field": "host_patches",
                    "type": "host_patch ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Deprecated</strong>. This hosts this patch is applied to."
                },
                {
                    "field": "name_description",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "<strong>Deprecated</strong>. a notes field containing human-readable description"
                },
                {
                    "field": "name_label",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "<strong>Deprecated</strong>. a human-readable name"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "<strong>Deprecated</strong>. additional configuration"
                },
                {
                    "field": "pool_applied",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Deprecated</strong>. This patch should be applied across the entire pool"
                },
                {
                    "field": "pool_update",
                    "type": "pool_update ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "<strong>Deprecated</strong>. A reference to the associated pool_update object"
                },
                {
                    "field": "size",
                    "type": "int",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Deprecated</strong>. Size of the patch"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Deprecated</strong>. Unique identifier/object reference"
                },
                {
                    "field": "version",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "<strong>Deprecated</strong>. Patch version number"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_other_config",
                    "status": "deprecated",
                    "desc": "Add the given key-value pair to the other_config field of the given pool_patch.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_patch ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "apply",
                    "status": "deprecated",
                    "desc": "Apply the selected patch to a host and return its output",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_patch ref",
                            "name": "self",
                            "desc": "The patch to apply"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host to apply the patch too"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "the output of the patch application process",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "clean",
                    "status": "deprecated",
                    "desc": "Removes the patch’s files from the server",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_patch ref",
                            "name": "self",
                            "desc": "The patch to clean up"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "clean_on_host",
                    "status": "deprecated",
                    "desc": "Removes the patch’s files from the specified host",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_patch ref",
                            "name": "self",
                            "desc": "The patch to clean up"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host on which to clean the patch"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "destroy",
                    "status": "deprecated",
                    "desc": "Removes the patch’s files from all hosts in the pool, and removes the database entries. Only works on unapplied patches.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_patch ref",
                            "name": "self",
                            "desc": "The patch to destroy"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_after_apply_guidance",
                    "status": "deprecated",
                    "desc": "Get the after_apply_guidance field of the given pool_patch.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_patch ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "after_apply_guidance set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all",
                    "status": "deprecated",
                    "desc": "Return a list of all the pool_patchs known to the system.",
                    "args": [],
                    "return": {
                        "type": "pool_patch ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "deprecated",
                    "desc": "Return a map of pool_patch references to pool_patch records for all pool_patchs known to the system.",
                    "args": [],
                    "return": {
                        "type": "(pool_patch ref -&gt; pool_patch record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_name_label",
                    "status": "deprecated",
                    "desc": "Get all the pool_patch instances with the given label.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "label",
                            "desc": "label of object to return"
                        }
                    ],
                    "return": {
                        "type": "pool_patch ref set",
                        "desc": "references to objects with matching names",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "deprecated",
                    "desc": "Get a reference to the pool_patch instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "pool_patch ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_host_patches",
                    "status": "deprecated",
                    "desc": "Get the host_patches field of the given pool_patch.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_patch ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host_patch ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_description",
                    "status": "deprecated",
                    "desc": "Get the name/description field of the given pool_patch.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_patch ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_label",
                    "status": "deprecated",
                    "desc": "Get the name/label field of the given pool_patch.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_patch ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "deprecated",
                    "desc": "Get the other_config field of the given pool_patch.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_patch ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pool_applied",
                    "status": "deprecated",
                    "desc": "Get the pool_applied field of the given pool_patch.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_patch ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pool_update",
                    "status": "deprecated",
                    "desc": "Get the pool_update field of the given pool_patch.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_patch ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "pool_update ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "deprecated",
                    "desc": "Get a record containing the current state of the given pool_patch.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_patch ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "pool_patch record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_size",
                    "status": "deprecated",
                    "desc": "Get the size field of the given pool_patch.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_patch ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "deprecated",
                    "desc": "Get the uuid field of the given pool_patch.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_patch ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_version",
                    "status": "deprecated",
                    "desc": "Get the version field of the given pool_patch.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_patch ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "pool_apply",
                    "status": "deprecated",
                    "desc": "Apply the selected patch to all hosts in the pool and return a map of host_ref -&gt; patch output",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_patch ref",
                            "name": "self",
                            "desc": "The patch to apply"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "pool_clean",
                    "status": "deprecated",
                    "desc": "Removes the patch’s files from all hosts in the pool, but does not remove the database entries",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_patch ref",
                            "name": "self",
                            "desc": "The patch to clean up"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "precheck",
                    "status": "deprecated",
                    "desc": "Execute the precheck stage of the selected patch on a host and return its output",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_patch ref",
                            "name": "self",
                            "desc": "The patch whose prechecks will be run"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host to run the prechecks on"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "the output of the patch prechecks",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "deprecated",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given pool_patch. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_patch ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_other_config",
                    "status": "deprecated",
                    "desc": "Set the other_config field of the given pool_patch.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_patch ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                }
            ],
            "supported": "deprecated"
        },
        {
            "name": "pool_update",
            "state": "supported",
            "desc": "Pool-wide updates to the host software",
            "fields": [
                {
                    "field": "after_apply_guidance",
                    "type": "update_after_apply_guidance set",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "What the client should do after this update has been applied."
                },
                {
                    "field": "enforce_homogeneity",
                    "type": "bool",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Flag - if true, all hosts in a pool must apply this update"
                },
                {
                    "field": "hosts",
                    "type": "host ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The hosts that have applied this update."
                },
                {
                    "field": "installation_size",
                    "type": "int",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Size of the update in bytes"
                },
                {
                    "field": "key",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "GPG key of the update"
                },
                {
                    "field": "name_description",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "a notes field containing human-readable description"
                },
                {
                    "field": "name_label",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "a human-readable name"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "additional configuration"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                },
                {
                    "field": "vdi",
                    "type": "VDI ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "VDI the update was uploaded to"
                },
                {
                    "field": "version",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Update version number"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_other_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the other_config field of the given pool_update.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_update ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "apply",
                    "status": "supported",
                    "desc": "Apply the selected update to a host",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_update ref",
                            "name": "self",
                            "desc": "The update to apply"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host to apply the update to."
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "Removes the database entry. Only works on unapplied update.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_update ref",
                            "name": "self",
                            "desc": "The update to destroy"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_after_apply_guidance",
                    "status": "supported",
                    "desc": "Get the after_apply_guidance field of the given pool_update.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_update ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "update_after_apply_guidance set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the pool_updates known to the system.",
                    "args": [],
                    "return": {
                        "type": "pool_update ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of pool_update references to pool_update records for all pool_updates known to the system.",
                    "args": [],
                    "return": {
                        "type": "(pool_update ref -&gt; pool_update record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_name_label",
                    "status": "supported",
                    "desc": "Get all the pool_update instances with the given label.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "label",
                            "desc": "label of object to return"
                        }
                    ],
                    "return": {
                        "type": "pool_update ref set",
                        "desc": "references to objects with matching names",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the pool_update instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "pool_update ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_enforce_homogeneity",
                    "status": "supported",
                    "desc": "Get the enforce_homogeneity field of the given pool_update.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_update ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_hosts",
                    "status": "supported",
                    "desc": "Get the hosts field of the given pool_update.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_update ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_installation_size",
                    "status": "supported",
                    "desc": "Get the installation_size field of the given pool_update.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_update ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_key",
                    "status": "supported",
                    "desc": "Get the key field of the given pool_update.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_update ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_description",
                    "status": "supported",
                    "desc": "Get the name/description field of the given pool_update.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_update ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_label",
                    "status": "supported",
                    "desc": "Get the name/label field of the given pool_update.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_update ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given pool_update.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_update ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given pool_update.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_update ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "pool_update record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given pool_update.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_update ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vdi",
                    "status": "supported",
                    "desc": "Get the vdi field of the given pool_update.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_update ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VDI ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_version",
                    "status": "supported",
                    "desc": "Get the version field of the given pool_update.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_update ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "introduce",
                    "status": "supported",
                    "desc": "Introduce update VDI",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "vdi",
                            "desc": "The VDI which contains a software update."
                        }
                    ],
                    "return": {
                        "type": "pool_update ref",
                        "desc": "the introduced pool update",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "pool_apply",
                    "status": "supported",
                    "desc": "Apply the selected update to all hosts in the pool",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_update ref",
                            "name": "self",
                            "desc": "The update to apply"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "pool_clean",
                    "status": "supported",
                    "desc": "Removes the update’s files from all hosts in the pool, but does not revert the update",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_update ref",
                            "name": "self",
                            "desc": "The update to clean up"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "precheck",
                    "status": "supported",
                    "desc": "Execute the precheck stage of the selected update on a host",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_update ref",
                            "name": "self",
                            "desc": "The update whose prechecks will be run"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host to run the prechecks on."
                        }
                    ],
                    "return": {
                        "type": "livepatch_status",
                        "desc": "The precheck pool update",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given pool_update. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_update ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given pool_update.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "pool_update ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                }
            ]
        },
        {
            "name": "probe_result",
            "state": "supported",
            "desc": "A set of properties that describe one result element of SR.probe. Result elements and properties can change dynamically based on changes to the the SR.probe input-parameters or the target.",
            "fields": [
                {
                    "field": "complete",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "True if this configuration is complete and can be used to call SR.create. False if it requires further iterative calls to SR.probe, to potentially narrow down on a configuration that can be used."
                },
                {
                    "field": "configuration",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Plugin-specific configuration which describes where and how to locate the storage repository. This may include the physical block device name, a remote NFS server and path or an RBD storage pool."
                },
                {
                    "field": "extra_info",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Additional plugin-specific information about this configuration, that might be of use for an API user. This can for example include the LUN or the WWPN."
                },
                {
                    "field": "sr",
                    "type": "sr_stat record option",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Existing SR found for this configuration"
                }
            ],
            "rpcs": []
        },
        {
            "name": "pusb",
            "deprecated": false,
            "desc": "A physical USB device",
            "fields": [
                {
                    "field": "description",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "USB device description"
                },
                {
                    "field": "host",
                    "type": "host ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Physical machine that owns the USB device"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "additional configuration"
                },
                {
                    "field": "passthrough_enabled",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "enabled for passthrough"
                },
                {
                    "field": "path",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "port path of USB device"
                },
                {
                    "field": "product_desc",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "product description of the USB device"
                },
                {
                    "field": "product_id",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "product id of the USB device"
                },
                {
                    "field": "serial",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "serial of the USB device"
                },
                {
                    "field": "speed",
                    "type": "float",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "USB device speed"
                },
                {
                    "field": "USB_group",
                    "type": "USB_group ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "USB group the PUSB is contained in"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                },
                {
                    "field": "vendor_desc",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "vendor description of the USB device"
                },
                {
                    "field": "vendor_id",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "vendor id of the USB device"
                },
                {
                    "field": "version",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "USB device version"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_other_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the other_config field of the given PUSB.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PUSB ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the PUSBs known to the system.",
                    "args": [],
                    "return": {
                        "type": "PUSB ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of PUSB references to PUSB records for all PUSBs known to the system.",
                    "args": [],
                    "return": {
                        "type": "(PUSB ref -&gt; PUSB record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the PUSB instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "PUSB ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_description",
                    "status": "supported",
                    "desc": "Get the description field of the given PUSB.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PUSB ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_host",
                    "status": "supported",
                    "desc": "Get the host field of the given PUSB.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PUSB ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given PUSB.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PUSB ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_passthrough_enabled",
                    "status": "supported",
                    "desc": "Get the passthrough_enabled field of the given PUSB.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PUSB ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_path",
                    "status": "supported",
                    "desc": "Get the path field of the given PUSB.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PUSB ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_product_desc",
                    "status": "supported",
                    "desc": "Get the product_desc field of the given PUSB.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PUSB ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_product_id",
                    "status": "supported",
                    "desc": "Get the product_id field of the given PUSB.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PUSB ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given PUSB.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PUSB ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PUSB record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_serial",
                    "status": "supported",
                    "desc": "Get the serial field of the given PUSB.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PUSB ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_speed",
                    "status": "supported",
                    "desc": "Get the speed field of the given PUSB.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PUSB ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "float",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_usb_group",
                    "status": "supported",
                    "desc": "Get the USB_group field of the given PUSB.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PUSB ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "USB_group ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given PUSB.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PUSB ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vendor_desc",
                    "status": "supported",
                    "desc": "Get the vendor_desc field of the given PUSB.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PUSB ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vendor_id",
                    "status": "supported",
                    "desc": "Get the vendor_id field of the given PUSB.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PUSB ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_version",
                    "status": "supported",
                    "desc": "Get the version field of the given PUSB.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PUSB ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given PUSB. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PUSB ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "scan",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given PUSB.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PUSB ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "set_passthrough_enabled",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PUSB ref",
                            "name": "self",
                            "desc": "this PUSB"
                        },
                        {
                            "type": "bool",
                            "name": "value",
                            "desc": "passthrough is enabled when true and disabled with false"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                }
            ]
        },
        {
            "name": "pvs_cache_storage",
            "state": "supported",
            "desc": "Describes the storage that is available to a PVS site for caching purposes",
            "fields": [
                {
                    "field": "host",
                    "type": "host ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "The host on which this object defines PVS cache storage"
                },
                {
                    "field": "site",
                    "type": "PVS_site ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "The PVS_site for which this object defines the storage"
                },
                {
                    "field": "size",
                    "type": "int",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "The size of the cache VDI (in bytes)"
                },
                {
                    "field": "SR",
                    "type": "SR ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "SR providing storage for the PVS cache"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                },
                {
                    "field": "VDI",
                    "type": "VDI ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The VDI used for caching"
                }
            ],
            "rpcs": [
                {
                    "name": "create",
                    "status": "supported",
                    "desc": "Create a new PVS_cache_storage instance, and return its handle.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_cache_storage record",
                            "name": "args",
                            "desc": "All constructor arguments"
                        }
                    ],
                    "return": {
                        "type": "PVS_cache_storage ref",
                        "desc": "reference to the newly created object",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "Destroy the specified PVS_cache_storage instance.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_cache_storage ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the PVS_cache_storages known to the system.",
                    "args": [],
                    "return": {
                        "type": "PVS_cache_storage ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of PVS_cache_storage references to PVS_cache_storage records for all PVS_cache_storages known to the system.",
                    "args": [],
                    "return": {
                        "type": "(PVS_cache_storage ref -&gt; PVS_cache_storage record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the PVS_cache_storage instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "PVS_cache_storage ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_host",
                    "status": "supported",
                    "desc": "Get the host field of the given PVS_cache_storage.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_cache_storage ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given PVS_cache_storage.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_cache_storage ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PVS_cache_storage record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_site",
                    "status": "supported",
                    "desc": "Get the site field of the given PVS_cache_storage.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_cache_storage ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PVS_site ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_size",
                    "status": "supported",
                    "desc": "Get the size field of the given PVS_cache_storage.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_cache_storage ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_sr",
                    "status": "supported",
                    "desc": "Get the SR field of the given PVS_cache_storage.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_cache_storage ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "SR ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given PVS_cache_storage.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_cache_storage ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vdi",
                    "status": "supported",
                    "desc": "Get the VDI field of the given PVS_cache_storage.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_cache_storage ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VDI ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                }
            ]
        },
        {
            "name": "pvs_proxy",
            "state": "supported",
            "desc": "a proxy connects a VM/VIF with a PVS site",
            "fields": [
                {
                    "field": "currently_attached",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "true = VM is currently proxied"
                },
                {
                    "field": "site",
                    "type": "PVS_site ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "PVS site this proxy is part of"
                },
                {
                    "field": "status",
                    "type": "pvs_proxy_status",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The run-time status of the proxy"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                },
                {
                    "field": "VIF",
                    "type": "VIF ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "VIF of the VM using the proxy"
                }
            ],
            "rpcs": [
                {
                    "name": "create",
                    "status": "supported",
                    "desc": "Configure a VM/VIF to use a PVS proxy",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_site ref",
                            "name": "site",
                            "desc": "PVS site that we proxy for"
                        },
                        {
                            "type": "VIF ref",
                            "name": "VIF",
                            "desc": "VIF for the VM that needs to be proxied"
                        }
                    ],
                    "return": {
                        "type": "PVS_proxy ref",
                        "desc": "the new PVS proxy",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "remove (or switch off) a PVS proxy for this VM",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_proxy ref",
                            "name": "self",
                            "desc": "this PVS proxy"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the PVS_proxys known to the system.",
                    "args": [],
                    "return": {
                        "type": "PVS_proxy ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of PVS_proxy references to PVS_proxy records for all PVS_proxys known to the system.",
                    "args": [],
                    "return": {
                        "type": "(PVS_proxy ref -&gt; PVS_proxy record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the PVS_proxy instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "PVS_proxy ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_currently_attached",
                    "status": "supported",
                    "desc": "Get the currently_attached field of the given PVS_proxy.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_proxy ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given PVS_proxy.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_proxy ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PVS_proxy record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_site",
                    "status": "supported",
                    "desc": "Get the site field of the given PVS_proxy.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_proxy ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PVS_site ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_status",
                    "status": "supported",
                    "desc": "Get the status field of the given PVS_proxy.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_proxy ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "pvs_proxy_status",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given PVS_proxy.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_proxy ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vif",
                    "status": "supported",
                    "desc": "Get the VIF field of the given PVS_proxy.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_proxy ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VIF ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                }
            ]
        },
        {
            "name": "pvs_server",
            "state": "supported",
            "desc": "individual machine serving provisioning (block) data",
            "fields": [
                {
                    "field": "addresses",
                    "type": "string set",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "IPv4 addresses of this server"
                },
                {
                    "field": "first_port",
                    "type": "int",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "First UDP port accepted by this server"
                },
                {
                    "field": "last_port",
                    "type": "int",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Last UDP port accepted by this server"
                },
                {
                    "field": "site",
                    "type": "PVS_site ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "PVS site this server is part of"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                }
            ],
            "rpcs": [
                {
                    "name": "forget",
                    "status": "supported",
                    "desc": "forget a PVS server",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_server ref",
                            "name": "self",
                            "desc": "this PVS server"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_addresses",
                    "status": "supported",
                    "desc": "Get the addresses field of the given PVS_server.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_server ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the PVS_servers known to the system.",
                    "args": [],
                    "return": {
                        "type": "PVS_server ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of PVS_server references to PVS_server records for all PVS_servers known to the system.",
                    "args": [],
                    "return": {
                        "type": "(PVS_server ref -&gt; PVS_server record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the PVS_server instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "PVS_server ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_first_port",
                    "status": "supported",
                    "desc": "Get the first_port field of the given PVS_server.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_server ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_last_port",
                    "status": "supported",
                    "desc": "Get the last_port field of the given PVS_server.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_server ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given PVS_server.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_server ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PVS_server record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_site",
                    "status": "supported",
                    "desc": "Get the site field of the given PVS_server.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_server ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PVS_site ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given PVS_server.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_server ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "introduce",
                    "status": "supported",
                    "desc": "introduce new PVS server",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string set",
                            "name": "addresses",
                            "desc": "IPv4/IPv6 addresses of the server"
                        },
                        {
                            "type": "int",
                            "name": "first_port",
                            "desc": "first UDP port accepted by this server"
                        },
                        {
                            "type": "int",
                            "name": "last_port",
                            "desc": "last UDP port accepted by this server"
                        },
                        {
                            "type": "PVS_site ref",
                            "name": "site",
                            "desc": "PVS site this server is a part of"
                        }
                    ],
                    "return": {
                        "type": "PVS_server ref",
                        "desc": "the new PVS server",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                }
            ]
        },
        {
            "name": "pvs_site",
            "state": "supported",
            "desc": "machines serving blocks of data for provisioning VMs",
            "fields": [
                {
                    "field": "cache_storage",
                    "type": "PVS_cache_storage ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The SR used by PVS proxy for the cache"
                },
                {
                    "field": "name_description",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "a notes field containing human-readable description"
                },
                {
                    "field": "name_label",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "a human-readable name"
                },
                {
                    "field": "proxies",
                    "type": "PVS_proxy ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The set of proxies associated with the site"
                },
                {
                    "field": "PVS_uuid",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Unique identifier of the PVS site, as configured in PVS"
                },
                {
                    "field": "servers",
                    "type": "PVS_server ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The set of PVS servers in the site"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                }
            ],
            "rpcs": [
                {
                    "name": "forget",
                    "status": "supported",
                    "desc": "Remove a site’s meta data",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_site ref",
                            "name": "self",
                            "desc": "this PVS site"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "PVS_SITE_CONTAINS_RUNNING_PROXIES",
                            "PVS_SITE_CONTAINS_SERVERS"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the PVS_sites known to the system.",
                    "args": [],
                    "return": {
                        "type": "PVS_site ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of PVS_site references to PVS_site records for all PVS_sites known to the system.",
                    "args": [],
                    "return": {
                        "type": "(PVS_site ref -&gt; PVS_site record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_name_label",
                    "status": "supported",
                    "desc": "Get all the PVS_site instances with the given label.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "label",
                            "desc": "label of object to return"
                        }
                    ],
                    "return": {
                        "type": "PVS_site ref set",
                        "desc": "references to objects with matching names",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the PVS_site instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "PVS_site ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_cache_storage",
                    "status": "supported",
                    "desc": "Get the cache_storage field of the given PVS_site.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_site ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PVS_cache_storage ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_description",
                    "status": "supported",
                    "desc": "Get the name/description field of the given PVS_site.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_site ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_label",
                    "status": "supported",
                    "desc": "Get the name/label field of the given PVS_site.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_site ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_proxies",
                    "status": "supported",
                    "desc": "Get the proxies field of the given PVS_site.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_site ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PVS_proxy ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pvs_uuid",
                    "status": "supported",
                    "desc": "Get the PVS_uuid field of the given PVS_site.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_site ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given PVS_site.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_site ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PVS_site record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_servers",
                    "status": "supported",
                    "desc": "Get the servers field of the given PVS_site.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_site ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PVS_server ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given PVS_site.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_site ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "introduce",
                    "status": "supported",
                    "desc": "Introduce new PVS site",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "name_label",
                            "desc": "name of the PVS site"
                        },
                        {
                            "type": "string",
                            "name": "name_description",
                            "desc": "description of the PVS site"
                        },
                        {
                            "type": "string",
                            "name": "PVS_uuid",
                            "desc": "unique identifier of the PVS site"
                        }
                    ],
                    "return": {
                        "type": "PVS_site ref",
                        "desc": "the new PVS site",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_name_description",
                    "status": "supported",
                    "desc": "Set the name/description field of the given PVS_site.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_site ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_name_label",
                    "status": "supported",
                    "desc": "Set the name/label field of the given PVS_site.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_site ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_pvs_uuid",
                    "status": "supported",
                    "desc": "Update the PVS UUID of the PVS site",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PVS_site ref",
                            "name": "self",
                            "desc": "this PVS site"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "PVS UUID to be used"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                }
            ]
        },
        {
            "name": "repository",
            "state": "supported",
            "desc": "Repository for updates",
            "fields": [
                {
                    "field": "binary_url",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Base URL of binary packages in this repository"
                },
                {
                    "field": "gpgkey_path",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "The file name of the GPG public key of this repository"
                },
                {
                    "field": "hash",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "SHA256 checksum of latest updateinfo.xml.gz in this repository if its ‘update’ is true"
                },
                {
                    "field": "name_description",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "a notes field containing human-readable description"
                },
                {
                    "field": "name_label",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "a human-readable name"
                },
                {
                    "field": "source_url",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Base URL of source packages in this repository"
                },
                {
                    "field": "up_to_date",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Removed</strong>. True if all hosts in pool is up to date with this repository"
                },
                {
                    "field": "update",
                    "type": "bool",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "True if updateinfo.xml in this repository needs to be parsed"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                }
            ],
            "rpcs": [
                {
                    "name": "forget",
                    "status": "supported",
                    "desc": "Remove the repository record from the database",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Repository ref",
                            "name": "self",
                            "desc": "The repository to be removed from the database"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "client-cert"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the Repositorys known to the system.",
                    "args": [],
                    "return": {
                        "type": "Repository ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of Repository references to Repository records for all Repositorys known to the system.",
                    "args": [],
                    "return": {
                        "type": "(Repository ref -&gt; Repository record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_binary_url",
                    "status": "supported",
                    "desc": "Get the binary_url field of the given Repository.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Repository ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_name_label",
                    "status": "supported",
                    "desc": "Get all the Repository instances with the given label.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "label",
                            "desc": "label of object to return"
                        }
                    ],
                    "return": {
                        "type": "Repository ref set",
                        "desc": "references to objects with matching names",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the Repository instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "Repository ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_gpgkey_path",
                    "status": "supported",
                    "desc": "Get the gpgkey_path field of the given Repository.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Repository ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_hash",
                    "status": "supported",
                    "desc": "Get the hash field of the given Repository.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Repository ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_description",
                    "status": "supported",
                    "desc": "Get the name/description field of the given Repository.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Repository ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_label",
                    "status": "supported",
                    "desc": "Get the name/label field of the given Repository.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Repository ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given Repository.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Repository ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "Repository record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_source_url",
                    "status": "supported",
                    "desc": "Get the source_url field of the given Repository.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Repository ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_up_to_date",
                    "status": "removed",
                    "desc": "Get the up_to_date field of the given Repository.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Repository ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_update",
                    "status": "supported",
                    "desc": "Get the update field of the given Repository.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Repository ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given Repository.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Repository ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "introduce",
                    "status": "supported",
                    "desc": "Add the configuration for a new repository",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "name_label",
                            "desc": "The name of the repository"
                        },
                        {
                            "type": "string",
                            "name": "name_description",
                            "desc": "The description of the repository"
                        },
                        {
                            "type": "string",
                            "name": "binary_url",
                            "desc": "Base URL of binary packages in this repository"
                        },
                        {
                            "type": "string",
                            "name": "source_url",
                            "desc": "Base URL of source packages in this repository"
                        },
                        {
                            "type": "bool",
                            "name": "update",
                            "desc": "True if the repository is an update repository. This means that updateinfo.xml will be parsed"
                        },
                        {
                            "type": "string",
                            "name": "gpgkey_path",
                            "desc": "The GPG public key file name"
                        }
                    ],
                    "return": {
                        "type": "Repository ref",
                        "desc": "The ref of the created repository record.",
                        "errs": []
                    },
                    "minrole": "client-cert"
                },
                {
                    "name": "set_gpgkey_path",
                    "status": "supported",
                    "desc": "Set the file name of the GPG public key of the repository",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Repository ref",
                            "name": "self",
                            "desc": "The repository"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "The file name of the GPG public key of the repository"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "client-cert"
                },
                {
                    "name": "set_name_description",
                    "status": "supported",
                    "desc": "Set the name/description field of the given Repository.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Repository ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "client-cert"
                },
                {
                    "name": "set_name_label",
                    "status": "supported",
                    "desc": "Set the name/label field of the given Repository.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "Repository ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "client-cert"
                }
            ]
        },
        {
            "name": "role",
            "state": "supported",
            "desc": "A set of permissions associated with a subject",
            "fields": [
                {
                    "field": "is_internal",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Indicates whether the role is only to be assigned internally by xapi, or can be used by clients"
                },
                {
                    "field": "name_description",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "what this role is for"
                },
                {
                    "field": "name_label",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "a short user-friendly name for the role"
                },
                {
                    "field": "subroles",
                    "type": "role ref set",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "a list of pointers to other roles or permissions"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                }
            ],
            "rpcs": [
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the roles known to the system.",
                    "args": [],
                    "return": {
                        "type": "role ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of role references to role records for all roles known to the system.",
                    "args": [],
                    "return": {
                        "type": "(role ref -&gt; role record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_name_label",
                    "status": "supported",
                    "desc": "Get all the role instances with the given label.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "label",
                            "desc": "label of object to return"
                        }
                    ],
                    "return": {
                        "type": "role ref set",
                        "desc": "references to objects with matching names",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_permission",
                    "status": "supported",
                    "desc": "This call returns a list of roles given a permission",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "role ref",
                            "name": "permission",
                            "desc": "a reference to a permission"
                        }
                    ],
                    "return": {
                        "type": "role ref set",
                        "desc": "a list of references to roles",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_permission_name_label",
                    "status": "supported",
                    "desc": "This call returns a list of roles given a permission name",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "label",
                            "desc": "The short friendly name of the role"
                        }
                    ],
                    "return": {
                        "type": "role ref set",
                        "desc": "a list of references to roles",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the role instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "role ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_is_internal",
                    "status": "supported",
                    "desc": "Get the is_internal field of the given role.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "role ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_description",
                    "status": "supported",
                    "desc": "Get the name/description field of the given role.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "role ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_label",
                    "status": "supported",
                    "desc": "Get the name/label field of the given role.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "role ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_permissions",
                    "status": "supported",
                    "desc": "This call returns a list of permissions given a role",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "role ref",
                            "name": "self",
                            "desc": "a reference to a role"
                        }
                    ],
                    "return": {
                        "type": "role ref set",
                        "desc": "a list of permissions",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_permissions_name_label",
                    "status": "supported",
                    "desc": "This call returns a list of permission names given a role",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "role ref",
                            "name": "self",
                            "desc": "a reference to a role"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "a list of permission names",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given role.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "role ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "role record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_subroles",
                    "status": "supported",
                    "desc": "Get the subroles field of the given role.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "role ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "role ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given role.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "role ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                }
            ]
        },
        {
            "name": "sdn_controller",
            "state": "supported",
            "desc": "Describes the SDN controller that is to connect with the pool",
            "fields": [
                {
                    "field": "address",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "IP address of the controller"
                },
                {
                    "field": "port",
                    "type": "int",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "TCP port of the controller"
                },
                {
                    "field": "protocol",
                    "type": "sdn_controller_protocol",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Protocol to connect with SDN controller"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                }
            ],
            "rpcs": [
                {
                    "name": "forget",
                    "status": "supported",
                    "desc": "Remove the OVS manager of the pool and destroy the db record.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SDN_controller ref",
                            "name": "self",
                            "desc": "this SDN controller"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_address",
                    "status": "supported",
                    "desc": "Get the address field of the given SDN_controller.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SDN_controller ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the SDN_controllers known to the system.",
                    "args": [],
                    "return": {
                        "type": "SDN_controller ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of SDN_controller references to SDN_controller records for all SDN_controllers known to the system.",
                    "args": [],
                    "return": {
                        "type": "(SDN_controller ref -&gt; SDN_controller record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the SDN_controller instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "SDN_controller ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_port",
                    "status": "supported",
                    "desc": "Get the port field of the given SDN_controller.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SDN_controller ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_protocol",
                    "status": "supported",
                    "desc": "Get the protocol field of the given SDN_controller.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SDN_controller ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "sdn_controller_protocol",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given SDN_controller.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SDN_controller ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "SDN_controller record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given SDN_controller.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SDN_controller ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "introduce",
                    "status": "supported",
                    "desc": "Introduce an SDN controller to the pool.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "sdn_controller_protocol",
                            "name": "protocol",
                            "desc": "Protocol to connect with the controller."
                        },
                        {
                            "type": "string",
                            "name": "address",
                            "desc": "IP address of the controller."
                        },
                        {
                            "type": "int",
                            "name": "port",
                            "desc": "TCP port of the controller."
                        }
                    ],
                    "return": {
                        "type": "SDN_controller ref",
                        "desc": "the introduced SDN controller",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                }
            ]
        },
        {
            "name": "secret",
            "state": "supported",
            "desc": "A secret",
            "fields": [
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "other_config"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                },
                {
                    "field": "value",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "the secret"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_other_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the other_config field of the given secret.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "secret ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "create",
                    "status": "supported",
                    "desc": "Create a new secret instance, and return its handle.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "secret record",
                            "name": "args",
                            "desc": "All constructor arguments"
                        }
                    ],
                    "return": {
                        "type": "secret ref",
                        "desc": "reference to the newly created object",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "Destroy the specified secret instance.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "secret ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the secrets known to the system.",
                    "args": [],
                    "return": {
                        "type": "secret ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of secret references to secret records for all secrets known to the system.",
                    "args": [],
                    "return": {
                        "type": "(secret ref -&gt; secret record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the secret instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "secret ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given secret.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "secret ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given secret.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "secret ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "secret record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given secret.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "secret ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_value",
                    "status": "supported",
                    "desc": "Get the value field of the given secret.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "secret ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given secret. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "secret ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given secret.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "secret ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_value",
                    "status": "supported",
                    "desc": "Set the value field of the given secret.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "secret ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                }
            ]
        },
        {
            "name": "session",
            "state": "supported",
            "desc": "A session",
            "fields": [
                {
                    "field": "auth_user_name",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "the subject name of the user that was externally authenticated. If a session instance has is_local_superuser set, then the value of this field is undefined."
                },
                {
                    "field": "auth_user_sid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "the subject identifier of the user that was externally authenticated. If a session instance has is_local_superuser set, then the value of this field is undefined."
                },
                {
                    "field": "client_certificate",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "indicates whether this session was authenticated using a client certificate"
                },
                {
                    "field": "is_local_superuser",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "true iff this session was created using local superuser credentials"
                },
                {
                    "field": "last_active",
                    "type": "datetime",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Timestamp for last time session was active"
                },
                {
                    "field": "originator",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "a key string provided by a API user to distinguish itself from other users sharing the same login name"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "additional configuration"
                },
                {
                    "field": "parent",
                    "type": "session ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "references the parent session that created this session"
                },
                {
                    "field": "pool",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "True if this session relates to a intra-pool login, false otherwise"
                },
                {
                    "field": "rbac_permissions",
                    "type": "string set",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "list with all RBAC permissions for this session"
                },
                {
                    "field": "subject",
                    "type": "subject ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "references the subject instance that created the session. If a session instance has is_local_superuser set, then the value of this field is undefined."
                },
                {
                    "field": "tasks",
                    "type": "task ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "list of tasks created using the current session"
                },
                {
                    "field": "this_host",
                    "type": "host ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Currently connected host"
                },
                {
                    "field": "this_user",
                    "type": "user ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Currently connected user"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                },
                {
                    "field": "validation_time",
                    "type": "datetime",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "time when session was last validated"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_other_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the other_config field of the given session.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "session ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "change_password",
                    "status": "supported",
                    "desc": "Change the account password; if your session is authenticated with root priviledges then the old_pwd is validated and the new_pwd is set regardless",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "old_pwd",
                            "desc": "Old password for account"
                        },
                        {
                            "type": "string",
                            "name": "new_pwd",
                            "desc": "New password for account"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": ""
                },
                {
                    "name": "create_from_db_file",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "filename",
                            "desc": "Database dump filename."
                        }
                    ],
                    "return": {
                        "type": "session ref",
                        "desc": "ID of newly created session",
                        "errs": []
                    },
                    "minrole": ""
                },
                {
                    "name": "get_all_subject_identifiers",
                    "status": "supported",
                    "desc": "Return a list of all the user subject-identifiers of all existing sessions",
                    "args": [],
                    "return": {
                        "type": "string set",
                        "desc": "The list of user subject-identifiers of all existing sessions",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_auth_user_name",
                    "status": "supported",
                    "desc": "Get the auth_user_name field of the given session.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "session ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_auth_user_sid",
                    "status": "supported",
                    "desc": "Get the auth_user_sid field of the given session.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "session ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the session instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "session ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_client_certificate",
                    "status": "supported",
                    "desc": "Get the client_certificate field of the given session.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "session ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_is_local_superuser",
                    "status": "supported",
                    "desc": "Get the is_local_superuser field of the given session.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "session ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_last_active",
                    "status": "supported",
                    "desc": "Get the last_active field of the given session.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "session ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "datetime",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_originator",
                    "status": "supported",
                    "desc": "Get the originator field of the given session.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "session ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given session.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "session ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_parent",
                    "status": "supported",
                    "desc": "Get the parent field of the given session.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "session ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "session ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pool",
                    "status": "supported",
                    "desc": "Get the pool field of the given session.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "session ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_rbac_permissions",
                    "status": "supported",
                    "desc": "Get the rbac_permissions field of the given session.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "session ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given session.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "session ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "session record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_subject",
                    "status": "supported",
                    "desc": "Get the subject field of the given session.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "session ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "subject ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_tasks",
                    "status": "supported",
                    "desc": "Get the tasks field of the given session.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "session ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "task ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_this_host",
                    "status": "supported",
                    "desc": "Get the this_host field of the given session.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "session ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_this_user",
                    "status": "supported",
                    "desc": "Get the this_user field of the given session.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "session ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "user ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given session.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "session ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_validation_time",
                    "status": "supported",
                    "desc": "Get the validation_time field of the given session.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "session ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "datetime",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "local_logout",
                    "status": "supported",
                    "desc": "Log out of local session.",
                    "args": [],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "login_with_password",
                    "status": "supported",
                    "desc": "Attempt to authenticate the user, returning a session reference if successful",
                    "args": [
                        {
                            "type": "string",
                            "name": "uname",
                            "desc": "Username for login."
                        },
                        {
                            "type": "string",
                            "name": "pwd",
                            "desc": "Password for login."
                        },
                        {
                            "type": "string",
                            "name": "version",
                            "desc": "Client API version."
                        },
                        {
                            "type": "string",
                            "name": "originator",
                            "desc": "Key string for distinguishing different API users sharing the same login name."
                        }
                    ],
                    "return": {
                        "type": "session ref",
                        "desc": "reference of newly created session",
                        "errs": [
                            "SESSION_AUTHENTICATION_FAILED",
                            "HOST_IS_SLAVE"
                        ]
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "logout",
                    "status": "supported",
                    "desc": "Log out of a session",
                    "args": [],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "logout_subject_identifier",
                    "status": "supported",
                    "desc": "Log out all sessions associated to a user subject-identifier, except the session associated with the context calling this function",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "subject_identifier",
                            "desc": "User subject-identifier of the sessions to be destroyed"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given session. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "session ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given session.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "session ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "slave_local_login_with_password",
                    "status": "supported",
                    "desc": "Authenticate locally against a slave in emergency mode. Note the resulting sessions are only good for use on this host.",
                    "args": [
                        {
                            "type": "string",
                            "name": "uname",
                            "desc": "Username for login."
                        },
                        {
                            "type": "string",
                            "name": "pwd",
                            "desc": "Password for login."
                        }
                    ],
                    "return": {
                        "type": "session ref",
                        "desc": "ID of newly created session",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                }
            ]
        },
        {
            "name": "sm",
            "state": "supported",
            "desc": "A storage manager plugin",
            "fields": [
                {
                    "field": "capabilities",
                    "type": "string set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Deprecated</strong>. capabilities of the SM plugin"
                },
                {
                    "field": "configuration",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "names and descriptions of device config keys"
                },
                {
                    "field": "copyright",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Entity which owns the copyright of this plugin"
                },
                {
                    "field": "driver_filename",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "filename of the storage driver"
                },
                {
                    "field": "features",
                    "type": "(string -&gt; int) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "capabilities of the SM plugin, with capability version numbers"
                },
                {
                    "field": "name_description",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "a notes field containing human-readable description"
                },
                {
                    "field": "name_label",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "a human-readable name"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "additional configuration"
                },
                {
                    "field": "required_api_version",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Minimum SM API version required on the server"
                },
                {
                    "field": "required_cluster_stack",
                    "type": "string set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The storage plugin requires that one of these cluster stacks is configured and running."
                },
                {
                    "field": "type",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "SR.type"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                },
                {
                    "field": "vendor",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Vendor who created this plugin"
                },
                {
                    "field": "version",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Version of the plugin"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_other_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the other_config field of the given SM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the SMs known to the system.",
                    "args": [],
                    "return": {
                        "type": "SM ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of SM references to SM records for all SMs known to the system.",
                    "args": [],
                    "return": {
                        "type": "(SM ref -&gt; SM record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_name_label",
                    "status": "supported",
                    "desc": "Get all the SM instances with the given label.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "label",
                            "desc": "label of object to return"
                        }
                    ],
                    "return": {
                        "type": "SM ref set",
                        "desc": "references to objects with matching names",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the SM instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "SM ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_capabilities",
                    "status": "deprecated",
                    "desc": "Get the capabilities field of the given SM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_configuration",
                    "status": "supported",
                    "desc": "Get the configuration field of the given SM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_copyright",
                    "status": "supported",
                    "desc": "Get the copyright field of the given SM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_driver_filename",
                    "status": "supported",
                    "desc": "Get the driver_filename field of the given SM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_features",
                    "status": "supported",
                    "desc": "Get the features field of the given SM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; int) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_description",
                    "status": "supported",
                    "desc": "Get the name/description field of the given SM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_label",
                    "status": "supported",
                    "desc": "Get the name/label field of the given SM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given SM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given SM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "SM record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_required_api_version",
                    "status": "supported",
                    "desc": "Get the required_api_version field of the given SM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_required_cluster_stack",
                    "status": "supported",
                    "desc": "Get the required_cluster_stack field of the given SM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_type",
                    "status": "supported",
                    "desc": "Get the type field of the given SM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given SM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vendor",
                    "status": "supported",
                    "desc": "Get the vendor field of the given SM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_version",
                    "status": "supported",
                    "desc": "Get the version field of the given SM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given SM. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given SM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                }
            ]
        },
        {
            "name": "sr",
            "state": "supported",
            "desc": "A storage repository",
            "fields": [
                {
                    "field": "allowed_operations",
                    "type": "storage_operations set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client."
                },
                {
                    "field": "blobs",
                    "type": "(string -&gt; blob ref) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Binary blobs associated with this SR"
                },
                {
                    "field": "clustered",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "True if the SR is using aggregated local storage"
                },
                {
                    "field": "content_type",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "the type of the SR’s content, if required (e.g. ISOs)"
                },
                {
                    "field": "current_operations",
                    "type": "(string -&gt; storage_operations) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task."
                },
                {
                    "field": "introduced_by",
                    "type": "DR_task ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The disaster recovery task which introduced this SR"
                },
                {
                    "field": "is_tools_sr",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "True if this is the SR that contains the Tools ISO VDIs"
                },
                {
                    "field": "local_cache_enabled",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "True if this SR is assigned to be the local cache for its host"
                },
                {
                    "field": "name_description",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "a notes field containing human-readable description"
                },
                {
                    "field": "name_label",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "a human-readable name"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "additional configuration"
                },
                {
                    "field": "PBDs",
                    "type": "PBD ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "describes how particular hosts can see this storage repository"
                },
                {
                    "field": "physical_size",
                    "type": "int",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "total physical size of the repository (in bytes)"
                },
                {
                    "field": "physical_utilisation",
                    "type": "int",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "physical space currently utilised on this storage repository (in bytes). Note that for sparse disk formats, physical_utilisation may be less than virtual_allocation"
                },
                {
                    "field": "shared",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "true if this SR is (capable of being) shared between multiple hosts"
                },
                {
                    "field": "sm_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "SM dependent data"
                },
                {
                    "field": "tags",
                    "type": "string set",
                    "qualifier": "<em>RW</em>",
                    "desc": "user-specified tags for categorization purposes"
                },
                {
                    "field": "type",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "type of the storage repository"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                },
                {
                    "field": "VDIs",
                    "type": "VDI ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "all virtual disks known to this storage repository"
                },
                {
                    "field": "virtual_allocation",
                    "type": "int",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "sum of virtual_sizes of all VDIs in this storage repository (in bytes)"
                }
            ],
            "rpcs": [
                {
                    "name": "add_tags",
                    "status": "supported",
                    "desc": "Add the given value to the tags field of the given SR. If the value is already in that Set, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "add_to_other_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the other_config field of the given SR.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "add_to_sm_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the sm_config field of the given SR.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "assert_can_host_ha_statefile",
                    "status": "supported",
                    "desc": "Returns successfully if the given SR can host an HA statefile. Otherwise returns an error to explain why not",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "sr",
                            "desc": "The SR to query"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "assert_supports_database_replication",
                    "status": "supported",
                    "desc": "Returns successfully if the given SR supports database replication. Otherwise returns an error to explain why not.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "sr",
                            "desc": "The SR to query"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "create",
                    "status": "supported",
                    "desc": "Create a new Storage Repository and introduce it into the managed system, creating both SR record and PBD record to attach it to current host (with specified device_config parameters)",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host to create/make the SR on"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "device_config",
                            "desc": "The device config string that will be passed to backend SR driver"
                        },
                        {
                            "type": "int",
                            "name": "physical_size",
                            "desc": "The physical size of the new storage repository"
                        },
                        {
                            "type": "string",
                            "name": "name_label",
                            "desc": "The name of the new storage repository"
                        },
                        {
                            "type": "string",
                            "name": "name_description",
                            "desc": "The description of the new storage repository"
                        },
                        {
                            "type": "string",
                            "name": "type",
                            "desc": "The type of the SR; used to specify the SR backend driver to use"
                        },
                        {
                            "type": "string",
                            "name": "content_type",
                            "desc": "The type of the new SRs content, if required (e.g. ISOs)"
                        },
                        {
                            "type": "bool",
                            "name": "shared",
                            "desc": "True if the SR (is capable of) being shared by multiple hosts"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "sm_config",
                            "desc": "Storage backend specific configuration options"
                        }
                    ],
                    "return": {
                        "type": "SR ref",
                        "desc": "The reference of the newly created Storage Repository.",
                        "errs": [
                            "SR_UNKNOWN_DRIVER"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "create_new_blob",
                    "status": "supported",
                    "desc": "Create a placeholder for a named binary blob of data that is associated with this SR",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "sr",
                            "desc": "The SR"
                        },
                        {
                            "type": "string",
                            "name": "name",
                            "desc": "The name associated with the blob"
                        },
                        {
                            "type": "string",
                            "name": "mime_type",
                            "desc": "The mime type for the data. Empty string translates to application/octet-stream"
                        },
                        {
                            "type": "bool",
                            "name": "public",
                            "desc": "True if the blob should be publicly available"
                        }
                    ],
                    "return": {
                        "type": "blob ref",
                        "desc": "The reference of the blob, needed for populating its data",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "Destroy specified SR, removing SR-record from database and remove SR from disk. (In order to affect this operation the appropriate device_config is read from the specified SR’s PBD on current host)",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "sr",
                            "desc": "The SR to destroy"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "SR_HAS_PBD"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "disable_database_replication",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "sr",
                            "desc": "The SR to which metadata should be no longer replicated"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "enable_database_replication",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "sr",
                            "desc": "The SR to which metadata should be replicated"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "forget",
                    "status": "supported",
                    "desc": "Removing specified SR-record from database, without attempting to remove SR from disk",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "sr",
                            "desc": "The SR to destroy"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "SR_HAS_PBD"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "forget_data_source_archives",
                    "status": "supported",
                    "desc": "Forget the recorded statistics related to the specified data source",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "sr",
                            "desc": "The SR"
                        },
                        {
                            "type": "string",
                            "name": "data_source",
                            "desc": "The data source whose archives are to be forgotten"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the SRs known to the system.",
                    "args": [],
                    "return": {
                        "type": "SR ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of SR references to SR records for all SRs known to the system.",
                    "args": [],
                    "return": {
                        "type": "(SR ref -&gt; SR record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_allowed_operations",
                    "status": "supported",
                    "desc": "Get the allowed_operations field of the given SR.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "storage_operations set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_blobs",
                    "status": "supported",
                    "desc": "Get the blobs field of the given SR.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; blob ref) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_name_label",
                    "status": "supported",
                    "desc": "Get all the SR instances with the given label.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "label",
                            "desc": "label of object to return"
                        }
                    ],
                    "return": {
                        "type": "SR ref set",
                        "desc": "references to objects with matching names",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the SR instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "SR ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_clustered",
                    "status": "supported",
                    "desc": "Get the clustered field of the given SR.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_content_type",
                    "status": "supported",
                    "desc": "Get the content_type field of the given SR.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_current_operations",
                    "status": "supported",
                    "desc": "Get the current_operations field of the given SR.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; storage_operations) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_data_sources",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "sr",
                            "desc": "The SR to interrogate"
                        }
                    ],
                    "return": {
                        "type": "data_source record set",
                        "desc": "A set of data sources",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_introduced_by",
                    "status": "supported",
                    "desc": "Get the introduced_by field of the given SR.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "DR_task ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_is_tools_sr",
                    "status": "supported",
                    "desc": "Get the is_tools_sr field of the given SR.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_local_cache_enabled",
                    "status": "supported",
                    "desc": "Get the local_cache_enabled field of the given SR.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_description",
                    "status": "supported",
                    "desc": "Get the name/description field of the given SR.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_label",
                    "status": "supported",
                    "desc": "Get the name/label field of the given SR.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given SR.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pbds",
                    "status": "supported",
                    "desc": "Get the PBDs field of the given SR.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PBD ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_physical_size",
                    "status": "supported",
                    "desc": "Get the physical_size field of the given SR.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_physical_utilisation",
                    "status": "supported",
                    "desc": "Get the physical_utilisation field of the given SR.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given SR.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "SR record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_shared",
                    "status": "supported",
                    "desc": "Get the shared field of the given SR.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_sm_config",
                    "status": "supported",
                    "desc": "Get the sm_config field of the given SR.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_supported_types",
                    "status": "supported",
                    "desc": "Return a set of all the SR types supported by the system",
                    "args": [],
                    "return": {
                        "type": "string set",
                        "desc": "the supported SR types",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_tags",
                    "status": "supported",
                    "desc": "Get the tags field of the given SR.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_type",
                    "status": "supported",
                    "desc": "Get the type field of the given SR.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given SR.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vdis",
                    "status": "supported",
                    "desc": "Get the VDIs field of the given SR.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VDI ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_virtual_allocation",
                    "status": "supported",
                    "desc": "Get the virtual_allocation field of the given SR.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "introduce",
                    "status": "supported",
                    "desc": "Introduce a new Storage Repository into the managed system",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "The uuid assigned to the introduced SR"
                        },
                        {
                            "type": "string",
                            "name": "name_label",
                            "desc": "The name of the new storage repository"
                        },
                        {
                            "type": "string",
                            "name": "name_description",
                            "desc": "The description of the new storage repository"
                        },
                        {
                            "type": "string",
                            "name": "type",
                            "desc": "The type of the SR; used to specify the SR backend driver to use"
                        },
                        {
                            "type": "string",
                            "name": "content_type",
                            "desc": "The type of the new SRs content, if required (e.g. ISOs)"
                        },
                        {
                            "type": "bool",
                            "name": "shared",
                            "desc": "True if the SR (is capable of) being shared by multiple hosts"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "sm_config",
                            "desc": "Storage backend specific configuration options"
                        }
                    ],
                    "return": {
                        "type": "SR ref",
                        "desc": "The reference of the newly introduced Storage Repository.",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "make",
                    "status": "deprecated",
                    "desc": "Create a new Storage Repository on disk. This call is deprecated: use SR.create instead.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host to create/make the SR on"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "device_config",
                            "desc": "The device config string that will be passed to backend SR driver"
                        },
                        {
                            "type": "int",
                            "name": "physical_size",
                            "desc": "The physical size of the new storage repository"
                        },
                        {
                            "type": "string",
                            "name": "name_label",
                            "desc": "The name of the new storage repository"
                        },
                        {
                            "type": "string",
                            "name": "name_description",
                            "desc": "The description of the new storage repository"
                        },
                        {
                            "type": "string",
                            "name": "type",
                            "desc": "The type of the SR; used to specify the SR backend driver to use"
                        },
                        {
                            "type": "string",
                            "name": "content_type",
                            "desc": "The type of the new SRs content, if required (e.g. ISOs)"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "sm_config",
                            "desc": "Storage backend specific configuration options"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "The uuid of the newly created Storage Repository.",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "probe",
                    "status": "supported",
                    "desc": "Perform a backend-specific scan, using the given device_config. If the device_config is complete, then this will return a list of the SRs present of this type on the device, if any. If the device_config is partial, then a backend-specific scan will be performed, returning results that will guide the user in improving the device_config.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host to create/make the SR on"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "device_config",
                            "desc": "The device config string that will be passed to backend SR driver"
                        },
                        {
                            "type": "string",
                            "name": "type",
                            "desc": "The type of the SR; used to specify the SR backend driver to use"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "sm_config",
                            "desc": "Storage backend specific configuration options"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "An XML fragment containing the scan results. These are specific to the scan being performed, and the backend.",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "probe_ext",
                    "status": "supported",
                    "desc": "Perform a backend-specific scan, using the given device_config. If the device_config is complete, then this will return a list of the SRs present of this type on the device, if any. If the device_config is partial, then a backend-specific scan will be performed, returning results that will guide the user in improving the device_config.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host to create/make the SR on"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "device_config",
                            "desc": "The device config string that will be passed to backend SR driver"
                        },
                        {
                            "type": "string",
                            "name": "type",
                            "desc": "The type of the SR; used to specify the SR backend driver to use"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "sm_config",
                            "desc": "Storage backend specific configuration options"
                        }
                    ],
                    "return": {
                        "type": "probe_result record set",
                        "desc": "A set of records containing the scan results.",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "query_data_source",
                    "status": "supported",
                    "desc": "Query the latest value of the specified data source",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "sr",
                            "desc": "The SR"
                        },
                        {
                            "type": "string",
                            "name": "data_source",
                            "desc": "The data source to query"
                        }
                    ],
                    "return": {
                        "type": "float",
                        "desc": "The latest value, averaged over the last 5 seconds",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "record_data_source",
                    "status": "supported",
                    "desc": "Start recording the specified data source",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "sr",
                            "desc": "The SR"
                        },
                        {
                            "type": "string",
                            "name": "data_source",
                            "desc": "The data source to record"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given SR. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "remove_from_sm_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the sm_config field of the given SR. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "remove_tags",
                    "status": "supported",
                    "desc": "Remove the given value from the tags field of the given SR. If the value is not in that Set, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "scan",
                    "status": "supported",
                    "desc": "Refreshes the list of VDIs associated with an SR",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "sr",
                            "desc": "The SR to scan"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-power-admin"
                },
                {
                    "name": "set_name_description",
                    "status": "supported",
                    "desc": "Set the name description of the SR",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "sr",
                            "desc": "The SR"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "The name description for the SR"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_name_label",
                    "status": "supported",
                    "desc": "Set the name label of the SR",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "sr",
                            "desc": "The SR"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "The name label for the SR"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given SR.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_physical_size",
                    "status": "supported",
                    "desc": "Sets the SR’s physical_size field",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "The SR to modify"
                        },
                        {
                            "type": "int",
                            "name": "value",
                            "desc": "The new value of the SR’s physical_size"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_shared",
                    "status": "supported",
                    "desc": "Sets the shared flag on the SR",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "sr",
                            "desc": "The SR"
                        },
                        {
                            "type": "bool",
                            "name": "value",
                            "desc": "True if the SR is shared"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_sm_config",
                    "status": "supported",
                    "desc": "Set the sm_config field of the given SR.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_tags",
                    "status": "supported",
                    "desc": "Set the tags field of the given SR.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string set",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "update",
                    "status": "supported",
                    "desc": "Refresh the fields on the SR object",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "SR ref",
                            "name": "sr",
                            "desc": "The SR whose fields should be refreshed"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                }
            ]
        },
        {
            "name": "sr_stat",
            "state": "supported",
            "desc": "A set of high-level properties associated with an SR.",
            "fields": [
                {
                    "field": "clustered",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Indicates whether the SR uses clustered local storage."
                },
                {
                    "field": "free_space",
                    "type": "int",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Number of bytes free on the backing storage (in bytes)"
                },
                {
                    "field": "health",
                    "type": "sr_health",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The health status of the SR."
                },
                {
                    "field": "name_description",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Longer, human-readable description of the SR. Descriptions are generally only displayed by clients when the user is examining SRs in detail."
                },
                {
                    "field": "name_label",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Short, human-readable label for the SR."
                },
                {
                    "field": "total_space",
                    "type": "int",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Total physical size of the backing storage (in bytes)"
                },
                {
                    "field": "uuid",
                    "type": "string option",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Uuid that uniquely identifies this SR, if one is available."
                }
            ],
            "rpcs": []
        },
        {
            "name": "subject",
            "deprecated": false,
            "desc": "A user or group that can log in xapi",
            "fields": [
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "additional configuration"
                },
                {
                    "field": "roles",
                    "type": "role ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "the roles associated with this subject"
                },
                {
                    "field": "subject_identifier",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "the subject identifier, unique in the external directory service"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_roles",
                    "status": "supported",
                    "desc": "This call adds a new role to a subject",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "subject ref",
                            "name": "self",
                            "desc": "The subject who we want to add the role to"
                        },
                        {
                            "type": "role ref",
                            "name": "role",
                            "desc": "The unique role reference"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "create",
                    "status": "supported",
                    "desc": "Create a new subject instance, and return its handle.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "subject record",
                            "name": "args",
                            "desc": "All constructor arguments"
                        }
                    ],
                    "return": {
                        "type": "subject ref",
                        "desc": "reference to the newly created object",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "Destroy the specified subject instance.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "subject ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the subjects known to the system.",
                    "args": [],
                    "return": {
                        "type": "subject ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of subject references to subject records for all subjects known to the system.",
                    "args": [],
                    "return": {
                        "type": "(subject ref -&gt; subject record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the subject instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "subject ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given subject.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "subject ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_permissions_name_label",
                    "status": "supported",
                    "desc": "This call returns a list of permission names given a subject",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "subject ref",
                            "name": "self",
                            "desc": "The subject whose permissions will be retrieved"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "a list of permission names",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given subject.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "subject ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "subject record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_roles",
                    "status": "supported",
                    "desc": "Get the roles field of the given subject.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "subject ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "role ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_subject_identifier",
                    "status": "supported",
                    "desc": "Get the subject_identifier field of the given subject.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "subject ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given subject.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "subject ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "remove_from_roles",
                    "status": "supported",
                    "desc": "This call removes a role from a subject",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "subject ref",
                            "name": "self",
                            "desc": "The subject from whom we want to remove the role"
                        },
                        {
                            "type": "role ref",
                            "name": "role",
                            "desc": "The unique role reference in the subject’s roles field"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                }
            ]
        },
        {
            "name": "task",
            "state": "supported",
            "desc": "A long-running asynchronous task",
            "fields": [
                {
                    "field": "allowed_operations",
                    "type": "task_allowed_operations set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client."
                },
                {
                    "field": "backtrace",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Function call trace for debugging."
                },
                {
                    "field": "created",
                    "type": "datetime",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Time task was created"
                },
                {
                    "field": "current_operations",
                    "type": "(string -&gt; task_allowed_operations) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task."
                },
                {
                    "field": "error_info",
                    "type": "string set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "if the task has failed, this field contains the set of associated error strings. Undefined otherwise."
                },
                {
                    "field": "finished",
                    "type": "datetime",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Time task finished (i.e. succeeded or failed). If task-status is pending, then the value of this field has no meaning"
                },
                {
                    "field": "name_description",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "a notes field containing human-readable description"
                },
                {
                    "field": "name_label",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "a human-readable name"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "additional configuration"
                },
                {
                    "field": "progress",
                    "type": "float",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "This field contains the estimated fraction of the task which is complete. This field should not be used to determine whether the task is complete - for this the status field of the task should be used."
                },
                {
                    "field": "resident_on",
                    "type": "host ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "the host on which the task is running"
                },
                {
                    "field": "result",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "if the task has completed successfully, this field contains the result value (either Void or an object reference). Undefined otherwise."
                },
                {
                    "field": "status",
                    "type": "task_status_type",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "current status of the task"
                },
                {
                    "field": "subtask_of",
                    "type": "task ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Ref pointing to the task this is a substask of."
                },
                {
                    "field": "subtasks",
                    "type": "task ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "List pointing to all the substasks."
                },
                {
                    "field": "type",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "if the task has completed successfully, this field contains the type of the encoded result (i.e. name of the class whose reference is in the result field). Undefined otherwise."
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_other_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the other_config field of the given task.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "task ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "cancel",
                    "status": "supported",
                    "desc": "Request that a task be cancelled. Note that a task may fail to be cancelled and may complete or fail normally and note that, even when a task does cancel, it might take an arbitrary amount of time.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "task ref",
                            "name": "task",
                            "desc": "The task"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "OPERATION_NOT_ALLOWED"
                        ]
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "create",
                    "status": "supported",
                    "desc": "Create a new task object which must be manually destroyed.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "label",
                            "desc": "short label for the new task"
                        },
                        {
                            "type": "string",
                            "name": "description",
                            "desc": "longer description for the new task"
                        }
                    ],
                    "return": {
                        "type": "task ref",
                        "desc": "The reference of the created task object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "Destroy the task object",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "task ref",
                            "name": "self",
                            "desc": "Reference to the task object"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the tasks known to the system.",
                    "args": [],
                    "return": {
                        "type": "task ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of task references to task records for all tasks known to the system.",
                    "args": [],
                    "return": {
                        "type": "(task ref -&gt; task record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_allowed_operations",
                    "status": "supported",
                    "desc": "Get the allowed_operations field of the given task.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "task ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "task_allowed_operations set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_backtrace",
                    "status": "supported",
                    "desc": "Get the backtrace field of the given task.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "task ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_name_label",
                    "status": "supported",
                    "desc": "Get all the task instances with the given label.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "label",
                            "desc": "label of object to return"
                        }
                    ],
                    "return": {
                        "type": "task ref set",
                        "desc": "references to objects with matching names",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the task instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "task ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_created",
                    "status": "supported",
                    "desc": "Get the created field of the given task.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "task ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "datetime",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_current_operations",
                    "status": "supported",
                    "desc": "Get the current_operations field of the given task.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "task ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; task_allowed_operations) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_error_info",
                    "status": "supported",
                    "desc": "Get the error_info field of the given task.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "task ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_finished",
                    "status": "supported",
                    "desc": "Get the finished field of the given task.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "task ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "datetime",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_description",
                    "status": "supported",
                    "desc": "Get the name/description field of the given task.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "task ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_label",
                    "status": "supported",
                    "desc": "Get the name/label field of the given task.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "task ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given task.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "task ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_progress",
                    "status": "supported",
                    "desc": "Get the progress field of the given task.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "task ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "float",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given task.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "task ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "task record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_resident_on",
                    "status": "supported",
                    "desc": "Get the resident_on field of the given task.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "task ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_result",
                    "status": "supported",
                    "desc": "Get the result field of the given task.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "task ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_status",
                    "status": "supported",
                    "desc": "Get the status field of the given task.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "task ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "task_status_type",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_subtask_of",
                    "status": "supported",
                    "desc": "Get the subtask_of field of the given task.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "task ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "task ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_subtasks",
                    "status": "supported",
                    "desc": "Get the subtasks field of the given task.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "task ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "task ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_type",
                    "status": "supported",
                    "desc": "Get the type field of the given task.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "task ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given task.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "task ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given task. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "task ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_error_info",
                    "status": "supported",
                    "desc": "Set the task error info",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "task ref",
                            "name": "self",
                            "desc": "Reference to the task object"
                        },
                        {
                            "type": "string set",
                            "name": "value",
                            "desc": "Task error info to be set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given task.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "task ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_progress",
                    "status": "supported",
                    "desc": "Set the task progress",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "task ref",
                            "name": "self",
                            "desc": "Reference to the task object"
                        },
                        {
                            "type": "float",
                            "name": "value",
                            "desc": "Task progress value to be set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "set_result",
                    "status": "supported",
                    "desc": "Set the task result",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "task ref",
                            "name": "self",
                            "desc": "Reference to the task object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Task result to be set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "set_status",
                    "status": "supported",
                    "desc": "Set the task status",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "task ref",
                            "name": "self",
                            "desc": "Reference to the task object"
                        },
                        {
                            "type": "task_status_type",
                            "name": "value",
                            "desc": "task status value to be set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "read-only"
                }
            ]
        },
        {
            "name": "tunnel",
            "state": "supported",
            "desc": "A tunnel for network traffic",
            "fields": [
                {
                    "field": "access_PIF",
                    "type": "PIF ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "The interface through which the tunnel is accessed"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "Additional configuration"
                },
                {
                    "field": "protocol",
                    "type": "tunnel_protocol",
                    "qualifier": "<em>RW</em>",
                    "desc": "The protocol used for tunneling (either GRE or VxLAN)"
                },
                {
                    "field": "status",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "Status information about the tunnel"
                },
                {
                    "field": "transport_PIF",
                    "type": "PIF ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "The interface used by the tunnel"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_other_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the other_config field of the given tunnel.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "tunnel ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "add_to_status",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the status field of the given tunnel.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "tunnel ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "create",
                    "status": "supported",
                    "desc": "Create a tunnel",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "transport_PIF",
                            "desc": "PIF which receives the tagged traffic"
                        },
                        {
                            "type": "network ref",
                            "name": "network",
                            "desc": "Network to receive the tunnelled traffic"
                        },
                        {
                            "type": "tunnel_protocol",
                            "name": "protocol",
                            "desc": "Protocol used for the tunnel (GRE or VxLAN)"
                        }
                    ],
                    "return": {
                        "type": "tunnel ref",
                        "desc": "The reference of the created tunnel object",
                        "errs": [
                            "OPENVSWITCH_NOT_ACTIVE",
                            "TRANSPORT_PIF_NOT_CONFIGURED",
                            "IS_TUNNEL_ACCESS_PIF"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "Destroy a tunnel",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "tunnel ref",
                            "name": "self",
                            "desc": "tunnel to destroy"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_access_pif",
                    "status": "supported",
                    "desc": "Get the access_PIF field of the given tunnel.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "tunnel ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PIF ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the tunnels known to the system.",
                    "args": [],
                    "return": {
                        "type": "tunnel ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of tunnel references to tunnel records for all tunnels known to the system.",
                    "args": [],
                    "return": {
                        "type": "(tunnel ref -&gt; tunnel record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the tunnel instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "tunnel ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given tunnel.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "tunnel ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_protocol",
                    "status": "supported",
                    "desc": "Get the protocol field of the given tunnel.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "tunnel ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "tunnel_protocol",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given tunnel.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "tunnel ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "tunnel record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_status",
                    "status": "supported",
                    "desc": "Get the status field of the given tunnel.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "tunnel ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_transport_pif",
                    "status": "supported",
                    "desc": "Get the transport_PIF field of the given tunnel.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "tunnel ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PIF ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given tunnel.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "tunnel ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given tunnel. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "tunnel ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "remove_from_status",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the status field of the given tunnel. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "tunnel ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given tunnel.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "tunnel ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_protocol",
                    "status": "supported",
                    "desc": "Set the protocol field of the given tunnel.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "tunnel ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "tunnel_protocol",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_status",
                    "status": "supported",
                    "desc": "Set the status field of the given tunnel.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "tunnel ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                }
            ]
        },
        {
            "name": "usb_group",
            "state": "supported",
            "desc": "A group of compatible USBs across the resource pool",
            "fields": [
                {
                    "field": "name_description",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "a notes field containing human-readable description"
                },
                {
                    "field": "name_label",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "a human-readable name"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "Additional configuration"
                },
                {
                    "field": "PUSBs",
                    "type": "PUSB ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "List of PUSBs in the group"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                },
                {
                    "field": "VUSBs",
                    "type": "VUSB ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "List of VUSBs using the group"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_other_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the other_config field of the given USB_group.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "USB_group ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "create",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "name_label",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "string",
                            "name": "name_description",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "other_config",
                            "desc": "&nbsp;"
                        }
                    ],
                    "return": {
                        "type": "USB_group ref",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "USB_group ref",
                            "name": "self",
                            "desc": "The USB group to destroy"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the USB_groups known to the system.",
                    "args": [],
                    "return": {
                        "type": "USB_group ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of USB_group references to USB_group records for all USB_groups known to the system.",
                    "args": [],
                    "return": {
                        "type": "(USB_group ref -&gt; USB_group record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_name_label",
                    "status": "supported",
                    "desc": "Get all the USB_group instances with the given label.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "label",
                            "desc": "label of object to return"
                        }
                    ],
                    "return": {
                        "type": "USB_group ref set",
                        "desc": "references to objects with matching names",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the USB_group instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "USB_group ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_description",
                    "status": "supported",
                    "desc": "Get the name/description field of the given USB_group.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "USB_group ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_label",
                    "status": "supported",
                    "desc": "Get the name/label field of the given USB_group.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "USB_group ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given USB_group.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "USB_group ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pusbs",
                    "status": "supported",
                    "desc": "Get the PUSBs field of the given USB_group.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "USB_group ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PUSB ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given USB_group.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "USB_group ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "USB_group record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given USB_group.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "USB_group ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vusbs",
                    "status": "supported",
                    "desc": "Get the VUSBs field of the given USB_group.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "USB_group ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VUSB ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given USB_group. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "USB_group ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "set_name_description",
                    "status": "supported",
                    "desc": "Set the name/description field of the given USB_group.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "USB_group ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "set_name_label",
                    "status": "supported",
                    "desc": "Set the name/label field of the given USB_group.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "USB_group ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given USB_group.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "USB_group ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                }
            ]
        },
        {
            "name": "user",
            "state": "supported",
            "desc": "A user of the system",
            "fields": [
                {
                    "field": "fullname",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "<strong>Deprecated</strong>. full name"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "<strong>Deprecated</strong>. additional configuration"
                },
                {
                    "field": "short_name",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "<strong>Deprecated</strong>. short name (e.g. userid)"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Deprecated</strong>. Unique identifier/object reference"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_other_config",
                    "status": "deprecated",
                    "desc": "Add the given key-value pair to the other_config field of the given user.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "user ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "create",
                    "status": "deprecated",
                    "desc": "Create a new user instance, and return its handle.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "user record",
                            "name": "args",
                            "desc": "All constructor arguments"
                        }
                    ],
                    "return": {
                        "type": "user ref",
                        "desc": "reference to the newly created object",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "destroy",
                    "status": "deprecated",
                    "desc": "Destroy the specified user instance.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "user ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "get_by_uuid",
                    "status": "deprecated",
                    "desc": "Get a reference to the user instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "user ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_fullname",
                    "status": "deprecated",
                    "desc": "Get the fullname field of the given user.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "user ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "deprecated",
                    "desc": "Get the other_config field of the given user.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "user ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "deprecated",
                    "desc": "Get a record containing the current state of the given user.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "user ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "user record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_short_name",
                    "status": "deprecated",
                    "desc": "Get the short_name field of the given user.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "user ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "deprecated",
                    "desc": "Get the uuid field of the given user.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "user ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "deprecated",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given user. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "user ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "set_fullname",
                    "status": "deprecated",
                    "desc": "Set the fullname field of the given user.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "user ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "set_other_config",
                    "status": "deprecated",
                    "desc": "Set the other_config field of the given user.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "user ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                }
            ],
            "supported": "deprecated"
        },
        {
            "name": "vbd",
            "state": "supported",
            "desc": "A virtual block device",
            "fields": [
                {
                    "field": "allowed_operations",
                    "type": "vbd_operations set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client."
                },
                {
                    "field": "bootable",
                    "type": "bool",
                    "qualifier": "<em>RW</em>",
                    "desc": "true if this VBD is bootable"
                },
                {
                    "field": "current_operations",
                    "type": "(string -&gt; vbd_operations) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task."
                },
                {
                    "field": "currently_attached",
                    "type": "bool",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "is the device currently attached (erased on reboot)"
                },
                {
                    "field": "device",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "device seen by the guest e.g. hda1"
                },
                {
                    "field": "empty",
                    "type": "bool",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "if true this represents an empty drive"
                },
                {
                    "field": "metrics",
                    "type": "VBD_metrics ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Removed</strong>. metrics associated with this VBD"
                },
                {
                    "field": "mode",
                    "type": "vbd_mode",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "the mode the VBD should be mounted with"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "additional configuration"
                },
                {
                    "field": "qos_algorithm_params",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "parameters for chosen QoS algorithm"
                },
                {
                    "field": "qos_algorithm_type",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "QoS algorithm to use"
                },
                {
                    "field": "qos_supported_algorithms",
                    "type": "string set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "supported QoS algorithms for this VBD"
                },
                {
                    "field": "runtime_properties",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Device runtime properties"
                },
                {
                    "field": "status_code",
                    "type": "int",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "error/success code associated with last attach-operation (erased on reboot)"
                },
                {
                    "field": "status_detail",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "error/success information associated with last attach-operation status (erased on reboot)"
                },
                {
                    "field": "storage_lock",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "true if a storage level lock was acquired"
                },
                {
                    "field": "type",
                    "type": "vbd_type",
                    "qualifier": "<em>RW</em>",
                    "desc": "how the VBD will appear to the guest (e.g. disk or CD)"
                },
                {
                    "field": "unpluggable",
                    "type": "bool",
                    "qualifier": "<em>RW</em>",
                    "desc": "true if this VBD will support hot-unplug"
                },
                {
                    "field": "userdevice",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "user-friendly device name e.g. 0,1,2,etc."
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                },
                {
                    "field": "VDI",
                    "type": "VDI ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "the virtual disk"
                },
                {
                    "field": "VM",
                    "type": "VM ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "the virtual machine"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_other_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the other_config field of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "add_to_qos_algorithm_params",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the qos/algorithm_params field of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "assert_attachable",
                    "status": "supported",
                    "desc": "Throws an error if this VBD could not be attached to this VM if the VM were running. Intended for debugging.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "The VBD to query"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "create",
                    "status": "supported",
                    "desc": "Create a new VBD instance, and return its handle.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD record",
                            "name": "args",
                            "desc": "All constructor arguments"
                        }
                    ],
                    "return": {
                        "type": "VBD ref",
                        "desc": "reference to the newly created object",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "Destroy the specified VBD instance.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "eject",
                    "status": "supported",
                    "desc": "Remove the media from the device and leave it empty",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "vbd",
                            "desc": "The vbd representing the CDROM-like device"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "VBD_NOT_REMOVABLE_MEDIA",
                            "VBD_IS_EMPTY"
                        ]
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the VBDs known to the system.",
                    "args": [],
                    "return": {
                        "type": "VBD ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of VBD references to VBD records for all VBDs known to the system.",
                    "args": [],
                    "return": {
                        "type": "(VBD ref -&gt; VBD record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_allowed_operations",
                    "status": "supported",
                    "desc": "Get the allowed_operations field of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "vbd_operations set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_bootable",
                    "status": "supported",
                    "desc": "Get the bootable field of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the VBD instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "VBD ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_current_operations",
                    "status": "supported",
                    "desc": "Get the current_operations field of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; vbd_operations) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_currently_attached",
                    "status": "supported",
                    "desc": "Get the currently_attached field of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_device",
                    "status": "supported",
                    "desc": "Get the device field of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_empty",
                    "status": "supported",
                    "desc": "Get the empty field of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_metrics",
                    "status": "removed",
                    "desc": "Get the metrics field of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VBD_metrics ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_mode",
                    "status": "supported",
                    "desc": "Get the mode field of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "vbd_mode",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_qos_algorithm_params",
                    "status": "supported",
                    "desc": "Get the qos/algorithm_params field of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_qos_algorithm_type",
                    "status": "supported",
                    "desc": "Get the qos/algorithm_type field of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_qos_supported_algorithms",
                    "status": "supported",
                    "desc": "Get the qos/supported_algorithms field of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VBD record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_runtime_properties",
                    "status": "supported",
                    "desc": "Get the runtime_properties field of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_status_code",
                    "status": "supported",
                    "desc": "Get the status_code field of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_status_detail",
                    "status": "supported",
                    "desc": "Get the status_detail field of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_storage_lock",
                    "status": "supported",
                    "desc": "Get the storage_lock field of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_type",
                    "status": "supported",
                    "desc": "Get the type field of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "vbd_type",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_unpluggable",
                    "status": "supported",
                    "desc": "Get the unpluggable field of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_userdevice",
                    "status": "supported",
                    "desc": "Get the userdevice field of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vdi",
                    "status": "supported",
                    "desc": "Get the VDI field of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VDI ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vm",
                    "status": "supported",
                    "desc": "Get the VM field of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VM ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "insert",
                    "status": "supported",
                    "desc": "Insert new media into the device",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "vbd",
                            "desc": "The vbd representing the CDROM-like device"
                        },
                        {
                            "type": "VDI ref",
                            "name": "vdi",
                            "desc": "The new VDI to ‘insert’"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "VBD_NOT_REMOVABLE_MEDIA",
                            "VBD_NOT_EMPTY"
                        ]
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "plug",
                    "status": "supported",
                    "desc": "Hotplug the specified VBD, dynamically attaching it to the running VM",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "The VBD to hotplug"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given VBD. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "remove_from_qos_algorithm_params",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the qos/algorithm_params field of the given VBD. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_bootable",
                    "status": "supported",
                    "desc": "Set the bootable field of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "bool",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_mode",
                    "status": "supported",
                    "desc": "Sets the mode of the VBD. The power_state of the VM must be halted.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "Reference to the object"
                        },
                        {
                            "type": "vbd_mode",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_qos_algorithm_params",
                    "status": "supported",
                    "desc": "Set the qos/algorithm_params field of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_qos_algorithm_type",
                    "status": "supported",
                    "desc": "Set the qos/algorithm_type field of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_type",
                    "status": "supported",
                    "desc": "Set the type field of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "vbd_type",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_unpluggable",
                    "status": "supported",
                    "desc": "Set the unpluggable field of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "bool",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_userdevice",
                    "status": "supported",
                    "desc": "Set the userdevice field of the given VBD.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "unplug",
                    "status": "supported",
                    "desc": "Hot-unplug the specified VBD, dynamically unattaching it from the running VM",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "The VBD to hot-unplug"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "DEVICE_DETACH_REJECTED",
                            "DEVICE_ALREADY_DETACHED"
                        ]
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "unplug_force",
                    "status": "supported",
                    "desc": "Forcibly unplug the specified VBD",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD ref",
                            "name": "self",
                            "desc": "The VBD to forcibly unplug"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                }
            ]
        },
        {
            "name": "vbd_metrics",
            "state": "supported",
            "desc": "The metrics associated with a virtual block device",
            "fields": [
                {
                    "field": "io_read_kbs",
                    "type": "float",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Removed</strong>. Read bandwidth (KiB/s)"
                },
                {
                    "field": "io_write_kbs",
                    "type": "float",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Removed</strong>. Write bandwidth (KiB/s)"
                },
                {
                    "field": "last_updated",
                    "type": "datetime",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Removed</strong>. Time at which this information was last updated"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "<strong>Removed</strong>. additional configuration"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Removed</strong>. Unique identifier/object reference"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_other_config",
                    "status": "removed",
                    "desc": "Add the given key-value pair to the other_config field of the given VBD_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "get_all",
                    "status": "removed",
                    "desc": "Return a list of all the VBD_metrics instances known to the system.",
                    "args": [],
                    "return": {
                        "type": "VBD_metrics ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "removed",
                    "desc": "Return a map of VBD_metrics references to VBD_metrics records for all VBD_metrics instances known to the system.",
                    "args": [],
                    "return": {
                        "type": "(VBD_metrics ref -&gt; VBD_metrics record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "removed",
                    "desc": "Get a reference to the VBD_metrics instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "VBD_metrics ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_io_read_kbs",
                    "status": "removed",
                    "desc": "Get the io/read_kbs field of the given VBD_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "float",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_io_write_kbs",
                    "status": "removed",
                    "desc": "Get the io/write_kbs field of the given VBD_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "float",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_last_updated",
                    "status": "removed",
                    "desc": "Get the last_updated field of the given VBD_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "datetime",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "removed",
                    "desc": "Get the other_config field of the given VBD_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "removed",
                    "desc": "Get a record containing the current state of the given VBD_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VBD_metrics record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "removed",
                    "desc": "Get the uuid field of the given VBD_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "removed",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given VBD_metrics. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_other_config",
                    "status": "removed",
                    "desc": "Set the other_config field of the given VBD_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VBD_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                }
            ],
            "supported": "removed"
        },
        {
            "name": "vdi",
            "state": "supported",
            "desc": "A virtual disk image",
            "fields": [
                {
                    "field": "allow_caching",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "true if this VDI is to be cached in the local cache SR"
                },
                {
                    "field": "allowed_operations",
                    "type": "vdi_operations set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client."
                },
                {
                    "field": "cbt_enabled",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "True if changed blocks are tracked for this VDI"
                },
                {
                    "field": "crash_dumps",
                    "type": "crashdump ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "list of crash dumps that refer to this disk"
                },
                {
                    "field": "current_operations",
                    "type": "(string -&gt; vdi_operations) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task."
                },
                {
                    "field": "is_a_snapshot",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "true if this is a snapshot."
                },
                {
                    "field": "is_tools_iso",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Whether this VDI is a Tools ISO"
                },
                {
                    "field": "location",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "location information"
                },
                {
                    "field": "managed",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "&nbsp;"
                },
                {
                    "field": "metadata_latest",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Whether this VDI contains the latest known accessible metadata for the pool"
                },
                {
                    "field": "metadata_of_pool",
                    "type": "pool ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The pool whose metadata is contained in this VDI"
                },
                {
                    "field": "missing",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "true if SR scan operation reported this VDI as not present on disk"
                },
                {
                    "field": "name_description",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "a notes field containing human-readable description"
                },
                {
                    "field": "name_label",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "a human-readable name"
                },
                {
                    "field": "on_boot",
                    "type": "on_boot",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The behaviour of this VDI on a VM boot"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "additional configuration"
                },
                {
                    "field": "parent",
                    "type": "VDI ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Deprecated</strong>. This field is always null. Deprecated"
                },
                {
                    "field": "physical_utilisation",
                    "type": "int",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "amount of physical space that the disk image is currently taking up on the storage repository (in bytes)"
                },
                {
                    "field": "read_only",
                    "type": "bool",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "true if this disk may ONLY be mounted read-only"
                },
                {
                    "field": "sharable",
                    "type": "bool",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "true if this disk may be shared"
                },
                {
                    "field": "sm_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "SM dependent data"
                },
                {
                    "field": "snapshot_of",
                    "type": "VDI ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Ref pointing to the VDI this snapshot is of."
                },
                {
                    "field": "snapshot_time",
                    "type": "datetime",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Date/time when this snapshot was created."
                },
                {
                    "field": "snapshots",
                    "type": "VDI ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "List pointing to all the VDIs snapshots."
                },
                {
                    "field": "SR",
                    "type": "SR ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "storage repository in which the VDI resides"
                },
                {
                    "field": "storage_lock",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "true if this disk is locked at the storage level"
                },
                {
                    "field": "tags",
                    "type": "string set",
                    "qualifier": "<em>RW</em>",
                    "desc": "user-specified tags for categorization purposes"
                },
                {
                    "field": "type",
                    "type": "vdi_type",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "type of the VDI"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                },
                {
                    "field": "VBDs",
                    "type": "VBD ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "list of vbds that refer to this disk"
                },
                {
                    "field": "virtual_size",
                    "type": "int",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "size of disk as presented to the guest (in bytes). Note that, depending on storage backend type, requested size may not be respected exactly"
                },
                {
                    "field": "xenstore_data",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "data to be inserted into the xenstore tree (/local/domain/0/backend/vbd/<domid>/<device-id>/sm-data) after the VDI is attached. This is generally set by the SM backends on vdi_attach.</device-id></domid>"
                }
            ],
            "rpcs": [
                {
                    "name": "add_tags",
                    "status": "supported",
                    "desc": "Add the given value to the tags field of the given VDI. If the value is already in that Set, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "add_to_other_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the other_config field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "add_to_sm_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the sm_config field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "add_to_xenstore_data",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the xenstore_data field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "clone",
                    "status": "supported",
                    "desc": "Take an exact copy of the VDI and return a reference to the new disk. If any driver_params are specified then these are passed through to the storage-specific substrate driver that implements the clone operation. NB the clone lives in the same Storage Repository as its parent.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "vdi",
                            "desc": "The VDI to clone"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "driver_params",
                            "desc": "Optional parameters that are passed through to the backend driver in order to specify storage-type-specific clone options"
                        }
                    ],
                    "return": {
                        "type": "VDI ref",
                        "desc": "The ID of the newly created VDI.",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "copy",
                    "status": "supported",
                    "desc": "Copy either a full VDI or the block differences between two VDIs into either a fresh VDI or an existing VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "vdi",
                            "desc": "The VDI to copy"
                        },
                        {
                            "type": "SR ref",
                            "name": "sr",
                            "desc": "The destination SR (only required if the destination VDI is not specified"
                        },
                        {
                            "type": "VDI ref",
                            "name": "base_vdi",
                            "desc": "The base VDI (only required if copying only changed blocks, by default all blocks will be copied)"
                        },
                        {
                            "type": "VDI ref",
                            "name": "into_vdi",
                            "desc": "The destination VDI to copy blocks into (if omitted then a destination SR must be provided and a fresh VDI will be created)"
                        }
                    ],
                    "return": {
                        "type": "VDI ref",
                        "desc": "The reference of the VDI where the blocks were written.",
                        "errs": [
                            "VDI_READONLY",
                            "VDI_TOO_SMALL",
                            "VDI_NOT_SPARSE"
                        ]
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "create",
                    "status": "supported",
                    "desc": "Create a new VDI instance, and return its handle.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI record",
                            "name": "args",
                            "desc": "All constructor arguments"
                        }
                    ],
                    "return": {
                        "type": "VDI ref",
                        "desc": "reference to the newly created object",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "data_destroy",
                    "status": "supported",
                    "desc": "Delete the data of the snapshot VDI, but keep its changed block tracking metadata. When successful, this call changes the type of the VDI to cbt_metadata. This operation is idempotent: calling it on a VDI of type cbt_metadata results in a no-op, and no error will be thrown.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "The VDI whose data should be deleted."
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "SR_OPERATION_NOT_SUPPORTED",
                            "VDI_MISSING",
                            "SR_NOT_ATTACHED",
                            "SR_HAS_NO_PBDS",
                            "OPERATION_NOT_ALLOWED",
                            "VDI_INCOMPATIBLE_TYPE",
                            "VDI_NO_CBT_METADATA",
                            "VDI_IN_USE",
                            "VDI_IS_A_PHYSICAL_DEVICE"
                        ]
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "Destroy the specified VDI instance.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "disable_cbt",
                    "status": "supported",
                    "desc": "Disable changed block tracking for the VDI. This call is only allowed on VDIs that support enabling CBT. It is an idempotent operation - disabling CBT for a VDI for which CBT is not enabled results in a no-op, and no error will be thrown.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "The VDI for which CBT should be disabled"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "SR_OPERATION_NOT_SUPPORTED",
                            "VDI_MISSING",
                            "SR_NOT_ATTACHED",
                            "SR_HAS_NO_PBDS",
                            "OPERATION_NOT_ALLOWED",
                            "VDI_INCOMPATIBLE_TYPE",
                            "VDI_ON_BOOT_MODE_INCOMPATIBLE_WITH_OPERATION"
                        ]
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "enable_cbt",
                    "status": "supported",
                    "desc": "Enable changed block tracking for the VDI. This call is idempotent - enabling CBT for a VDI for which CBT is already enabled results in a no-op, and no error will be thrown.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "The VDI for which CBT should be enabled"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "SR_OPERATION_NOT_SUPPORTED",
                            "VDI_MISSING",
                            "SR_NOT_ATTACHED",
                            "SR_HAS_NO_PBDS",
                            "OPERATION_NOT_ALLOWED",
                            "VDI_INCOMPATIBLE_TYPE",
                            "VDI_ON_BOOT_MODE_INCOMPATIBLE_WITH_OPERATION"
                        ]
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "forget",
                    "status": "supported",
                    "desc": "Removes a VDI record from the database",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "vdi",
                            "desc": "The VDI to forget about"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the VDIs known to the system.",
                    "args": [],
                    "return": {
                        "type": "VDI ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of VDI references to VDI records for all VDIs known to the system.",
                    "args": [],
                    "return": {
                        "type": "(VDI ref -&gt; VDI record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_allow_caching",
                    "status": "supported",
                    "desc": "Get the allow_caching field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_allowed_operations",
                    "status": "supported",
                    "desc": "Get the allowed_operations field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "vdi_operations set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_name_label",
                    "status": "supported",
                    "desc": "Get all the VDI instances with the given label.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "label",
                            "desc": "label of object to return"
                        }
                    ],
                    "return": {
                        "type": "VDI ref set",
                        "desc": "references to objects with matching names",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the VDI instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "VDI ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_cbt_enabled",
                    "status": "supported",
                    "desc": "Get the cbt_enabled field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_crash_dumps",
                    "status": "supported",
                    "desc": "Get the crash_dumps field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "crashdump ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_current_operations",
                    "status": "supported",
                    "desc": "Get the current_operations field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; vdi_operations) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_is_a_snapshot",
                    "status": "supported",
                    "desc": "Get the is_a_snapshot field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_is_tools_iso",
                    "status": "supported",
                    "desc": "Get the is_tools_iso field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_location",
                    "status": "supported",
                    "desc": "Get the location field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_managed",
                    "status": "supported",
                    "desc": "Get the managed field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_metadata_latest",
                    "status": "supported",
                    "desc": "Get the metadata_latest field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_metadata_of_pool",
                    "status": "supported",
                    "desc": "Get the metadata_of_pool field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "pool ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_missing",
                    "status": "supported",
                    "desc": "Get the missing field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_description",
                    "status": "supported",
                    "desc": "Get the name/description field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_label",
                    "status": "supported",
                    "desc": "Get the name/label field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_nbd_info",
                    "status": "supported",
                    "desc": "Get details specifying how to access this VDI via a Network Block Device server. For each of a set of NBD server addresses on which the VDI is available, the return value set contains a vdi_nbd_server_info object that contains an exportname to request once the NBD connection is established, and connection details for the address. An empty list is returned if there is no network that has a PIF on a host with access to the relevant SR, or if no such network has been assigned an NBD-related purpose in its purpose field. To access the given VDI, any of the vdi_nbd_server_info objects can be used to make a connection to a server, and then the VDI will be available by requesting the exportname.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "The VDI to access via Network Block Device protocol"
                        }
                    ],
                    "return": {
                        "type": "vdi_nbd_server_info record set",
                        "desc": "The details necessary for connecting to the VDI over NBD. This includes an authentication token, so must be treated as sensitive material and must not be sent over insecure networks.",
                        "errs": [
                            "VDI_INCOMPATIBLE_TYPE"
                        ]
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "get_on_boot",
                    "status": "supported",
                    "desc": "Get the on_boot field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "on_boot",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_parent",
                    "status": "deprecated",
                    "desc": "Get the parent field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VDI ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_physical_utilisation",
                    "status": "supported",
                    "desc": "Get the physical_utilisation field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_read_only",
                    "status": "supported",
                    "desc": "Get the read_only field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VDI record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_sharable",
                    "status": "supported",
                    "desc": "Get the sharable field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_sm_config",
                    "status": "supported",
                    "desc": "Get the sm_config field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_snapshot_of",
                    "status": "supported",
                    "desc": "Get the snapshot_of field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VDI ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_snapshot_time",
                    "status": "supported",
                    "desc": "Get the snapshot_time field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "datetime",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_snapshots",
                    "status": "supported",
                    "desc": "Get the snapshots field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VDI ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_sr",
                    "status": "supported",
                    "desc": "Get the SR field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "SR ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_storage_lock",
                    "status": "supported",
                    "desc": "Get the storage_lock field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_tags",
                    "status": "supported",
                    "desc": "Get the tags field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_type",
                    "status": "supported",
                    "desc": "Get the type field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "vdi_type",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vbds",
                    "status": "supported",
                    "desc": "Get the VBDs field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VBD ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_virtual_size",
                    "status": "supported",
                    "desc": "Get the virtual_size field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_xenstore_data",
                    "status": "supported",
                    "desc": "Get the xenstore_data field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "introduce",
                    "status": "supported",
                    "desc": "Create a new VDI record in the database only",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "The uuid of the disk to introduce"
                        },
                        {
                            "type": "string",
                            "name": "name_label",
                            "desc": "The name of the disk record"
                        },
                        {
                            "type": "string",
                            "name": "name_description",
                            "desc": "The description of the disk record"
                        },
                        {
                            "type": "SR ref",
                            "name": "SR",
                            "desc": "The SR that the VDI is in"
                        },
                        {
                            "type": "vdi_type",
                            "name": "type",
                            "desc": "The type of the VDI"
                        },
                        {
                            "type": "bool",
                            "name": "sharable",
                            "desc": "true if this disk may be shared"
                        },
                        {
                            "type": "bool",
                            "name": "read_only",
                            "desc": "true if this disk may ONLY be mounted read-only"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "other_config",
                            "desc": "additional configuration"
                        },
                        {
                            "type": "string",
                            "name": "location",
                            "desc": "location information"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "xenstore_data",
                            "desc": "Data to insert into xenstore"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "sm_config",
                            "desc": "Storage-specific config"
                        },
                        {
                            "type": "bool",
                            "name": "managed",
                            "desc": "Storage-specific config"
                        },
                        {
                            "type": "int",
                            "name": "virtual_size",
                            "desc": "Storage-specific config"
                        },
                        {
                            "type": "int",
                            "name": "physical_utilisation",
                            "desc": "Storage-specific config"
                        },
                        {
                            "type": "pool ref",
                            "name": "metadata_of_pool",
                            "desc": "Storage-specific config"
                        },
                        {
                            "type": "bool",
                            "name": "is_a_snapshot",
                            "desc": "Storage-specific config"
                        },
                        {
                            "type": "datetime",
                            "name": "snapshot_time",
                            "desc": "Storage-specific config"
                        },
                        {
                            "type": "VDI ref",
                            "name": "snapshot_of",
                            "desc": "Storage-specific config"
                        }
                    ],
                    "return": {
                        "type": "VDI ref",
                        "desc": "The ref of the newly created VDI record.",
                        "errs": [
                            "SR_OPERATION_NOT_SUPPORTED"
                        ]
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "list_changed_blocks",
                    "status": "supported",
                    "desc": "Compare two VDIs in 64k block increments and report which blocks differ. This operation is not allowed when vdi_to is attached to a VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "vdi_from",
                            "desc": "The first VDI."
                        },
                        {
                            "type": "VDI ref",
                            "name": "vdi_to",
                            "desc": "The second VDI."
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "A base64 string-encoding of the bitmap showing which blocks differ in the two VDIs.",
                        "errs": [
                            "SR_OPERATION_NOT_SUPPORTED",
                            "VDI_MISSING",
                            "SR_NOT_ATTACHED",
                            "SR_HAS_NO_PBDS",
                            "VDI_IN_USE"
                        ]
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "open_database",
                    "status": "supported",
                    "desc": "Load the metadata found on the supplied VDI and return a session reference which can be used in API calls to query its contents.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "The VDI which contains the database to open"
                        }
                    ],
                    "return": {
                        "type": "session ref",
                        "desc": "A session which can be used to query the database",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "pool_migrate",
                    "status": "supported",
                    "desc": "Migrate a VDI, which may be attached to a running guest, to a different SR. The destination SR must be visible to the guest.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "vdi",
                            "desc": "The VDI to migrate"
                        },
                        {
                            "type": "SR ref",
                            "name": "sr",
                            "desc": "The destination SR"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "options",
                            "desc": "Other parameters"
                        }
                    ],
                    "return": {
                        "type": "VDI ref",
                        "desc": "The new reference of the migrated VDI.",
                        "errs": []
                    },
                    "minrole": "vm-power-admin"
                },
                {
                    "name": "read_database_pool_uuid",
                    "status": "supported",
                    "desc": "Check the VDI cache for the pool UUID of the database on this VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "The metadata VDI to look up in the cache."
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "The cached pool UUID of the database on the VDI.",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given VDI. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "remove_from_sm_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the sm_config field of the given VDI. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "remove_from_xenstore_data",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the xenstore_data field of the given VDI. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "remove_tags",
                    "status": "supported",
                    "desc": "Remove the given value from the tags field of the given VDI. If the value is not in that Set, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "resize",
                    "status": "supported",
                    "desc": "Resize the VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "vdi",
                            "desc": "The VDI to resize"
                        },
                        {
                            "type": "int",
                            "name": "size",
                            "desc": "The new size of the VDI"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "resize_online",
                    "status": "removed",
                    "desc": "Resize the VDI which may or may not be attached to running guests.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "vdi",
                            "desc": "The VDI to resize"
                        },
                        {
                            "type": "int",
                            "name": "size",
                            "desc": "The new size of the VDI"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_allow_caching",
                    "status": "supported",
                    "desc": "Set the value of the allow_caching parameter. This value can only be changed when the VDI is not attached to a running VM. The caching behaviour is only affected by this flag for VHD-based VDIs that have one parent and no child VHDs. Moreover, caching only takes place when the host running the VM containing this VDI has a nominated SR for local caching.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "The VDI to modify"
                        },
                        {
                            "type": "bool",
                            "name": "value",
                            "desc": "The value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_name_description",
                    "status": "supported",
                    "desc": "Set the name description of the VDI. This can only happen when its SR is currently attached.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "The VDI to modify"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "The name description for the VDI"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_name_label",
                    "status": "supported",
                    "desc": "Set the name label of the VDI. This can only happen when then its SR is currently attached.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "The VDI to modify"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "The name lable for the VDI"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_on_boot",
                    "status": "supported",
                    "desc": "Set the value of the on_boot parameter. This value can only be changed when the VDI is not attached to a running VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "The VDI to modify"
                        },
                        {
                            "type": "on_boot",
                            "name": "value",
                            "desc": "The value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_read_only",
                    "status": "supported",
                    "desc": "Sets the VDI’s read_only field",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "The VDI to modify"
                        },
                        {
                            "type": "bool",
                            "name": "value",
                            "desc": "The new value of the VDI’s read_only field"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_sharable",
                    "status": "supported",
                    "desc": "Sets the VDI’s sharable field",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "The VDI to modify"
                        },
                        {
                            "type": "bool",
                            "name": "value",
                            "desc": "The new value of the VDI’s sharable field"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_sm_config",
                    "status": "supported",
                    "desc": "Set the sm_config field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_tags",
                    "status": "supported",
                    "desc": "Set the tags field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string set",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "set_xenstore_data",
                    "status": "supported",
                    "desc": "Set the xenstore_data field of the given VDI.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "snapshot",
                    "status": "supported",
                    "desc": "Take a read-only snapshot of the VDI, returning a reference to the snapshot. If any driver_params are specified then these are passed through to the storage-specific substrate driver that takes the snapshot. NB the snapshot lives in the same Storage Repository as its parent.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "vdi",
                            "desc": "The VDI to snapshot"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "driver_params",
                            "desc": "Optional parameters that can be passed through to backend driver in order to specify storage-type-specific snapshot options"
                        }
                    ],
                    "return": {
                        "type": "VDI ref",
                        "desc": "The ID of the newly created VDI.",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "update",
                    "status": "supported",
                    "desc": "Ask the storage backend to refresh the fields in the VDI object",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VDI ref",
                            "name": "vdi",
                            "desc": "The VDI whose stats (eg size) should be updated"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "SR_OPERATION_NOT_SUPPORTED"
                        ]
                    },
                    "minrole": "vm-admin"
                }
            ]
        },
        {
            "name": "vdi_nbd_server_info",
            "state": "supported",
            "desc": "Details for connecting to a VDI using the Network Block Device protocol",
            "fields": [
                {
                    "field": "address",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "An address on which the server can be reached; this can be IPv4, IPv6, or a DNS name."
                },
                {
                    "field": "cert",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The TLS certificate of the server"
                },
                {
                    "field": "exportname",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The exportname to request over NBD. This holds details including an authentication token, so it must be protected appropriately. Clients should regard the exportname as an opaque string or token."
                },
                {
                    "field": "port",
                    "type": "int",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The TCP port"
                },
                {
                    "field": "subject",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "For convenience, this redundant field holds a DNS (hostname) subject of the certificate. This can be a wildcard, but only for a certificate that has a wildcard subject and no concrete hostname subjects."
                }
            ],
            "rpcs": []
        },
        {
            "name": "vgpu",
            "deprecated": false,
            "desc": "A virtual GPU (vGPU)",
            "fields": [
                {
                    "field": "compatibility_metadata",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "VGPU metadata to determine whether a VGPU can migrate between two PGPUs"
                },
                {
                    "field": "currently_attached",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Reflects whether the virtual device is currently connected to a physical device"
                },
                {
                    "field": "device",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Order in which the devices are plugged into the VM"
                },
                {
                    "field": "extra_args",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "Extra arguments for vGPU and passed to demu"
                },
                {
                    "field": "GPU_group",
                    "type": "GPU_group ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "GPU group used by the vGPU"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "Additional configuration"
                },
                {
                    "field": "PCI",
                    "type": "PCI ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Device passed trough to VM, either as full device or SR-IOV virtual function"
                },
                {
                    "field": "resident_on",
                    "type": "PGPU ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The PGPU on which this VGPU is running"
                },
                {
                    "field": "scheduled_to_be_resident_on",
                    "type": "PGPU ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The PGPU on which this VGPU is scheduled to run"
                },
                {
                    "field": "type",
                    "type": "VGPU_type ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Preset type for this VGPU"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                },
                {
                    "field": "VM",
                    "type": "VM ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "VM that owns the vGPU"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_other_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the other_config field of the given VGPU.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "create",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "VM",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "GPU_group ref",
                            "name": "GPU_group",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "string",
                            "name": "device",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "other_config",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "VGPU_type ref",
                            "name": "type",
                            "desc": "&nbsp;"
                        }
                    ],
                    "return": {
                        "type": "VGPU ref",
                        "desc": "reference to the newly created object",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU ref",
                            "name": "self",
                            "desc": "The vGPU to destroy"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the VGPUs known to the system.",
                    "args": [],
                    "return": {
                        "type": "VGPU ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of VGPU references to VGPU records for all VGPUs known to the system.",
                    "args": [],
                    "return": {
                        "type": "(VGPU ref -&gt; VGPU record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the VGPU instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "VGPU ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_compatibility_metadata",
                    "status": "supported",
                    "desc": "Get the compatibility_metadata field of the given VGPU.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_currently_attached",
                    "status": "supported",
                    "desc": "Get the currently_attached field of the given VGPU.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_device",
                    "status": "supported",
                    "desc": "Get the device field of the given VGPU.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_extra_args",
                    "status": "supported",
                    "desc": "Get the extra_args field of the given VGPU.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_gpu_group",
                    "status": "supported",
                    "desc": "Get the GPU_group field of the given VGPU.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "GPU_group ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given VGPU.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pci",
                    "status": "supported",
                    "desc": "Get the PCI field of the given VGPU.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PCI ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given VGPU.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VGPU record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_resident_on",
                    "status": "supported",
                    "desc": "Get the resident_on field of the given VGPU.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PGPU ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_scheduled_to_be_resident_on",
                    "status": "supported",
                    "desc": "Get the scheduled_to_be_resident_on field of the given VGPU.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PGPU ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_type",
                    "status": "supported",
                    "desc": "Get the type field of the given VGPU.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VGPU_type ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given VGPU.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vm",
                    "status": "supported",
                    "desc": "Get the VM field of the given VGPU.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VM ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given VGPU. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_extra_args",
                    "status": "supported",
                    "desc": "Set the extra_args field of the given VGPU.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given VGPU.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                }
            ]
        },
        {
            "name": "vgpu_type",
            "state": "supported",
            "desc": "A type of virtual GPU",
            "fields": [
                {
                    "field": "compatible_types_in_vm",
                    "type": "VGPU_type ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "List of VGPU types which are compatible in one VM"
                },
                {
                    "field": "enabled_on_GPU_groups",
                    "type": "GPU_group ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "List of GPU groups in which at least one have this VGPU type enabled"
                },
                {
                    "field": "enabled_on_PGPUs",
                    "type": "PGPU ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "List of PGPUs that have this VGPU type enabled"
                },
                {
                    "field": "experimental",
                    "type": "bool",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Indicates whether VGPUs of this type should be considered experimental"
                },
                {
                    "field": "framebuffer_size",
                    "type": "int",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Framebuffer size of the VGPU type, in bytes"
                },
                {
                    "field": "identifier",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Key used to identify VGPU types and avoid creating duplicates - this field is used internally and not intended for interpretation by API clients"
                },
                {
                    "field": "implementation",
                    "type": "vgpu_type_implementation",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "The internal implementation of this VGPU type"
                },
                {
                    "field": "max_heads",
                    "type": "int",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Maximum number of displays supported by the VGPU type"
                },
                {
                    "field": "max_resolution_x",
                    "type": "int",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Maximum resolution (width) supported by the VGPU type"
                },
                {
                    "field": "max_resolution_y",
                    "type": "int",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Maximum resolution (height) supported by the VGPU type"
                },
                {
                    "field": "model_name",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Model name associated with the VGPU type"
                },
                {
                    "field": "supported_on_GPU_groups",
                    "type": "GPU_group ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "List of GPU groups in which at least one PGPU supports this VGPU type"
                },
                {
                    "field": "supported_on_PGPUs",
                    "type": "PGPU ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "List of PGPUs that support this VGPU type"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                },
                {
                    "field": "vendor_name",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Name of VGPU vendor"
                },
                {
                    "field": "VGPUs",
                    "type": "VGPU ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "List of VGPUs of this type"
                }
            ],
            "rpcs": [
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the VGPU_types known to the system.",
                    "args": [],
                    "return": {
                        "type": "VGPU_type ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of VGPU_type references to VGPU_type records for all VGPU_types known to the system.",
                    "args": [],
                    "return": {
                        "type": "(VGPU_type ref -&gt; VGPU_type record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the VGPU_type instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "VGPU_type ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_compatible_types_in_vm",
                    "status": "supported",
                    "desc": "Get the compatible_types_in_vm field of the given VGPU_type.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU_type ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VGPU_type ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_enabled_on_gpu_groups",
                    "status": "supported",
                    "desc": "Get the enabled_on_GPU_groups field of the given VGPU_type.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU_type ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "GPU_group ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_enabled_on_pgpus",
                    "status": "supported",
                    "desc": "Get the enabled_on_PGPUs field of the given VGPU_type.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU_type ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PGPU ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_experimental",
                    "status": "supported",
                    "desc": "Get the experimental field of the given VGPU_type.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU_type ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_framebuffer_size",
                    "status": "supported",
                    "desc": "Get the framebuffer_size field of the given VGPU_type.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU_type ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_identifier",
                    "status": "supported",
                    "desc": "Get the identifier field of the given VGPU_type.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU_type ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_implementation",
                    "status": "supported",
                    "desc": "Get the implementation field of the given VGPU_type.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU_type ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "vgpu_type_implementation",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_max_heads",
                    "status": "supported",
                    "desc": "Get the max_heads field of the given VGPU_type.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU_type ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_max_resolution_x",
                    "status": "supported",
                    "desc": "Get the max_resolution_x field of the given VGPU_type.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU_type ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_max_resolution_y",
                    "status": "supported",
                    "desc": "Get the max_resolution_y field of the given VGPU_type.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU_type ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_model_name",
                    "status": "supported",
                    "desc": "Get the model_name field of the given VGPU_type.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU_type ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given VGPU_type.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU_type ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VGPU_type record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_supported_on_gpu_groups",
                    "status": "supported",
                    "desc": "Get the supported_on_GPU_groups field of the given VGPU_type.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU_type ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "GPU_group ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_supported_on_pgpus",
                    "status": "supported",
                    "desc": "Get the supported_on_PGPUs field of the given VGPU_type.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU_type ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PGPU ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given VGPU_type.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU_type ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vendor_name",
                    "status": "supported",
                    "desc": "Get the vendor_name field of the given VGPU_type.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU_type ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vgpus",
                    "status": "supported",
                    "desc": "Get the VGPUs field of the given VGPU_type.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VGPU_type ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VGPU ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                }
            ]
        },
        {
            "name": "vif",
            "state": "supported",
            "desc": "A virtual network interface",
            "fields": [
                {
                    "field": "allowed_operations",
                    "type": "vif_operations set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client."
                },
                {
                    "field": "current_operations",
                    "type": "(string -&gt; vif_operations) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task."
                },
                {
                    "field": "currently_attached",
                    "type": "bool",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "is the device currently attached (erased on reboot)"
                },
                {
                    "field": "device",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "order in which VIF backends are created by xapi"
                },
                {
                    "field": "ipv4_addresses",
                    "type": "string set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "IPv4 addresses in CIDR format"
                },
                {
                    "field": "ipv4_allowed",
                    "type": "string set",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "A list of IPv4 addresses which can be used to filter traffic passing through this VIF"
                },
                {
                    "field": "ipv4_configuration_mode",
                    "type": "vif_ipv4_configuration_mode",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Determines whether IPv4 addresses are configured on the VIF"
                },
                {
                    "field": "ipv4_gateway",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "IPv4 gateway (the empty string means that no gateway is set)"
                },
                {
                    "field": "ipv6_addresses",
                    "type": "string set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "IPv6 addresses in CIDR format"
                },
                {
                    "field": "ipv6_allowed",
                    "type": "string set",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "A list of IPv6 addresses which can be used to filter traffic passing through this VIF"
                },
                {
                    "field": "ipv6_configuration_mode",
                    "type": "vif_ipv6_configuration_mode",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Determines whether IPv6 addresses are configured on the VIF"
                },
                {
                    "field": "ipv6_gateway",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "IPv6 gateway (the empty string means that no gateway is set)"
                },
                {
                    "field": "locking_mode",
                    "type": "vif_locking_mode",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "current locking mode of the VIF"
                },
                {
                    "field": "MAC",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "ethernet MAC address of virtual interface, as exposed to guest"
                },
                {
                    "field": "MAC_autogenerated",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "true if the MAC was autogenerated; false indicates it was set manually"
                },
                {
                    "field": "metrics",
                    "type": "VIF_metrics ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Removed</strong>. metrics associated with this VIF"
                },
                {
                    "field": "MTU",
                    "type": "int",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "MTU in octets"
                },
                {
                    "field": "network",
                    "type": "network ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "virtual network to which this vif is connected"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "additional configuration"
                },
                {
                    "field": "qos_algorithm_params",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "parameters for chosen QoS algorithm"
                },
                {
                    "field": "qos_algorithm_type",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "QoS algorithm to use"
                },
                {
                    "field": "qos_supported_algorithms",
                    "type": "string set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "supported QoS algorithms for this VIF"
                },
                {
                    "field": "runtime_properties",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Device runtime properties"
                },
                {
                    "field": "status_code",
                    "type": "int",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "error/success code associated with last attach-operation (erased on reboot)"
                },
                {
                    "field": "status_detail",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "error/success information associated with last attach-operation status (erased on reboot)"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                },
                {
                    "field": "VM",
                    "type": "VM ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "virtual machine to which this vif is connected"
                }
            ],
            "rpcs": [
                {
                    "name": "add_ipv4_allowed",
                    "status": "supported",
                    "desc": "Associates an IPv4 address with this VIF",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "The VIF which the IP address will be associated with"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "The IP address which will be associated with the VIF"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "add_ipv6_allowed",
                    "status": "supported",
                    "desc": "Associates an IPv6 address with this VIF",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "The VIF which the IP address will be associated with"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "The IP address which will be associated with the VIF"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "add_to_other_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the other_config field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "add_to_qos_algorithm_params",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the qos/algorithm_params field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "configure_ipv4",
                    "status": "supported",
                    "desc": "Configure IPv4 settings for this virtual interface",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "The VIF to configure"
                        },
                        {
                            "type": "vif_ipv4_configuration_mode",
                            "name": "mode",
                            "desc": "Whether to use static or no IPv4 assignment"
                        },
                        {
                            "type": "string",
                            "name": "address",
                            "desc": "The IPv4 address in <addr>/<prefix length=\"\"> format (for static mode only)</prefix></addr>"
                        },
                        {
                            "type": "string",
                            "name": "gateway",
                            "desc": "The IPv4 gateway (for static mode only; leave empty to not set a gateway)"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "configure_ipv6",
                    "status": "supported",
                    "desc": "Configure IPv6 settings for this virtual interface",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "The VIF to configure"
                        },
                        {
                            "type": "vif_ipv6_configuration_mode",
                            "name": "mode",
                            "desc": "Whether to use static or no IPv6 assignment"
                        },
                        {
                            "type": "string",
                            "name": "address",
                            "desc": "The IPv6 address in <addr>/<prefix length=\"\"> format (for static mode only)</prefix></addr>"
                        },
                        {
                            "type": "string",
                            "name": "gateway",
                            "desc": "The IPv6 gateway (for static mode only; leave empty to not set a gateway)"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "create",
                    "status": "supported",
                    "desc": "Create a new VIF instance, and return its handle.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF record",
                            "name": "args",
                            "desc": "All constructor arguments"
                        }
                    ],
                    "return": {
                        "type": "VIF ref",
                        "desc": "reference to the newly created object",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "Destroy the specified VIF instance.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the VIFs known to the system.",
                    "args": [],
                    "return": {
                        "type": "VIF ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of VIF references to VIF records for all VIFs known to the system.",
                    "args": [],
                    "return": {
                        "type": "(VIF ref -&gt; VIF record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_allowed_operations",
                    "status": "supported",
                    "desc": "Get the allowed_operations field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "vif_operations set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the VIF instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "VIF ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_current_operations",
                    "status": "supported",
                    "desc": "Get the current_operations field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; vif_operations) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_currently_attached",
                    "status": "supported",
                    "desc": "Get the currently_attached field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_device",
                    "status": "supported",
                    "desc": "Get the device field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_ipv4_addresses",
                    "status": "supported",
                    "desc": "Get the ipv4_addresses field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_ipv4_allowed",
                    "status": "supported",
                    "desc": "Get the ipv4_allowed field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_ipv4_configuration_mode",
                    "status": "supported",
                    "desc": "Get the ipv4_configuration_mode field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "vif_ipv4_configuration_mode",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_ipv4_gateway",
                    "status": "supported",
                    "desc": "Get the ipv4_gateway field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_ipv6_addresses",
                    "status": "supported",
                    "desc": "Get the ipv6_addresses field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_ipv6_allowed",
                    "status": "supported",
                    "desc": "Get the ipv6_allowed field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_ipv6_configuration_mode",
                    "status": "supported",
                    "desc": "Get the ipv6_configuration_mode field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "vif_ipv6_configuration_mode",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_ipv6_gateway",
                    "status": "supported",
                    "desc": "Get the ipv6_gateway field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_locking_mode",
                    "status": "supported",
                    "desc": "Get the locking_mode field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "vif_locking_mode",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_mac",
                    "status": "supported",
                    "desc": "Get the MAC field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_mac_autogenerated",
                    "status": "supported",
                    "desc": "Get the MAC_autogenerated field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_metrics",
                    "status": "removed",
                    "desc": "Get the metrics field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VIF_metrics ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_mtu",
                    "status": "supported",
                    "desc": "Get the MTU field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_network",
                    "status": "supported",
                    "desc": "Get the network field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "network ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_qos_algorithm_params",
                    "status": "supported",
                    "desc": "Get the qos/algorithm_params field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_qos_algorithm_type",
                    "status": "supported",
                    "desc": "Get the qos/algorithm_type field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_qos_supported_algorithms",
                    "status": "supported",
                    "desc": "Get the qos/supported_algorithms field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VIF record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_runtime_properties",
                    "status": "supported",
                    "desc": "Get the runtime_properties field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_status_code",
                    "status": "supported",
                    "desc": "Get the status_code field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_status_detail",
                    "status": "supported",
                    "desc": "Get the status_detail field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vm",
                    "status": "supported",
                    "desc": "Get the VM field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VM ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "move",
                    "status": "supported",
                    "desc": "Move the specified VIF to the specified network, even while the VM is running",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "The VIF to move"
                        },
                        {
                            "type": "network ref",
                            "name": "network",
                            "desc": "The network to move it to"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "plug",
                    "status": "supported",
                    "desc": "Hotplug the specified VIF, dynamically attaching it to the running VM",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "The VIF to hotplug"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given VIF. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "remove_from_qos_algorithm_params",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the qos/algorithm_params field of the given VIF. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "remove_ipv4_allowed",
                    "status": "supported",
                    "desc": "Removes an IPv4 address from this VIF",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "The VIF from which the IP address will be removed"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "The IP address which will be removed from the VIF"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "remove_ipv6_allowed",
                    "status": "supported",
                    "desc": "Removes an IPv6 address from this VIF",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "The VIF from which the IP address will be removed"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "The IP address which will be removed from the VIF"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_ipv4_allowed",
                    "status": "supported",
                    "desc": "Set the IPv4 addresses to which traffic on this VIF can be restricted",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "The VIF which the IP addresses will be associated with"
                        },
                        {
                            "type": "string set",
                            "name": "value",
                            "desc": "The IP addresses which will be associated with the VIF"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_ipv6_allowed",
                    "status": "supported",
                    "desc": "Set the IPv6 addresses to which traffic on this VIF can be restricted",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "The VIF which the IP addresses will be associated with"
                        },
                        {
                            "type": "string set",
                            "name": "value",
                            "desc": "The IP addresses which will be associated with the VIF"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_locking_mode",
                    "status": "supported",
                    "desc": "Set the locking mode for this VIF",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "The VIF whose locking mode will be set"
                        },
                        {
                            "type": "vif_locking_mode",
                            "name": "value",
                            "desc": "The new locking mode for the VIF"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_qos_algorithm_params",
                    "status": "supported",
                    "desc": "Set the qos/algorithm_params field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_qos_algorithm_type",
                    "status": "supported",
                    "desc": "Set the qos/algorithm_type field of the given VIF.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "unplug",
                    "status": "supported",
                    "desc": "Hot-unplug the specified VIF, dynamically unattaching it from the running VM",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "The VIF to hot-unplug"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "unplug_force",
                    "status": "supported",
                    "desc": "Forcibly unplug the specified VIF",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF ref",
                            "name": "self",
                            "desc": "The VIF to forcibly unplug"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                }
            ]
        },
        {
            "name": "vif_metrics",
            "state": "supported",
            "desc": "The metrics associated with a virtual network device",
            "fields": [
                {
                    "field": "io_read_kbs",
                    "type": "float",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Removed</strong>. Read bandwidth (KiB/s)"
                },
                {
                    "field": "io_write_kbs",
                    "type": "float",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Removed</strong>. Write bandwidth (KiB/s)"
                },
                {
                    "field": "last_updated",
                    "type": "datetime",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Removed</strong>. Time at which this information was last updated"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "<strong>Removed</strong>. additional configuration"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Removed</strong>. Unique identifier/object reference"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_other_config",
                    "status": "removed",
                    "desc": "Add the given key-value pair to the other_config field of the given VIF_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "get_all",
                    "status": "removed",
                    "desc": "Return a list of all the VIF_metrics instances known to the system.",
                    "args": [],
                    "return": {
                        "type": "VIF_metrics ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "removed",
                    "desc": "Return a map of VIF_metrics references to VIF_metrics records for all VIF_metrics instances known to the system.",
                    "args": [],
                    "return": {
                        "type": "(VIF_metrics ref -&gt; VIF_metrics record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "removed",
                    "desc": "Get a reference to the VIF_metrics instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "VIF_metrics ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_io_read_kbs",
                    "status": "removed",
                    "desc": "Get the io/read_kbs field of the given VIF_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "float",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_io_write_kbs",
                    "status": "removed",
                    "desc": "Get the io/write_kbs field of the given VIF_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "float",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_last_updated",
                    "status": "removed",
                    "desc": "Get the last_updated field of the given VIF_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "datetime",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "removed",
                    "desc": "Get the other_config field of the given VIF_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "removed",
                    "desc": "Get a record containing the current state of the given VIF_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VIF_metrics record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "removed",
                    "desc": "Get the uuid field of the given VIF_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "removed",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given VIF_metrics. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_other_config",
                    "status": "removed",
                    "desc": "Set the other_config field of the given VIF_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VIF_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                }
            ],
            "supported": "removed"
        },
        {
            "name": "vlan",
            "state": "supported",
            "desc": "A VLAN mux/demux",
            "fields": [
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "additional configuration"
                },
                {
                    "field": "tag",
                    "type": "int",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "VLAN tag in use"
                },
                {
                    "field": "tagged_PIF",
                    "type": "PIF ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "interface on which traffic is tagged"
                },
                {
                    "field": "untagged_PIF",
                    "type": "PIF ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "interface on which traffic is untagged"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_other_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the other_config field of the given VLAN.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VLAN ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "create",
                    "status": "supported",
                    "desc": "Create a VLAN mux/demuxer",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "PIF ref",
                            "name": "tagged_PIF",
                            "desc": "PIF which receives the tagged traffic"
                        },
                        {
                            "type": "int",
                            "name": "tag",
                            "desc": "VLAN tag to use"
                        },
                        {
                            "type": "network ref",
                            "name": "network",
                            "desc": "Network to receive the untagged traffic"
                        }
                    ],
                    "return": {
                        "type": "VLAN ref",
                        "desc": "The reference of the created VLAN object",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "Destroy a VLAN mux/demuxer",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VLAN ref",
                            "name": "self",
                            "desc": "VLAN mux/demuxer to destroy"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the VLANs known to the system.",
                    "args": [],
                    "return": {
                        "type": "VLAN ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of VLAN references to VLAN records for all VLANs known to the system.",
                    "args": [],
                    "return": {
                        "type": "(VLAN ref -&gt; VLAN record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the VLAN instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "VLAN ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given VLAN.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VLAN ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given VLAN.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VLAN ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VLAN record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_tag",
                    "status": "supported",
                    "desc": "Get the tag field of the given VLAN.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VLAN ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_tagged_pif",
                    "status": "supported",
                    "desc": "Get the tagged_PIF field of the given VLAN.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VLAN ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PIF ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_untagged_pif",
                    "status": "supported",
                    "desc": "Get the untagged_PIF field of the given VLAN.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VLAN ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PIF ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given VLAN.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VLAN ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given VLAN. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VLAN ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given VLAN.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VLAN ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                }
            ]
        },
        {
            "name": "vm",
            "state": "supported",
            "desc": "A virtual machine (or ‘guest’).",
            "fields": [
                {
                    "field": "actions_after_crash",
                    "type": "on_crash_behaviour",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "action to take if the guest crashes"
                },
                {
                    "field": "actions_after_reboot",
                    "type": "on_normal_exit",
                    "qualifier": "<em>RW</em>",
                    "desc": "action to take after the guest has rebooted itself"
                },
                {
                    "field": "actions_after_shutdown",
                    "type": "on_normal_exit",
                    "qualifier": "<em>RW</em>",
                    "desc": "action to take after the guest has shutdown itself"
                },
                {
                    "field": "actions_after_softreboot",
                    "type": "on_softreboot_behavior",
                    "qualifier": "<em>RW</em>",
                    "desc": "action to take after soft reboot"
                },
                {
                    "field": "affinity",
                    "type": "host ref",
                    "qualifier": "<em>RW</em>",
                    "desc": "A host which the VM has some affinity for (or NULL). This is used as a hint to the start call when it decides where to run the VM. Resource constraints may cause the VM to be started elsewhere."
                },
                {
                    "field": "allowed_operations",
                    "type": "vm_operations set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client."
                },
                {
                    "field": "appliance",
                    "type": "VM_appliance ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "the appliance to which this VM belongs"
                },
                {
                    "field": "attached_PCIs",
                    "type": "PCI ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Currently passed-through PCI devices"
                },
                {
                    "field": "bios_strings",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "BIOS strings"
                },
                {
                    "field": "blobs",
                    "type": "(string -&gt; blob ref) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Binary blobs associated with this VM"
                },
                {
                    "field": "blocked_operations",
                    "type": "(vm_operations -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "List of operations which have been explicitly blocked and an error code"
                },
                {
                    "field": "children",
                    "type": "VM ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "List pointing to all the children of this VM"
                },
                {
                    "field": "consoles",
                    "type": "console ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "virtual console devices"
                },
                {
                    "field": "crash_dumps",
                    "type": "crashdump ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "crash dumps associated with this VM"
                },
                {
                    "field": "current_operations",
                    "type": "(string -&gt; vm_operations) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task."
                },
                {
                    "field": "domain_type",
                    "type": "domain_type",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "The type of domain that will be created when the VM is started"
                },
                {
                    "field": "domarch",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Domain architecture (if available, null string otherwise)"
                },
                {
                    "field": "domid",
                    "type": "int",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "domain ID (if available, -1 otherwise)"
                },
                {
                    "field": "generation_id",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Generation ID of the VM"
                },
                {
                    "field": "guest_metrics",
                    "type": "VM_guest_metrics ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "metrics associated with the running guest"
                },
                {
                    "field": "ha_always_run",
                    "type": "bool",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "<strong>Deprecated</strong>. if true then the system will attempt to keep the VM running as much as possible."
                },
                {
                    "field": "ha_restart_priority",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "has possible values: “best-effort” meaning “try to restart this VM if possible but don’t consider the Pool to be overcommitted if this is not possible”; “restart” meaning “this VM should be restarted”; “” meaning “do not try to restart this VM”"
                },
                {
                    "field": "hardware_platform_version",
                    "type": "int",
                    "qualifier": "<em>RW</em>",
                    "desc": "The host virtual hardware platform version the VM can run on"
                },
                {
                    "field": "has_vendor_device",
                    "type": "bool",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "When an HVM guest starts, this controls the presence of the emulated C000 PCI device which triggers Windows Update to fetch or update PV drivers."
                },
                {
                    "field": "HVM_boot_params",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "HVM boot params"
                },
                {
                    "field": "HVM_boot_policy",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "<strong>Deprecated</strong>. HVM boot policy"
                },
                {
                    "field": "HVM_shadow_multiplier",
                    "type": "float",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "multiplier applied to the amount of shadow that will be made available to the guest"
                },
                {
                    "field": "is_a_snapshot",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "true if this is a snapshot. Snapshotted VMs can never be started, they are used only for cloning other VMs"
                },
                {
                    "field": "is_a_template",
                    "type": "bool",
                    "qualifier": "<em>RW</em>",
                    "desc": "true if this is a template. Template VMs can never be started, they are used only for cloning other VMs"
                },
                {
                    "field": "is_control_domain",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "true if this is a control domain (domain 0 or a driver domain)"
                },
                {
                    "field": "is_default_template",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "true if this is a default template. Default template VMs can never be started or migrated, they are used only for cloning other VMs"
                },
                {
                    "field": "is_snapshot_from_vmpp",
                    "type": "bool",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "<strong>Removed</strong>. true if this snapshot was created by the protection policy"
                },
                {
                    "field": "is_vmss_snapshot",
                    "type": "bool",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "true if this snapshot was created by the snapshot schedule"
                },
                {
                    "field": "last_boot_CPU_flags",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "describes the CPU flags on which the VM was last booted"
                },
                {
                    "field": "last_booted_record",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "marshalled value containing VM record at time of last boot"
                },
                {
                    "field": "memory_dynamic_max",
                    "type": "int",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Dynamic maximum (bytes)"
                },
                {
                    "field": "memory_dynamic_min",
                    "type": "int",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Dynamic minimum (bytes)"
                },
                {
                    "field": "memory_overhead",
                    "type": "int",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Virtualization memory overhead (bytes)."
                },
                {
                    "field": "memory_static_max",
                    "type": "int",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Statically-set (i.e. absolute) maximum (bytes). The value of this field at VM start time acts as a hard limit of the amount of memory a guest can use. New values only take effect on reboot."
                },
                {
                    "field": "memory_static_min",
                    "type": "int",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Statically-set (i.e. absolute) mininum (bytes). The value of this field indicates the least amount of memory this VM can boot with without crashing."
                },
                {
                    "field": "memory_target",
                    "type": "int",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "<strong>Deprecated</strong>. Dynamically-set memory target (bytes). The value of this field indicates the current target for memory available to this VM."
                },
                {
                    "field": "metrics",
                    "type": "VM_metrics ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "metrics associated with this VM"
                },
                {
                    "field": "name_description",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "a notes field containing human-readable description"
                },
                {
                    "field": "name_label",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "a human-readable name"
                },
                {
                    "field": "NVRAM",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "initial value for guest NVRAM (containing UEFI variables, etc). Cannot be changed while the VM is running"
                },
                {
                    "field": "order",
                    "type": "int",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "The point in the startup or shutdown sequence at which this VM will be started"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "additional configuration"
                },
                {
                    "field": "parent",
                    "type": "VM ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Ref pointing to the parent of this VM"
                },
                {
                    "field": "PCI_bus",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "<strong>Deprecated</strong>. PCI bus path for pass-through devices"
                },
                {
                    "field": "pending_guidances",
                    "type": "update_guidances set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The set of pending guidances after applying updates"
                },
                {
                    "field": "platform",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "platform-specific configuration"
                },
                {
                    "field": "power_state",
                    "type": "vm_power_state",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Current power state of the machine"
                },
                {
                    "field": "protection_policy",
                    "type": "VMPP ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "<strong>Deprecated</strong>. Ref pointing to a protection policy for this VM"
                },
                {
                    "field": "PV_args",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "kernel command-line arguments"
                },
                {
                    "field": "PV_bootloader",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "name of or path to bootloader"
                },
                {
                    "field": "PV_bootloader_args",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "miscellaneous arguments for the bootloader"
                },
                {
                    "field": "PV_kernel",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "path to the kernel"
                },
                {
                    "field": "PV_legacy_args",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "to make Zurich guests boot"
                },
                {
                    "field": "PV_ramdisk",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "path to the initrd"
                },
                {
                    "field": "recommendations",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "An XML specification of recommended values and ranges for properties of this VM"
                },
                {
                    "field": "reference_label",
                    "type": "string",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Textual reference to the template used to create a VM. This can be used by clients in need of an immutable reference to the template since the latter’s uuid and name_label may change, for example, after a package installation or upgrade."
                },
                {
                    "field": "requires_reboot",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Indicates whether a VM requires a reboot in order to update its configuration, e.g. its memory allocation."
                },
                {
                    "field": "resident_on",
                    "type": "host ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "the host the VM is currently resident on"
                },
                {
                    "field": "scheduled_to_be_resident_on",
                    "type": "host ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "the host on which the VM is due to be started/resumed/migrated. This acts as a memory reservation indicator"
                },
                {
                    "field": "shutdown_delay",
                    "type": "int",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "The delay to wait before proceeding to the next order in the shutdown sequence (seconds)"
                },
                {
                    "field": "snapshot_info",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Human-readable information concerning this snapshot"
                },
                {
                    "field": "snapshot_metadata",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Encoded information about the VM’s metadata this is a snapshot of"
                },
                {
                    "field": "snapshot_of",
                    "type": "VM ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Ref pointing to the VM this snapshot is of."
                },
                {
                    "field": "snapshot_schedule",
                    "type": "VMSS ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Ref pointing to a snapshot schedule for this VM"
                },
                {
                    "field": "snapshot_time",
                    "type": "datetime",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Date/time when this snapshot was created."
                },
                {
                    "field": "snapshots",
                    "type": "VM ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "List pointing to all the VM snapshots."
                },
                {
                    "field": "start_delay",
                    "type": "int",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "The delay to wait before proceeding to the next order in the startup sequence (seconds)"
                },
                {
                    "field": "suspend_SR",
                    "type": "SR ref",
                    "qualifier": "<em>RW</em>",
                    "desc": "The SR on which a suspend image is stored"
                },
                {
                    "field": "suspend_VDI",
                    "type": "VDI ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "The VDI that a suspend image is stored on. (Only has meaning if VM is currently suspended)"
                },
                {
                    "field": "tags",
                    "type": "string set",
                    "qualifier": "<em>RW</em>",
                    "desc": "user-specified tags for categorization purposes"
                },
                {
                    "field": "transportable_snapshot_id",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Transportable ID of the snapshot VM"
                },
                {
                    "field": "user_version",
                    "type": "int",
                    "qualifier": "<em>RW</em>",
                    "desc": "Creators of VMs and templates may store version information here."
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                },
                {
                    "field": "VBDs",
                    "type": "VBD ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "virtual block devices"
                },
                {
                    "field": "VCPUs_at_startup",
                    "type": "int",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Boot number of VCPUs"
                },
                {
                    "field": "VCPUs_max",
                    "type": "int",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Max number of VCPUs"
                },
                {
                    "field": "VCPUs_params",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "configuration parameters for the selected VCPU policy"
                },
                {
                    "field": "version",
                    "type": "int",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "The number of times this VM has been recovered"
                },
                {
                    "field": "VGPUs",
                    "type": "VGPU ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Virtual GPUs"
                },
                {
                    "field": "VIFs",
                    "type": "VIF ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "virtual network interfaces"
                },
                {
                    "field": "VTPMs",
                    "type": "VTPM ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "virtual TPMs"
                },
                {
                    "field": "VUSBs",
                    "type": "VUSB ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "vitual usb devices"
                },
                {
                    "field": "xenstore_data",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "data to be inserted into the xenstore tree (/local/domain/<domid>/vm-data) after the VM is created.</domid>"
                }
            ],
            "rpcs": [
                {
                    "name": "add_tags",
                    "status": "supported",
                    "desc": "Add the given value to the tags field of the given VM. If the value is already in that Set, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "add_to_blocked_operations",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the blocked_operations field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "vm_operations",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "add_to_hvm_boot_params",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the HVM/boot_params field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "add_to_nvram",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "The key"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "The value"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "add_to_other_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the other_config field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "add_to_platform",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the platform field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "add_to_vcpus_params",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the VCPUs/params field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "add_to_vcpus_params_live",
                    "status": "supported",
                    "desc": "Add the given key-value pair to VM.VCPUs_params, and apply that value on the running VM",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "The key"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "The value"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "add_to_xenstore_data",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the xenstore_data field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "assert_agile",
                    "status": "supported",
                    "desc": "Returns an error if the VM is not considered agile e.g. because it is tied to a resource local to a host",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "assert_can_be_recovered",
                    "status": "supported",
                    "desc": "Assert whether all SRs required to recover this VM are available.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM to recover"
                        },
                        {
                            "type": "session ref",
                            "name": "session_to",
                            "desc": "The session to which the VM is to be recovered."
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "VM_IS_PART_OF_AN_APPLIANCE",
                            "VM_REQUIRES_SR"
                        ]
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "assert_can_boot_here",
                    "status": "supported",
                    "desc": "Returns an error if the VM could not boot on this host for some reason",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "HOST_NOT_ENOUGH_FREE_MEMORY",
                            "HOST_NOT_ENOUGH_PCPUS",
                            "NETWORK_SRIOV_INSUFFICIENT_CAPACITY",
                            "HOST_NOT_LIVE",
                            "HOST_DISABLED",
                            "HOST_CANNOT_ATTACH_NETWORK",
                            "VM_HVM_REQUIRED",
                            "VM_REQUIRES_GPU",
                            "VM_REQUIRES_IOMMU",
                            "VM_REQUIRES_NETWORK",
                            "VM_REQUIRES_SR",
                            "VM_REQUIRES_VGPU",
                            "VM_HOST_INCOMPATIBLE_VERSION",
                            "VM_HOST_INCOMPATIBLE_VIRTUAL_HARDWARE_PLATFORM_VERSION",
                            "INVALID_VALUE",
                            "MEMORY_CONSTRAINT_VIOLATION",
                            "OPERATION_NOT_ALLOWED",
                            "VALUE_NOT_SUPPORTED",
                            "VM_INCOMPATIBLE_WITH_THIS_HOST"
                        ]
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "assert_can_migrate",
                    "status": "supported",
                    "desc": "Assert whether a VM can be migrated to the specified destination.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The VM"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "dest",
                            "desc": "The result of a VM.migrate_receive call."
                        },
                        {
                            "type": "bool",
                            "name": "live",
                            "desc": "Live migration"
                        },
                        {
                            "type": "(VDI ref -&gt; SR ref) map",
                            "name": "vdi_map",
                            "desc": "Map of source VDI to destination SR"
                        },
                        {
                            "type": "(VIF ref -&gt; network ref) map",
                            "name": "vif_map",
                            "desc": "Map of source VIF to destination network"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "options",
                            "desc": "Other parameters"
                        },
                        {
                            "type": "(VGPU ref -&gt; GPU_group ref) map",
                            "name": "vgpu_map",
                            "desc": "Map of source vGPU to destination GPU group"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "LICENCE_RESTRICTION"
                        ]
                    },
                    "minrole": "vm-power-admin"
                },
                {
                    "name": "assert_operation_valid",
                    "status": "supported",
                    "desc": "Check to see whether this operation is acceptable in the current state of the system, raising an error if the operation is invalid for some reason",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "vm_operations",
                            "name": "op",
                            "desc": "proposed operation"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "call_plugin",
                    "status": "supported",
                    "desc": "Call an API plugin on this vm",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The vm"
                        },
                        {
                            "type": "string",
                            "name": "plugin",
                            "desc": "The name of the plugin"
                        },
                        {
                            "type": "string",
                            "name": "fn",
                            "desc": "The name of the function within the plugin"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "args",
                            "desc": "Arguments for the function"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "Result from the plugin",
                        "errs": []
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "checkpoint",
                    "status": "supported",
                    "desc": "Checkpoints the specified VM, making a new VM. Checkpoint automatically exploits the capabilities of the underlying storage repository in which the VM’s disk images are stored (e.g. Copy on Write) and saves the memory image as well.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The VM to be checkpointed"
                        },
                        {
                            "type": "string",
                            "name": "new_name",
                            "desc": "The name of the checkpointed VM"
                        }
                    ],
                    "return": {
                        "type": "VM ref",
                        "desc": "The reference of the newly created VM.",
                        "errs": [
                            "VM_BAD_POWER_STATE",
                            "SR_FULL",
                            "OPERATION_NOT_ALLOWED",
                            "VM_CHECKPOINT_SUSPEND_FAILED",
                            "VM_CHECKPOINT_RESUME_FAILED"
                        ]
                    },
                    "minrole": "vm-power-admin"
                },
                {
                    "name": "clean_reboot",
                    "status": "supported",
                    "desc": "Attempt to cleanly shutdown the specified VM (Note: this may not be supported---e.g. if a guest agent is not installed). This can only be called when the specified VM is in the Running state.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The VM to shutdown"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "VM_BAD_POWER_STATE",
                            "OTHER_OPERATION_IN_PROGRESS",
                            "OPERATION_NOT_ALLOWED",
                            "VM_IS_TEMPLATE"
                        ]
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "clean_shutdown",
                    "status": "supported",
                    "desc": "Attempt to cleanly shutdown the specified VM. (Note: this may not be supported---e.g. if a guest agent is not installed). This can only be called when the specified VM is in the Running state.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The VM to shutdown"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "VM_BAD_POWER_STATE",
                            "OTHER_OPERATION_IN_PROGRESS",
                            "OPERATION_NOT_ALLOWED",
                            "VM_IS_TEMPLATE"
                        ]
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "clone",
                    "status": "supported",
                    "desc": "Clones the specified VM, making a new VM. Clone automatically exploits the capabilities of the underlying storage repository in which the VM’s disk images are stored (e.g. Copy on Write). This function can only be called when the VM is in the Halted State.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The VM to be cloned"
                        },
                        {
                            "type": "string",
                            "name": "new_name",
                            "desc": "The name of the cloned VM"
                        }
                    ],
                    "return": {
                        "type": "VM ref",
                        "desc": "The reference of the newly created VM.",
                        "errs": [
                            "VM_BAD_POWER_STATE",
                            "SR_FULL",
                            "OPERATION_NOT_ALLOWED",
                            "LICENCE_RESTRICTION"
                        ]
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "compute_memory_overhead",
                    "status": "supported",
                    "desc": "Computes the virtualization memory overhead of a VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The VM for which to compute the memory overhead"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "the virtualization memory overhead of the VM.",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "copy",
                    "status": "supported",
                    "desc": "Copied the specified VM, making a new VM. Unlike clone, copy does not exploits the capabilities of the underlying storage repository in which the VM’s disk images are stored. Instead, copy guarantees that the disk images of the newly created VM will be ‘full disks’ - i.e. not part of a CoW chain. This function can only be called when the VM is in the Halted State.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The VM to be copied"
                        },
                        {
                            "type": "string",
                            "name": "new_name",
                            "desc": "The name of the copied VM"
                        },
                        {
                            "type": "SR ref",
                            "name": "sr",
                            "desc": "An SR to copy all the VM’s disks into (if an invalid reference then it uses the existing SRs)"
                        }
                    ],
                    "return": {
                        "type": "VM ref",
                        "desc": "The reference of the newly created VM.",
                        "errs": [
                            "VM_BAD_POWER_STATE",
                            "SR_FULL",
                            "OPERATION_NOT_ALLOWED",
                            "LICENCE_RESTRICTION"
                        ]
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "copy_bios_strings",
                    "status": "supported",
                    "desc": "Copy the BIOS strings from the given host to this VM",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The VM to modify"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The host to copy the BIOS strings from"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "create",
                    "status": "supported",
                    "desc": "NOT RECOMMENDED! VM.clone or VM.copy (or VM.import) is a better choice in almost all situations. The standard way to obtain a new VM is to call VM.clone on a template VM, then call VM.provision on the new clone. Caution: if VM.create is used and then the new VM is attached to a virtual disc that has an operating system already installed, then there is no guarantee that the operating system will boot and run. Any software that calls VM.create on a future version of this API may fail or give unexpected results. For example this could happen if an additional parameter were added to VM.create. VM.create is intended only for use in the automatic creation of the system VM templates. It creates a new VM instance, and returns its handle.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM record",
                            "name": "args",
                            "desc": "All constructor arguments"
                        }
                    ],
                    "return": {
                        "type": "VM ref",
                        "desc": "reference to the newly created object",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "create_new_blob",
                    "status": "supported",
                    "desc": "Create a placeholder for a named binary blob of data that is associated with this VM",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The VM"
                        },
                        {
                            "type": "string",
                            "name": "name",
                            "desc": "The name associated with the blob"
                        },
                        {
                            "type": "string",
                            "name": "mime_type",
                            "desc": "The mime type for the data. Empty string translates to application/octet-stream"
                        },
                        {
                            "type": "bool",
                            "name": "public",
                            "desc": "True if the blob should be publicly available"
                        }
                    ],
                    "return": {
                        "type": "blob ref",
                        "desc": "The reference of the blob, needed for populating its data",
                        "errs": []
                    },
                    "minrole": "vm-power-admin"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "Destroy the specified VM. The VM is completely removed from the system. This function can only be called when the VM is in the Halted State.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "forget_data_source_archives",
                    "status": "supported",
                    "desc": "Forget the recorded statistics related to the specified data source",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        },
                        {
                            "type": "string",
                            "name": "data_source",
                            "desc": "The data source whose archives are to be forgotten"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "get_actions_after_crash",
                    "status": "supported",
                    "desc": "Get the actions/after_crash field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "on_crash_behaviour",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_actions_after_reboot",
                    "status": "supported",
                    "desc": "Get the actions/after_reboot field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "on_normal_exit",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_actions_after_shutdown",
                    "status": "supported",
                    "desc": "Get the actions/after_shutdown field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "on_normal_exit",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_actions_after_softreboot",
                    "status": "supported",
                    "desc": "Get the actions/after_softreboot field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "on_softreboot_behavior",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_affinity",
                    "status": "supported",
                    "desc": "Get the affinity field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the VMs known to the system.",
                    "args": [],
                    "return": {
                        "type": "VM ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of VM references to VM records for all VMs known to the system.",
                    "args": [],
                    "return": {
                        "type": "(VM ref -&gt; VM record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_allowed_operations",
                    "status": "supported",
                    "desc": "Get the allowed_operations field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "vm_operations set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_allowed_vbd_devices",
                    "status": "supported",
                    "desc": "Returns a list of the allowed values that a VBD device field can take",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The VM to query"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "The allowed values",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_allowed_vif_devices",
                    "status": "supported",
                    "desc": "Returns a list of the allowed values that a VIF device field can take",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The VM to query"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "The allowed values",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_appliance",
                    "status": "supported",
                    "desc": "Get the appliance field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VM_appliance ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_attached_pcis",
                    "status": "supported",
                    "desc": "Get the attached_PCIs field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "PCI ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_bios_strings",
                    "status": "supported",
                    "desc": "Get the bios_strings field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_blobs",
                    "status": "supported",
                    "desc": "Get the blobs field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; blob ref) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_blocked_operations",
                    "status": "supported",
                    "desc": "Get the blocked_operations field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(vm_operations -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_boot_record",
                    "status": "deprecated",
                    "desc": "Returns a record describing the VM’s dynamic state, initialised when the VM boots and updated to reflect runtime configuration changes e.g. CPU hotplug",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM whose boot-time state to return"
                        }
                    ],
                    "return": {
                        "type": "VM record",
                        "desc": "A record describing the VM",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_name_label",
                    "status": "supported",
                    "desc": "Get all the VM instances with the given label.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "label",
                            "desc": "label of object to return"
                        }
                    ],
                    "return": {
                        "type": "VM ref set",
                        "desc": "references to objects with matching names",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the VM instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "VM ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_children",
                    "status": "supported",
                    "desc": "Get the children field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VM ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_consoles",
                    "status": "supported",
                    "desc": "Get the consoles field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "console ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_cooperative",
                    "status": "deprecated",
                    "desc": "Return true if the VM is currently ‘co-operative’ i.e. is expected to reach a balloon target and actually has done",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "true if the VM is currently ‘co-operative’; false otherwise",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_crash_dumps",
                    "status": "supported",
                    "desc": "Get the crash_dumps field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "crashdump ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_current_operations",
                    "status": "supported",
                    "desc": "Get the current_operations field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; vm_operations) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_data_sources",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM to interrogate"
                        }
                    ],
                    "return": {
                        "type": "data_source record set",
                        "desc": "A set of data sources",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_domain_type",
                    "status": "supported",
                    "desc": "Get the domain_type field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "domain_type",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_domarch",
                    "status": "supported",
                    "desc": "Get the domarch field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_domid",
                    "status": "supported",
                    "desc": "Get the domid field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_generation_id",
                    "status": "supported",
                    "desc": "Get the generation_id field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_guest_metrics",
                    "status": "supported",
                    "desc": "Get the guest_metrics field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VM_guest_metrics ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_ha_always_run",
                    "status": "deprecated",
                    "desc": "Get the ha_always_run field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_ha_restart_priority",
                    "status": "supported",
                    "desc": "Get the ha_restart_priority field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_hardware_platform_version",
                    "status": "supported",
                    "desc": "Get the hardware_platform_version field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_has_vendor_device",
                    "status": "supported",
                    "desc": "Get the has_vendor_device field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_hvm_boot_params",
                    "status": "supported",
                    "desc": "Get the HVM/boot_params field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_hvm_boot_policy",
                    "status": "deprecated",
                    "desc": "Get the HVM/boot_policy field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_hvm_shadow_multiplier",
                    "status": "supported",
                    "desc": "Get the HVM/shadow_multiplier field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "float",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_is_a_snapshot",
                    "status": "supported",
                    "desc": "Get the is_a_snapshot field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_is_a_template",
                    "status": "supported",
                    "desc": "Get the is_a_template field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_is_control_domain",
                    "status": "supported",
                    "desc": "Get the is_control_domain field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_is_default_template",
                    "status": "supported",
                    "desc": "Get the is_default_template field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_is_snapshot_from_vmpp",
                    "status": "removed",
                    "desc": "Get the is_snapshot_from_vmpp field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_is_vmss_snapshot",
                    "status": "supported",
                    "desc": "Get the is_vmss_snapshot field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_last_boot_cpu_flags",
                    "status": "supported",
                    "desc": "Get the last_boot_CPU_flags field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_last_booted_record",
                    "status": "supported",
                    "desc": "Get the last_booted_record field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_memory_dynamic_max",
                    "status": "supported",
                    "desc": "Get the memory/dynamic_max field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_memory_dynamic_min",
                    "status": "supported",
                    "desc": "Get the memory/dynamic_min field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_memory_overhead",
                    "status": "supported",
                    "desc": "Get the memory/overhead field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_memory_static_max",
                    "status": "supported",
                    "desc": "Get the memory/static_max field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_memory_static_min",
                    "status": "supported",
                    "desc": "Get the memory/static_min field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_memory_target",
                    "status": "deprecated",
                    "desc": "Get the memory/target field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_metrics",
                    "status": "supported",
                    "desc": "Get the metrics field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VM_metrics ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_description",
                    "status": "supported",
                    "desc": "Get the name/description field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_label",
                    "status": "supported",
                    "desc": "Get the name/label field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_nvram",
                    "status": "supported",
                    "desc": "Get the NVRAM field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_order",
                    "status": "supported",
                    "desc": "Get the order field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_parent",
                    "status": "supported",
                    "desc": "Get the parent field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VM ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pci_bus",
                    "status": "deprecated",
                    "desc": "Get the PCI_bus field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pending_guidances",
                    "status": "supported",
                    "desc": "Get the pending_guidances field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "update_guidances set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_platform",
                    "status": "supported",
                    "desc": "Get the platform field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_possible_hosts",
                    "status": "supported",
                    "desc": "Return the list of hosts on which this VM may run.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The VM"
                        }
                    ],
                    "return": {
                        "type": "host ref set",
                        "desc": "The possible hosts",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_power_state",
                    "status": "supported",
                    "desc": "Get the power_state field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "vm_power_state",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_protection_policy",
                    "status": "deprecated",
                    "desc": "Get the protection_policy field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VMPP ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pv_args",
                    "status": "supported",
                    "desc": "Get the PV/args field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pv_bootloader",
                    "status": "supported",
                    "desc": "Get the PV/bootloader field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pv_bootloader_args",
                    "status": "supported",
                    "desc": "Get the PV/bootloader_args field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pv_kernel",
                    "status": "supported",
                    "desc": "Get the PV/kernel field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pv_legacy_args",
                    "status": "supported",
                    "desc": "Get the PV/legacy_args field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pv_ramdisk",
                    "status": "supported",
                    "desc": "Get the PV/ramdisk field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_recommendations",
                    "status": "supported",
                    "desc": "Get the recommendations field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VM record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_reference_label",
                    "status": "supported",
                    "desc": "Get the reference_label field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_requires_reboot",
                    "status": "supported",
                    "desc": "Get the requires_reboot field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_resident_on",
                    "status": "supported",
                    "desc": "Get the resident_on field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_scheduled_to_be_resident_on",
                    "status": "supported",
                    "desc": "Get the scheduled_to_be_resident_on field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "host ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_shutdown_delay",
                    "status": "supported",
                    "desc": "Get the shutdown_delay field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_snapshot_info",
                    "status": "supported",
                    "desc": "Get the snapshot_info field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_snapshot_metadata",
                    "status": "supported",
                    "desc": "Get the snapshot_metadata field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_snapshot_of",
                    "status": "supported",
                    "desc": "Get the snapshot_of field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VM ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_snapshot_schedule",
                    "status": "supported",
                    "desc": "Get the snapshot_schedule field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VMSS ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_snapshot_time",
                    "status": "supported",
                    "desc": "Get the snapshot_time field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "datetime",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_snapshots",
                    "status": "supported",
                    "desc": "Get the snapshots field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VM ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_srs_required_for_recovery",
                    "status": "supported",
                    "desc": "List all the SR’s that are required for the VM to be recovered",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM for which the SRs have to be recovered"
                        },
                        {
                            "type": "session ref",
                            "name": "session_to",
                            "desc": "The session to which the SRs of the VM have to be recovered."
                        }
                    ],
                    "return": {
                        "type": "SR ref set",
                        "desc": "refs for SRs required to recover the VM",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_start_delay",
                    "status": "supported",
                    "desc": "Get the start_delay field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_suspend_sr",
                    "status": "supported",
                    "desc": "Get the suspend_SR field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "SR ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_suspend_vdi",
                    "status": "supported",
                    "desc": "Get the suspend_VDI field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VDI ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_tags",
                    "status": "supported",
                    "desc": "Get the tags field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_transportable_snapshot_id",
                    "status": "supported",
                    "desc": "Get the transportable_snapshot_id field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_user_version",
                    "status": "supported",
                    "desc": "Get the user_version field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vbds",
                    "status": "supported",
                    "desc": "Get the VBDs field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VBD ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vcpus_at_startup",
                    "status": "supported",
                    "desc": "Get the VCPUs/at_startup field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vcpus_max",
                    "status": "supported",
                    "desc": "Get the VCPUs/max field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vcpus_params",
                    "status": "supported",
                    "desc": "Get the VCPUs/params field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_version",
                    "status": "supported",
                    "desc": "Get the version field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vgpus",
                    "status": "supported",
                    "desc": "Get the VGPUs field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VGPU ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vifs",
                    "status": "supported",
                    "desc": "Get the VIFs field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VIF ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vtpms",
                    "status": "supported",
                    "desc": "Get the VTPMs field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VTPM ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vusbs",
                    "status": "supported",
                    "desc": "Get the VUSBs field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VUSB ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_xenstore_data",
                    "status": "supported",
                    "desc": "Get the xenstore_data field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "hard_reboot",
                    "status": "supported",
                    "desc": "Stop executing the specified VM without attempting a clean shutdown and immediately restart the VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The VM to reboot"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "VM_BAD_POWER_STATE",
                            "OTHER_OPERATION_IN_PROGRESS",
                            "OPERATION_NOT_ALLOWED",
                            "VM_IS_TEMPLATE"
                        ]
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "hard_shutdown",
                    "status": "supported",
                    "desc": "Stop executing the specified VM without attempting a clean shutdown.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The VM to destroy"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "VM_BAD_POWER_STATE",
                            "OTHER_OPERATION_IN_PROGRESS",
                            "OPERATION_NOT_ALLOWED",
                            "VM_IS_TEMPLATE"
                        ]
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "import",
                    "status": "supported",
                    "desc": "Import an XVA from a URI",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "url",
                            "desc": "The URL of the XVA file"
                        },
                        {
                            "type": "SR ref",
                            "name": "sr",
                            "desc": "The destination SR for the disks"
                        },
                        {
                            "type": "bool",
                            "name": "full_restore",
                            "desc": "Perform a full restore"
                        },
                        {
                            "type": "bool",
                            "name": "force",
                            "desc": "Force the import"
                        }
                    ],
                    "return": {
                        "type": "VM ref set",
                        "desc": "Imported VM reference",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "import_convert",
                    "status": "supported",
                    "desc": "Import using a conversion service.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "type",
                            "desc": "Type of the conversion"
                        },
                        {
                            "type": "string",
                            "name": "username",
                            "desc": "Admin username on the host"
                        },
                        {
                            "type": "string",
                            "name": "password",
                            "desc": "Password on the host"
                        },
                        {
                            "type": "SR ref",
                            "name": "sr",
                            "desc": "The destination SR"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "remote_config",
                            "desc": "Remote configuration options"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "maximise_memory",
                    "status": "supported",
                    "desc": "Returns the maximum amount of guest memory which will fit, together with overheads, in the supplied amount of physical memory. If ‘exact’ is true then an exact calculation is performed using the VM’s current settings. If ‘exact’ is false then a more conservative approximation is used",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        },
                        {
                            "type": "int",
                            "name": "total",
                            "desc": "Total amount of physical RAM to fit within"
                        },
                        {
                            "type": "bool",
                            "name": "approximate",
                            "desc": "If false the limit is calculated with the guest’s current exact configuration. Otherwise a more approximate calculation is performed"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "The maximum possible static-max",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "migrate_send",
                    "status": "supported",
                    "desc": "Migrate the VM to another host. This can only be called when the specified VM is in the Running state.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The VM"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "dest",
                            "desc": "The result of a Host.migrate_receive call."
                        },
                        {
                            "type": "bool",
                            "name": "live",
                            "desc": "Live migration"
                        },
                        {
                            "type": "(VDI ref -&gt; SR ref) map",
                            "name": "vdi_map",
                            "desc": "Map of source VDI to destination SR"
                        },
                        {
                            "type": "(VIF ref -&gt; network ref) map",
                            "name": "vif_map",
                            "desc": "Map of source VIF to destination network"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "options",
                            "desc": "Other parameters"
                        },
                        {
                            "type": "(VGPU ref -&gt; GPU_group ref) map",
                            "name": "vgpu_map",
                            "desc": "Map of source vGPU to destination GPU group"
                        }
                    ],
                    "return": {
                        "type": "VM ref",
                        "desc": "The reference of the newly created VM in the destination pool",
                        "errs": [
                            "VM_BAD_POWER_STATE",
                            "LICENCE_RESTRICTION"
                        ]
                    },
                    "minrole": "vm-power-admin"
                },
                {
                    "name": "pause",
                    "status": "supported",
                    "desc": "Pause the specified VM. This can only be called when the specified VM is in the Running state.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The VM to pause"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "VM_BAD_POWER_STATE",
                            "OTHER_OPERATION_IN_PROGRESS",
                            "OPERATION_NOT_ALLOWED",
                            "VM_IS_TEMPLATE"
                        ]
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "pool_migrate",
                    "status": "supported",
                    "desc": "Migrate a VM to another Host.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The VM to migrate"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The target host"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "options",
                            "desc": "Extra configuration operations: force, live, copy, compress. Each is a boolean option, taking ‘true’ or ‘false’ as a value. Option ‘compress’ controls the use of stream compression during migration."
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "VM_BAD_POWER_STATE",
                            "OTHER_OPERATION_IN_PROGRESS",
                            "VM_IS_TEMPLATE",
                            "OPERATION_NOT_ALLOWED",
                            "VM_BAD_POWER_STATE"
                        ]
                    },
                    "minrole": "client-cert"
                },
                {
                    "name": "power_state_reset",
                    "status": "supported",
                    "desc": "Reset the power-state of the VM to halted in the database only. (Used to recover from slave failures in pooling scenarios by resetting the power-states of VMs running on dead slaves to halted.) This is a potentially dangerous operation; use with care.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The VM to reset"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "provision",
                    "status": "supported",
                    "desc": "Inspects the disk configuration contained within the VM’s other_config, creates VDIs and VBDs and then executes any applicable post-install script.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The VM to be provisioned"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "VM_BAD_POWER_STATE",
                            "SR_FULL",
                            "OPERATION_NOT_ALLOWED",
                            "LICENCE_RESTRICTION"
                        ]
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "query_data_source",
                    "status": "supported",
                    "desc": "Query the latest value of the specified data source",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        },
                        {
                            "type": "string",
                            "name": "data_source",
                            "desc": "The data source to query"
                        }
                    ],
                    "return": {
                        "type": "float",
                        "desc": "The latest value, averaged over the last 5 seconds",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "query_services",
                    "status": "supported",
                    "desc": "Query the system services advertised by this VM and register them. This can only be applied to a system domain.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "map of service type to name",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "record_data_source",
                    "status": "supported",
                    "desc": "Start recording the specified data source",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        },
                        {
                            "type": "string",
                            "name": "data_source",
                            "desc": "The data source to record"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "recover",
                    "status": "supported",
                    "desc": "Recover the VM",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM to recover"
                        },
                        {
                            "type": "session ref",
                            "name": "session_to",
                            "desc": "The session to which the VM is to be recovered."
                        },
                        {
                            "type": "bool",
                            "name": "force",
                            "desc": "Whether the VM should replace newer versions of itself."
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "remove_from_blocked_operations",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the blocked_operations field of the given VM. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "vm_operations",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "remove_from_hvm_boot_params",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the HVM/boot_params field of the given VM. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "remove_from_nvram",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "The key"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given VM. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "remove_from_platform",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the platform field of the given VM. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "remove_from_vcpus_params",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the VCPUs/params field of the given VM. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "remove_from_xenstore_data",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the xenstore_data field of the given VM. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "remove_tags",
                    "status": "supported",
                    "desc": "Remove the given value from the tags field of the given VM. If the value is not in that Set, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "restart_device_models",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "VM_BAD_POWER_STATE",
                            "OTHER_OPERATION_IN_PROGRESS",
                            "VM_IS_TEMPLATE",
                            "OPERATION_NOT_ALLOWED",
                            "VM_BAD_POWER_STATE"
                        ]
                    },
                    "minrole": "client-cert"
                },
                {
                    "name": "resume",
                    "status": "supported",
                    "desc": "Awaken the specified VM and resume it. This can only be called when the specified VM is in the Suspended state.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The VM to resume"
                        },
                        {
                            "type": "bool",
                            "name": "start_paused",
                            "desc": "Resume VM in paused state if set to true."
                        },
                        {
                            "type": "bool",
                            "name": "force",
                            "desc": "Attempt to force the VM to resume. If this flag is false then the VM may fail pre-resume safety checks (e.g. if the CPU the VM was running on looks substantially different to the current one)"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "VM_BAD_POWER_STATE",
                            "OPERATION_NOT_ALLOWED",
                            "VM_IS_TEMPLATE"
                        ]
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "resume_on",
                    "status": "supported",
                    "desc": "Awaken the specified VM and resume it on a particular Host. This can only be called when the specified VM is in the Suspended state.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The VM to resume"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The Host on which to resume the VM"
                        },
                        {
                            "type": "bool",
                            "name": "start_paused",
                            "desc": "Resume VM in paused state if set to true."
                        },
                        {
                            "type": "bool",
                            "name": "force",
                            "desc": "Attempt to force the VM to resume. If this flag is false then the VM may fail pre-resume safety checks (e.g. if the CPU the VM was running on looks substantially different to the current one)"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "VM_BAD_POWER_STATE",
                            "OPERATION_NOT_ALLOWED",
                            "VM_IS_TEMPLATE"
                        ]
                    },
                    "minrole": "client-cert"
                },
                {
                    "name": "retrieve_wlb_recommendations",
                    "status": "supported",
                    "desc": "Returns mapping of hosts to ratings, indicating the suitability of starting the VM at that location according to wlb. Rating is replaced with an error if the VM cannot boot there.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The VM"
                        }
                    ],
                    "return": {
                        "type": "(host ref -&gt; string set) map",
                        "desc": "The potential hosts and their corresponding recommendations or errors",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "revert",
                    "status": "supported",
                    "desc": "Reverts the specified VM to a previous state.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "snapshot",
                            "desc": "The snapshotted state that we revert to"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "VM_BAD_POWER_STATE",
                            "OPERATION_NOT_ALLOWED",
                            "SR_FULL",
                            "VM_REVERT_FAILED"
                        ]
                    },
                    "minrole": "vm-power-admin"
                },
                {
                    "name": "send_sysrq",
                    "status": "supported",
                    "desc": "Send the given key as a sysrq to this VM. The key is specified as a single character (a String of length 1). This can only be called when the specified VM is in the Running state.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The VM"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "The key to send"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "VM_BAD_POWER_STATE"
                        ]
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "send_trigger",
                    "status": "supported",
                    "desc": "Send the named trigger to this VM. This can only be called when the specified VM is in the Running state.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The VM"
                        },
                        {
                            "type": "string",
                            "name": "trigger",
                            "desc": "The trigger to send"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "VM_BAD_POWER_STATE"
                        ]
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "set_actions_after_crash",
                    "status": "supported",
                    "desc": "Sets the actions_after_crash parameter",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM to set"
                        },
                        {
                            "type": "on_crash_behaviour",
                            "name": "value",
                            "desc": "The new value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_actions_after_reboot",
                    "status": "supported",
                    "desc": "Set the actions/after_reboot field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "on_normal_exit",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_actions_after_shutdown",
                    "status": "supported",
                    "desc": "Set the actions/after_shutdown field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "on_normal_exit",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_actions_after_softreboot",
                    "status": "supported",
                    "desc": "Set the actions/after_softreboot field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "on_softreboot_behavior",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_affinity",
                    "status": "supported",
                    "desc": "Set the affinity field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "host ref",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-power-admin"
                },
                {
                    "name": "set_appliance",
                    "status": "supported",
                    "desc": "Assign this VM to an appliance.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM to assign to an appliance."
                        },
                        {
                            "type": "VM_appliance ref",
                            "name": "value",
                            "desc": "The appliance to which this VM should be assigned."
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_bios_strings",
                    "status": "supported",
                    "desc": "Set custom BIOS strings to this VM. VM will be given a default set of BIOS strings, only some of which can be overridden by the supplied values. Allowed keys are: ‘bios-vendor’, ‘bios-version’, ‘system-manufacturer’, ‘system-product-name’, ‘system-version’, ‘system-serial-number’, ‘enclosure-asset-tag’, ‘baseboard-manufacturer’, ‘baseboard-product-name’, ‘baseboard-version’, ‘baseboard-serial-number’, ‘baseboard-asset-tag’, ‘baseboard-location-in-chassis’, ‘enclosure-asset-tag’",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM to modify"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "The custom BIOS strings as a list of key-value pairs"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "VM_BIOS_STRINGS_ALREADY_SET",
                            "INVALID_VALUE"
                        ]
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_blocked_operations",
                    "status": "supported",
                    "desc": "Set the blocked_operations field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(vm_operations -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_domain_type",
                    "status": "supported",
                    "desc": "Set the VM.domain_type field of the given VM, which will take effect when it is next started",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        },
                        {
                            "type": "domain_type",
                            "name": "value",
                            "desc": "The new domain type"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_ha_always_run",
                    "status": "deprecated",
                    "desc": "Set the value of the ha_always_run",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        },
                        {
                            "type": "bool",
                            "name": "value",
                            "desc": "The value"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_ha_restart_priority",
                    "status": "supported",
                    "desc": "Set the value of the ha_restart_priority field",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "The value"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_hardware_platform_version",
                    "status": "supported",
                    "desc": "Set the hardware_platform_version field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "int",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_has_vendor_device",
                    "status": "supported",
                    "desc": "Controls whether, when the VM starts in HVM mode, its virtual hardware will include the emulated PCI device for which drivers may be available through Windows Update. Usually this should never be changed on a VM on which Windows has been installed: changing it on such a VM is likely to lead to a crash on next start.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM on which to set this flag"
                        },
                        {
                            "type": "bool",
                            "name": "value",
                            "desc": "True to provide the vendor PCI device."
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_hvm_boot_params",
                    "status": "supported",
                    "desc": "Set the HVM/boot_params field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_hvm_boot_policy",
                    "status": "deprecated",
                    "desc": "Set the VM.HVM_boot_policy field of the given VM, which will take effect when it is next started",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "The new HVM boot policy"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_hvm_shadow_multiplier",
                    "status": "supported",
                    "desc": "Set the shadow memory multiplier on a halted VM",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        },
                        {
                            "type": "float",
                            "name": "value",
                            "desc": "The new shadow memory multiplier to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-power-admin"
                },
                {
                    "name": "set_is_a_template",
                    "status": "supported",
                    "desc": "Set the is_a_template field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "bool",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_memory",
                    "status": "supported",
                    "desc": "Set the memory allocation of this VM. Sets all of memory_static_max, memory_dynamic_min, and memory_dynamic_max to the given value, and leaves memory_static_min untouched.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        },
                        {
                            "type": "int",
                            "name": "value",
                            "desc": "The new memory allocation (bytes)."
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-power-admin"
                },
                {
                    "name": "set_memory_dynamic_max",
                    "status": "supported",
                    "desc": "Set the value of the memory_dynamic_max field",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM to modify"
                        },
                        {
                            "type": "int",
                            "name": "value",
                            "desc": "The new value of memory_dynamic_max"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-power-admin"
                },
                {
                    "name": "set_memory_dynamic_min",
                    "status": "supported",
                    "desc": "Set the value of the memory_dynamic_min field",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM to modify"
                        },
                        {
                            "type": "int",
                            "name": "value",
                            "desc": "The new value of memory_dynamic_min"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-power-admin"
                },
                {
                    "name": "set_memory_dynamic_range",
                    "status": "supported",
                    "desc": "Set the minimum and maximum amounts of physical memory the VM is allowed to use.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        },
                        {
                            "type": "int",
                            "name": "min",
                            "desc": "The new minimum value"
                        },
                        {
                            "type": "int",
                            "name": "max",
                            "desc": "The new maximum value"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-power-admin"
                },
                {
                    "name": "set_memory_limits",
                    "status": "supported",
                    "desc": "Set the memory limits of this VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        },
                        {
                            "type": "int",
                            "name": "static_min",
                            "desc": "The new value of memory_static_min."
                        },
                        {
                            "type": "int",
                            "name": "static_max",
                            "desc": "The new value of memory_static_max."
                        },
                        {
                            "type": "int",
                            "name": "dynamic_min",
                            "desc": "The new value of memory_dynamic_min."
                        },
                        {
                            "type": "int",
                            "name": "dynamic_max",
                            "desc": "The new value of memory_dynamic_max."
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-power-admin"
                },
                {
                    "name": "set_memory_static_max",
                    "status": "supported",
                    "desc": "Set the value of the memory_static_max field",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM to modify"
                        },
                        {
                            "type": "int",
                            "name": "value",
                            "desc": "The new value of memory_static_max"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "HA_OPERATION_WOULD_BREAK_FAILOVER_PLAN"
                        ]
                    },
                    "minrole": "vm-power-admin"
                },
                {
                    "name": "set_memory_static_min",
                    "status": "supported",
                    "desc": "Set the value of the memory_static_min field",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM to modify"
                        },
                        {
                            "type": "int",
                            "name": "value",
                            "desc": "The new value of memory_static_min"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-power-admin"
                },
                {
                    "name": "set_memory_static_range",
                    "status": "supported",
                    "desc": "Set the static (ie boot-time) range of virtual memory that the VM is allowed to use.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        },
                        {
                            "type": "int",
                            "name": "min",
                            "desc": "The new minimum value"
                        },
                        {
                            "type": "int",
                            "name": "max",
                            "desc": "The new maximum value"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-power-admin"
                },
                {
                    "name": "set_memory_target_live",
                    "status": "deprecated",
                    "desc": "Set the memory target for a running VM",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        },
                        {
                            "type": "int",
                            "name": "target",
                            "desc": "The target in bytes"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-power-admin"
                },
                {
                    "name": "set_name_description",
                    "status": "supported",
                    "desc": "Set the name/description field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_name_label",
                    "status": "supported",
                    "desc": "Set the name/label field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_nvram",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "The value"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_order",
                    "status": "supported",
                    "desc": "Set this VM’s boot order",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        },
                        {
                            "type": "int",
                            "name": "value",
                            "desc": "This VM’s boot order"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_pci_bus",
                    "status": "deprecated",
                    "desc": "Set the PCI_bus field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_platform",
                    "status": "supported",
                    "desc": "Set the platform field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_protection_policy",
                    "status": "removed",
                    "desc": "Set the value of the protection_policy field",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "value",
                            "desc": "The value"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_pv_args",
                    "status": "supported",
                    "desc": "Set the PV/args field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_pv_bootloader",
                    "status": "supported",
                    "desc": "Set the PV/bootloader field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_pv_bootloader_args",
                    "status": "supported",
                    "desc": "Set the PV/bootloader_args field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_pv_kernel",
                    "status": "supported",
                    "desc": "Set the PV/kernel field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_pv_legacy_args",
                    "status": "supported",
                    "desc": "Set the PV/legacy_args field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_pv_ramdisk",
                    "status": "supported",
                    "desc": "Set the PV/ramdisk field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_recommendations",
                    "status": "supported",
                    "desc": "Set the recommendations field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_shadow_multiplier_live",
                    "status": "supported",
                    "desc": "Set the shadow memory multiplier on a running VM",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        },
                        {
                            "type": "float",
                            "name": "multiplier",
                            "desc": "The new shadow memory multiplier to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-power-admin"
                },
                {
                    "name": "set_shutdown_delay",
                    "status": "supported",
                    "desc": "Set this VM’s shutdown delay in seconds",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        },
                        {
                            "type": "int",
                            "name": "value",
                            "desc": "This VM’s shutdown delay in seconds"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_snapshot_schedule",
                    "status": "supported",
                    "desc": "Set the value of the snapshot schedule field",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        },
                        {
                            "type": "VMSS ref",
                            "name": "value",
                            "desc": "The value"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_start_delay",
                    "status": "supported",
                    "desc": "Set this VM’s start delay in seconds",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        },
                        {
                            "type": "int",
                            "name": "value",
                            "desc": "This VM’s start delay in seconds"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_suspend_sr",
                    "status": "supported",
                    "desc": "Set the suspend_SR field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "SR ref",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_suspend_vdi",
                    "status": "supported",
                    "desc": "Set this VM’s suspend VDI, which must be indentical to its current one",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        },
                        {
                            "type": "VDI ref",
                            "name": "value",
                            "desc": "The suspend VDI uuid"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_tags",
                    "status": "supported",
                    "desc": "Set the tags field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string set",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "set_user_version",
                    "status": "supported",
                    "desc": "Set the user_version field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "int",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_vcpus_at_startup",
                    "status": "supported",
                    "desc": "Set the number of startup VCPUs for a halted VM",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        },
                        {
                            "type": "int",
                            "name": "value",
                            "desc": "The new maximum number of VCPUs"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_vcpus_max",
                    "status": "supported",
                    "desc": "Set the maximum number of VCPUs for a halted VM",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        },
                        {
                            "type": "int",
                            "name": "value",
                            "desc": "The new maximum number of VCPUs"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_vcpus_number_live",
                    "status": "supported",
                    "desc": "Set the number of VCPUs for a running VM",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        },
                        {
                            "type": "int",
                            "name": "nvcpu",
                            "desc": "The number of VCPUs"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "OPERATION_NOT_ALLOWED",
                            "LICENCE_RESTRICTION"
                        ]
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_vcpus_params",
                    "status": "supported",
                    "desc": "Set the VCPUs/params field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_xenstore_data",
                    "status": "supported",
                    "desc": "Set the xenstore_data field of the given VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "shutdown",
                    "status": "supported",
                    "desc": "Attempts to first clean shutdown a VM and if it should fail then perform a hard shutdown on it.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The VM to shutdown"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "VM_BAD_POWER_STATE",
                            "OTHER_OPERATION_IN_PROGRESS",
                            "OPERATION_NOT_ALLOWED",
                            "VM_IS_TEMPLATE"
                        ]
                    },
                    "minrole": "client-cert"
                },
                {
                    "name": "snapshot",
                    "status": "supported",
                    "desc": "Snapshots the specified VM, making a new VM. Snapshot automatically exploits the capabilities of the underlying storage repository in which the VM’s disk images are stored (e.g. Copy on Write).",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The VM to be snapshotted"
                        },
                        {
                            "type": "string",
                            "name": "new_name",
                            "desc": "The name of the snapshotted VM"
                        },
                        {
                            "type": "VDI ref set",
                            "name": "ignore_vdis",
                            "desc": "A list of VDIs to ignore for the snapshot"
                        }
                    ],
                    "return": {
                        "type": "VM ref",
                        "desc": "The reference of the newly created VM.",
                        "errs": [
                            "VM_BAD_POWER_STATE",
                            "SR_FULL",
                            "OPERATION_NOT_ALLOWED"
                        ]
                    },
                    "minrole": "vm-power-admin"
                },
                {
                    "name": "snapshot_with_quiesce",
                    "status": "removed",
                    "desc": "Snapshots the specified VM with quiesce, making a new VM. Snapshot automatically exploits the capabilities of the underlying storage repository in which the VM’s disk images are stored (e.g. Copy on Write).",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The VM to be snapshotted"
                        },
                        {
                            "type": "string",
                            "name": "new_name",
                            "desc": "The name of the snapshotted VM"
                        }
                    ],
                    "return": {
                        "type": "VM ref",
                        "desc": "The reference of the newly created VM.",
                        "errs": [
                            "VM_BAD_POWER_STATE",
                            "SR_FULL",
                            "OPERATION_NOT_ALLOWED",
                            "VM_SNAPSHOT_WITH_QUIESCE_FAILED",
                            "VM_SNAPSHOT_WITH_QUIESCE_TIMEOUT",
                            "VM_SNAPSHOT_WITH_QUIESCE_PLUGIN_DEOS_NOT_RESPOND",
                            "VM_SNAPSHOT_WITH_QUIESCE_NOT_SUPPORTED"
                        ]
                    },
                    "minrole": "vm-power-admin"
                },
                {
                    "name": "start",
                    "status": "supported",
                    "desc": "Start the specified VM. This function can only be called with the VM is in the Halted State.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The VM to start"
                        },
                        {
                            "type": "bool",
                            "name": "start_paused",
                            "desc": "Instantiate VM in paused state if set to true."
                        },
                        {
                            "type": "bool",
                            "name": "force",
                            "desc": "Attempt to force the VM to start. If this flag is false then the VM may fail pre-boot safety checks (e.g. if the CPU the VM last booted on looks substantially different to the current one)"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "VM_BAD_POWER_STATE",
                            "VM_HVM_REQUIRED",
                            "VM_IS_TEMPLATE",
                            "OTHER_OPERATION_IN_PROGRESS",
                            "OPERATION_NOT_ALLOWED",
                            "BOOTLOADER_FAILED",
                            "UNKNOWN_BOOTLOADER",
                            "NO_HOSTS_AVAILABLE",
                            "LICENCE_RESTRICTION"
                        ]
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "start_on",
                    "status": "supported",
                    "desc": "Start the specified VM on a particular host. This function can only be called with the VM is in the Halted State.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The VM to start"
                        },
                        {
                            "type": "host ref",
                            "name": "host",
                            "desc": "The Host on which to start the VM"
                        },
                        {
                            "type": "bool",
                            "name": "start_paused",
                            "desc": "Instantiate VM in paused state if set to true."
                        },
                        {
                            "type": "bool",
                            "name": "force",
                            "desc": "Attempt to force the VM to start. If this flag is false then the VM may fail pre-boot safety checks (e.g. if the CPU the VM last booted on looks substantially different to the current one)"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "VM_BAD_POWER_STATE",
                            "VM_IS_TEMPLATE",
                            "OTHER_OPERATION_IN_PROGRESS",
                            "OPERATION_NOT_ALLOWED",
                            "BOOTLOADER_FAILED",
                            "UNKNOWN_BOOTLOADER"
                        ]
                    },
                    "minrole": "client-cert"
                },
                {
                    "name": "suspend",
                    "status": "supported",
                    "desc": "Suspend the specified VM to disk. This can only be called when the specified VM is in the Running state.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The VM to suspend"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "VM_BAD_POWER_STATE",
                            "OTHER_OPERATION_IN_PROGRESS",
                            "OPERATION_NOT_ALLOWED",
                            "VM_IS_TEMPLATE"
                        ]
                    },
                    "minrole": "client-cert"
                },
                {
                    "name": "unpause",
                    "status": "supported",
                    "desc": "Resume the specified VM. This can only be called when the specified VM is in the Paused state.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vm",
                            "desc": "The VM to unpause"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "VM_BAD_POWER_STATE",
                            "OPERATION_NOT_ALLOWED",
                            "VM_IS_TEMPLATE"
                        ]
                    },
                    "minrole": "vm-operator"
                },
                {
                    "name": "update_allowed_operations",
                    "status": "supported",
                    "desc": "Recomputes the list of acceptable operations",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "wait_memory_target_live",
                    "status": "deprecated",
                    "desc": "Wait for a running VM to reach its current memory target",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "self",
                            "desc": "The VM"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "read-only"
                }
            ]
        },
        {
            "name": "vm_appliance",
            "state": "supported",
            "desc": "VM appliance",
            "fields": [
                {
                    "field": "allowed_operations",
                    "type": "vm_appliance_operation set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client."
                },
                {
                    "field": "current_operations",
                    "type": "(string -&gt; vm_appliance_operation) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task."
                },
                {
                    "field": "name_description",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "a notes field containing human-readable description"
                },
                {
                    "field": "name_label",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "a human-readable name"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                },
                {
                    "field": "VMs",
                    "type": "VM ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "all VMs in this appliance"
                }
            ],
            "rpcs": [
                {
                    "name": "assert_can_be_recovered",
                    "status": "supported",
                    "desc": "Assert whether all SRs required to recover this VM appliance are available.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_appliance ref",
                            "name": "self",
                            "desc": "The VM appliance to recover"
                        },
                        {
                            "type": "session ref",
                            "name": "session_to",
                            "desc": "The session to which the VM appliance is to be recovered."
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "VM_REQUIRES_SR"
                        ]
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "clean_shutdown",
                    "status": "supported",
                    "desc": "Perform a clean shutdown of all the VMs in the appliance",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_appliance ref",
                            "name": "self",
                            "desc": "The VM appliance"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "OPERATION_PARTIALLY_FAILED"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "create",
                    "status": "supported",
                    "desc": "Create a new VM_appliance instance, and return its handle.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_appliance record",
                            "name": "args",
                            "desc": "All constructor arguments"
                        }
                    ],
                    "return": {
                        "type": "VM_appliance ref",
                        "desc": "reference to the newly created object",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "Destroy the specified VM_appliance instance.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_appliance ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the VM_appliances known to the system.",
                    "args": [],
                    "return": {
                        "type": "VM_appliance ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of VM_appliance references to VM_appliance records for all VM_appliances known to the system.",
                    "args": [],
                    "return": {
                        "type": "(VM_appliance ref -&gt; VM_appliance record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_allowed_operations",
                    "status": "supported",
                    "desc": "Get the allowed_operations field of the given VM_appliance.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_appliance ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "vm_appliance_operation set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_name_label",
                    "status": "supported",
                    "desc": "Get all the VM_appliance instances with the given label.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "label",
                            "desc": "label of object to return"
                        }
                    ],
                    "return": {
                        "type": "VM_appliance ref set",
                        "desc": "references to objects with matching names",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the VM_appliance instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "VM_appliance ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_current_operations",
                    "status": "supported",
                    "desc": "Get the current_operations field of the given VM_appliance.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_appliance ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; vm_appliance_operation) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_description",
                    "status": "supported",
                    "desc": "Get the name/description field of the given VM_appliance.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_appliance ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_label",
                    "status": "supported",
                    "desc": "Get the name/label field of the given VM_appliance.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_appliance ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given VM_appliance.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_appliance ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VM_appliance record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_srs_required_for_recovery",
                    "status": "supported",
                    "desc": "Get the list of SRs required by the VM appliance to recover.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_appliance ref",
                            "name": "self",
                            "desc": "The VM appliance for which the required list of SRs has to be recovered."
                        },
                        {
                            "type": "session ref",
                            "name": "session_to",
                            "desc": "The session to which the list of SRs have to be recovered ."
                        }
                    ],
                    "return": {
                        "type": "SR ref set",
                        "desc": "refs for SRs required to recover the VM",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given VM_appliance.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_appliance ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vms",
                    "status": "supported",
                    "desc": "Get the VMs field of the given VM_appliance.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_appliance ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VM ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "hard_shutdown",
                    "status": "supported",
                    "desc": "Perform a hard shutdown of all the VMs in the appliance",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_appliance ref",
                            "name": "self",
                            "desc": "The VM appliance"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "OPERATION_PARTIALLY_FAILED"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "recover",
                    "status": "supported",
                    "desc": "Recover the VM appliance",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_appliance ref",
                            "name": "self",
                            "desc": "The VM appliance to recover"
                        },
                        {
                            "type": "session ref",
                            "name": "session_to",
                            "desc": "The session to which the VM appliance is to be recovered."
                        },
                        {
                            "type": "bool",
                            "name": "force",
                            "desc": "Whether the VMs should replace newer versions of themselves."
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "VM_REQUIRES_SR"
                        ]
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "set_name_description",
                    "status": "supported",
                    "desc": "Set the name/description field of the given VM_appliance.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_appliance ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_name_label",
                    "status": "supported",
                    "desc": "Set the name/label field of the given VM_appliance.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_appliance ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "shutdown",
                    "status": "supported",
                    "desc": "For each VM in the appliance, try to shut it down cleanly. If this fails, perform a hard shutdown of the VM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_appliance ref",
                            "name": "self",
                            "desc": "The VM appliance"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "OPERATION_PARTIALLY_FAILED"
                        ]
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "start",
                    "status": "supported",
                    "desc": "Start all VMs in the appliance",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_appliance ref",
                            "name": "self",
                            "desc": "The VM appliance"
                        },
                        {
                            "type": "bool",
                            "name": "paused",
                            "desc": "Instantiate all VMs belonging to this appliance in paused state if set to true."
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": [
                            "OPERATION_PARTIALLY_FAILED"
                        ]
                    },
                    "minrole": "pool-operator"
                }
            ]
        },
        {
            "name": "vm_guest_metrics",
            "state": "supported",
            "desc": "The metrics reported by the guest (as opposed to inferred from outside)",
            "fields": [
                {
                    "field": "can_use_hotplug_vbd",
                    "type": "tristate_type",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The guest’s statement of whether it supports VBD hotplug, i.e. whether it is capable of responding immediately to instantiation of a new VBD by bringing online a new PV block device. If the guest states that it is not capable, then the VBD plug and unplug operations will not be allowed while the guest is running."
                },
                {
                    "field": "can_use_hotplug_vif",
                    "type": "tristate_type",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The guest’s statement of whether it supports VIF hotplug, i.e. whether it is capable of responding immediately to instantiation of a new VIF by bringing online a new PV network device. If the guest states that it is not capable, then the VIF plug and unplug operations will not be allowed while the guest is running."
                },
                {
                    "field": "disks",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Removed</strong>. This field exists but has no data."
                },
                {
                    "field": "last_updated",
                    "type": "datetime",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Time at which this information was last updated"
                },
                {
                    "field": "live",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "True if the guest is sending heartbeat messages via the guest agent"
                },
                {
                    "field": "memory",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Removed</strong>. This field exists but has no data. Use the memory and memory_internal_free RRD data-sources instead."
                },
                {
                    "field": "networks",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "network configuration"
                },
                {
                    "field": "os_version",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "version of the OS"
                },
                {
                    "field": "other",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "anything else"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "additional configuration"
                },
                {
                    "field": "PV_drivers_detected",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "At least one of the guest’s devices has successfully connected to the backend."
                },
                {
                    "field": "PV_drivers_up_to_date",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Deprecated</strong>. Logically equivalent to PV_drivers_detected"
                },
                {
                    "field": "PV_drivers_version",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "version of the PV drivers"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_other_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the other_config field of the given VM_guest_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_guest_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the VM_guest_metrics instances known to the system.",
                    "args": [],
                    "return": {
                        "type": "VM_guest_metrics ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of VM_guest_metrics references to VM_guest_metrics records for all VM_guest_metrics instances known to the system.",
                    "args": [],
                    "return": {
                        "type": "(VM_guest_metrics ref -&gt; VM_guest_metrics record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the VM_guest_metrics instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "VM_guest_metrics ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_can_use_hotplug_vbd",
                    "status": "supported",
                    "desc": "Get the can_use_hotplug_vbd field of the given VM_guest_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_guest_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "tristate_type",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_can_use_hotplug_vif",
                    "status": "supported",
                    "desc": "Get the can_use_hotplug_vif field of the given VM_guest_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_guest_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "tristate_type",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_disks",
                    "status": "removed",
                    "desc": "Get the disks field of the given VM_guest_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_guest_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_last_updated",
                    "status": "supported",
                    "desc": "Get the last_updated field of the given VM_guest_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_guest_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "datetime",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_live",
                    "status": "supported",
                    "desc": "Get the live field of the given VM_guest_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_guest_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_memory",
                    "status": "removed",
                    "desc": "Get the memory field of the given VM_guest_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_guest_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_networks",
                    "status": "supported",
                    "desc": "Get the networks field of the given VM_guest_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_guest_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_os_version",
                    "status": "supported",
                    "desc": "Get the os_version field of the given VM_guest_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_guest_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other",
                    "status": "supported",
                    "desc": "Get the other field of the given VM_guest_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_guest_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given VM_guest_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_guest_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pv_drivers_detected",
                    "status": "supported",
                    "desc": "Get the PV_drivers_detected field of the given VM_guest_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_guest_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pv_drivers_up_to_date",
                    "status": "deprecated",
                    "desc": "Get the PV_drivers_up_to_date field of the given VM_guest_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_guest_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_pv_drivers_version",
                    "status": "supported",
                    "desc": "Get the PV_drivers_version field of the given VM_guest_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_guest_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given VM_guest_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_guest_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VM_guest_metrics record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given VM_guest_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_guest_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given VM_guest_metrics. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_guest_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given VM_guest_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_guest_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                }
            ]
        },
        {
            "name": "vm_metrics",
            "state": "supported",
            "desc": "The metrics associated with a VM",
            "fields": [
                {
                    "field": "current_domain_type",
                    "type": "domain_type",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The current domain type of the VM (for running,suspended, or paused VMs). The last-known domain type for halted VMs."
                },
                {
                    "field": "hvm",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "hardware virtual machine"
                },
                {
                    "field": "install_time",
                    "type": "datetime",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Time at which the VM was installed"
                },
                {
                    "field": "last_updated",
                    "type": "datetime",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Time at which this information was last updated"
                },
                {
                    "field": "memory_actual",
                    "type": "int",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Guest’s actual memory (bytes)"
                },
                {
                    "field": "nested_virt",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "VM supports nested virtualisation"
                },
                {
                    "field": "nomigrate",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "VM is immobile and can’t migrate between hosts"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "additional configuration"
                },
                {
                    "field": "start_time",
                    "type": "datetime",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Time at which this VM was last booted"
                },
                {
                    "field": "state",
                    "type": "string set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The state of the guest, eg blocked, dying etc"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                },
                {
                    "field": "VCPUs_CPU",
                    "type": "(int -&gt; int) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "VCPU to PCPU map"
                },
                {
                    "field": "VCPUs_flags",
                    "type": "(int -&gt; string set) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "CPU flags (blocked,online,running)"
                },
                {
                    "field": "VCPUs_number",
                    "type": "int",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Current number of VCPUs"
                },
                {
                    "field": "VCPUs_params",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The live equivalent to VM.VCPUs_params"
                },
                {
                    "field": "VCPUs_utilisation",
                    "type": "(int -&gt; float) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Removed</strong>. Utilisation for all of guest’s current VCPUs"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_other_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the other_config field of the given VM_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the VM_metrics instances known to the system.",
                    "args": [],
                    "return": {
                        "type": "VM_metrics ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of VM_metrics references to VM_metrics records for all VM_metrics instances known to the system.",
                    "args": [],
                    "return": {
                        "type": "(VM_metrics ref -&gt; VM_metrics record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the VM_metrics instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "VM_metrics ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_current_domain_type",
                    "status": "supported",
                    "desc": "Get the current_domain_type field of the given VM_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "domain_type",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_hvm",
                    "status": "supported",
                    "desc": "Get the hvm field of the given VM_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_install_time",
                    "status": "supported",
                    "desc": "Get the install_time field of the given VM_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "datetime",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_last_updated",
                    "status": "supported",
                    "desc": "Get the last_updated field of the given VM_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "datetime",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_memory_actual",
                    "status": "supported",
                    "desc": "Get the memory/actual field of the given VM_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_nested_virt",
                    "status": "supported",
                    "desc": "Get the nested_virt field of the given VM_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_nomigrate",
                    "status": "supported",
                    "desc": "Get the nomigrate field of the given VM_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given VM_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given VM_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VM_metrics record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_start_time",
                    "status": "supported",
                    "desc": "Get the start_time field of the given VM_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "datetime",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_state",
                    "status": "supported",
                    "desc": "Get the state field of the given VM_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given VM_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vcpus_cpu",
                    "status": "supported",
                    "desc": "Get the VCPUs/CPU field of the given VM_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(int -&gt; int) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vcpus_flags",
                    "status": "supported",
                    "desc": "Get the VCPUs/flags field of the given VM_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(int -&gt; string set) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vcpus_number",
                    "status": "supported",
                    "desc": "Get the VCPUs/number field of the given VM_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vcpus_params",
                    "status": "supported",
                    "desc": "Get the VCPUs/params field of the given VM_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vcpus_utilisation",
                    "status": "removed",
                    "desc": "Get the VCPUs/utilisation field of the given VM_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(int -&gt; float) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given VM_metrics. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given VM_metrics.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM_metrics ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                }
            ]
        },
        {
            "name": "vmpp",
            "state": "supported",
            "desc": "VM Protection Policy",
            "fields": [
                {
                    "field": "alarm_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "<strong>Removed</strong>. configuration for the alarm"
                },
                {
                    "field": "archive_frequency",
                    "type": "vmpp_archive_frequency",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "<strong>Removed</strong>. frequency of the archive schedule"
                },
                {
                    "field": "archive_last_run_time",
                    "type": "datetime",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Removed</strong>. time of the last archive"
                },
                {
                    "field": "archive_schedule",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "<strong>Removed</strong>. schedule of the archive containing ‘hour’, ‘min’, ‘days’. Date/time-related information is in Local Timezone"
                },
                {
                    "field": "archive_target_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "<strong>Removed</strong>. configuration for the archive, including its ‘location’, ‘username’, ‘password’"
                },
                {
                    "field": "archive_target_type",
                    "type": "vmpp_archive_target_type",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "<strong>Removed</strong>. type of the archive target config"
                },
                {
                    "field": "backup_frequency",
                    "type": "vmpp_backup_frequency",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "<strong>Removed</strong>. frequency of the backup schedule"
                },
                {
                    "field": "backup_last_run_time",
                    "type": "datetime",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Removed</strong>. time of the last backup"
                },
                {
                    "field": "backup_retention_value",
                    "type": "int",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "<strong>Removed</strong>. maximum number of backups that should be stored at any time"
                },
                {
                    "field": "backup_schedule",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "<strong>Removed</strong>. schedule of the backup containing ‘hour’, ‘min’, ‘days’. Date/time-related information is in Local Timezone"
                },
                {
                    "field": "backup_type",
                    "type": "vmpp_backup_type",
                    "qualifier": "<em>RW</em>",
                    "desc": "<strong>Removed</strong>. type of the backup sub-policy"
                },
                {
                    "field": "is_alarm_enabled",
                    "type": "bool",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "<strong>Removed</strong>. true if alarm is enabled for this policy"
                },
                {
                    "field": "is_archive_running",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Removed</strong>. true if this protection policy’s archive is running"
                },
                {
                    "field": "is_backup_running",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Removed</strong>. true if this protection policy’s backup is running"
                },
                {
                    "field": "is_policy_enabled",
                    "type": "bool",
                    "qualifier": "<em>RW</em>",
                    "desc": "<strong>Removed</strong>. enable or disable this policy"
                },
                {
                    "field": "name_description",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "<strong>Removed</strong>. a notes field containing human-readable description"
                },
                {
                    "field": "name_label",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "<strong>Removed</strong>. a human-readable name"
                },
                {
                    "field": "recent_alerts",
                    "type": "string set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Removed</strong>. recent alerts"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Removed</strong>. Unique identifier/object reference"
                },
                {
                    "field": "VMs",
                    "type": "VM ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "<strong>Removed</strong>. all VMs attached to this protection policy"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_alarm_config",
                    "status": "removed",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "The protection policy"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "the key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "the value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "add_to_archive_schedule",
                    "status": "removed",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "The protection policy"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "the key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "the value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "add_to_archive_target_config",
                    "status": "removed",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "The protection policy"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "the key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "the value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "add_to_backup_schedule",
                    "status": "removed",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "The protection policy"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "the key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "the value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "archive_now",
                    "status": "removed",
                    "desc": "This call archives the snapshot provided as a parameter",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "snapshot",
                            "desc": "The snapshot to archive"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "An XMLRPC result",
                        "errs": []
                    },
                    "minrole": "vm-power-admin"
                },
                {
                    "name": "create",
                    "status": "removed",
                    "desc": "Create a new VMPP instance, and return its handle.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP record",
                            "name": "args",
                            "desc": "All constructor arguments"
                        }
                    ],
                    "return": {
                        "type": "VMPP ref",
                        "desc": "reference to the newly created object",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "destroy",
                    "status": "removed",
                    "desc": "Destroy the specified VMPP instance.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_alarm_config",
                    "status": "removed",
                    "desc": "Get the alarm_config field of the given VMPP.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_alerts",
                    "status": "removed",
                    "desc": "This call fetches a history of alerts for a given protection policy",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "vmpp",
                            "desc": "The protection policy"
                        },
                        {
                            "type": "int",
                            "name": "hours_from_now",
                            "desc": "how many hours in the past the oldest record to fetch is"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "A list of alerts encoded in xml",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_all",
                    "status": "removed",
                    "desc": "Return a list of all the VMPPs known to the system.",
                    "args": [],
                    "return": {
                        "type": "VMPP ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "removed",
                    "desc": "Return a map of VMPP references to VMPP records for all VMPPs known to the system.",
                    "args": [],
                    "return": {
                        "type": "(VMPP ref -&gt; VMPP record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_archive_frequency",
                    "status": "removed",
                    "desc": "Get the archive_frequency field of the given VMPP.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "vmpp_archive_frequency",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_archive_last_run_time",
                    "status": "removed",
                    "desc": "Get the archive_last_run_time field of the given VMPP.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "datetime",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_archive_schedule",
                    "status": "removed",
                    "desc": "Get the archive_schedule field of the given VMPP.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_archive_target_config",
                    "status": "removed",
                    "desc": "Get the archive_target_config field of the given VMPP.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_archive_target_type",
                    "status": "removed",
                    "desc": "Get the archive_target_type field of the given VMPP.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "vmpp_archive_target_type",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_backup_frequency",
                    "status": "removed",
                    "desc": "Get the backup_frequency field of the given VMPP.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "vmpp_backup_frequency",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_backup_last_run_time",
                    "status": "removed",
                    "desc": "Get the backup_last_run_time field of the given VMPP.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "datetime",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_backup_retention_value",
                    "status": "removed",
                    "desc": "Get the backup_retention_value field of the given VMPP.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_backup_schedule",
                    "status": "removed",
                    "desc": "Get the backup_schedule field of the given VMPP.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_backup_type",
                    "status": "removed",
                    "desc": "Get the backup_type field of the given VMPP.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "vmpp_backup_type",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_name_label",
                    "status": "removed",
                    "desc": "Get all the VMPP instances with the given label.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "label",
                            "desc": "label of object to return"
                        }
                    ],
                    "return": {
                        "type": "VMPP ref set",
                        "desc": "references to objects with matching names",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "removed",
                    "desc": "Get a reference to the VMPP instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "VMPP ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_is_alarm_enabled",
                    "status": "removed",
                    "desc": "Get the is_alarm_enabled field of the given VMPP.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_is_archive_running",
                    "status": "removed",
                    "desc": "Get the is_archive_running field of the given VMPP.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_is_backup_running",
                    "status": "removed",
                    "desc": "Get the is_backup_running field of the given VMPP.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_is_policy_enabled",
                    "status": "removed",
                    "desc": "Get the is_policy_enabled field of the given VMPP.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_description",
                    "status": "removed",
                    "desc": "Get the name/description field of the given VMPP.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_label",
                    "status": "removed",
                    "desc": "Get the name/label field of the given VMPP.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_recent_alerts",
                    "status": "removed",
                    "desc": "Get the recent_alerts field of the given VMPP.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "removed",
                    "desc": "Get a record containing the current state of the given VMPP.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VMPP record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "removed",
                    "desc": "Get the uuid field of the given VMPP.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vms",
                    "status": "removed",
                    "desc": "Get the VMs field of the given VMPP.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VM ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "protect_now",
                    "status": "removed",
                    "desc": "This call executes the protection policy immediately",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "vmpp",
                            "desc": "The protection policy to execute"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "An XMLRPC result",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "remove_from_alarm_config",
                    "status": "removed",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "The protection policy"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "the key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "remove_from_archive_schedule",
                    "status": "removed",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "The protection policy"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "the key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "remove_from_archive_target_config",
                    "status": "removed",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "The protection policy"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "the key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "remove_from_backup_schedule",
                    "status": "removed",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "The protection policy"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "the key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_alarm_config",
                    "status": "removed",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "The protection policy"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "the value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_archive_frequency",
                    "status": "removed",
                    "desc": "Set the value of the archive_frequency field",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "The protection policy"
                        },
                        {
                            "type": "vmpp_archive_frequency",
                            "name": "value",
                            "desc": "the archive frequency"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_archive_last_run_time",
                    "status": "removed",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "The protection policy"
                        },
                        {
                            "type": "datetime",
                            "name": "value",
                            "desc": "the value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": ""
                },
                {
                    "name": "set_archive_schedule",
                    "status": "removed",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "The protection policy"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "the value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_archive_target_config",
                    "status": "removed",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "The protection policy"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "the value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_archive_target_type",
                    "status": "removed",
                    "desc": "Set the value of the archive_target_config_type field",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "The protection policy"
                        },
                        {
                            "type": "vmpp_archive_target_type",
                            "name": "value",
                            "desc": "the archive target config type"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_backup_frequency",
                    "status": "removed",
                    "desc": "Set the value of the backup_frequency field",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "The protection policy"
                        },
                        {
                            "type": "vmpp_backup_frequency",
                            "name": "value",
                            "desc": "the backup frequency"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_backup_last_run_time",
                    "status": "removed",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "The protection policy"
                        },
                        {
                            "type": "datetime",
                            "name": "value",
                            "desc": "the value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": ""
                },
                {
                    "name": "set_backup_retention_value",
                    "status": "removed",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "The protection policy"
                        },
                        {
                            "type": "int",
                            "name": "value",
                            "desc": "the value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_backup_schedule",
                    "status": "removed",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "The protection policy"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "the value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_backup_type",
                    "status": "removed",
                    "desc": "Set the backup_type field of the given VMPP.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "vmpp_backup_type",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_is_alarm_enabled",
                    "status": "removed",
                    "desc": "Set the value of the is_alarm_enabled field",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "The protection policy"
                        },
                        {
                            "type": "bool",
                            "name": "value",
                            "desc": "true if alarm is enabled for this policy"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_is_policy_enabled",
                    "status": "removed",
                    "desc": "Set the is_policy_enabled field of the given VMPP.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "bool",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_name_description",
                    "status": "removed",
                    "desc": "Set the name/description field of the given VMPP.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_name_label",
                    "status": "removed",
                    "desc": "Set the name/label field of the given VMPP.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMPP ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                }
            ],
            "supported": "removed"
        },
        {
            "name": "vmss",
            "state": "supported",
            "desc": "VM Snapshot Schedule",
            "fields": [
                {
                    "field": "enabled",
                    "type": "bool",
                    "qualifier": "<em>RW</em>",
                    "desc": "enable or disable this snapshot schedule"
                },
                {
                    "field": "frequency",
                    "type": "vmss_frequency",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "frequency of taking snapshot from snapshot schedule"
                },
                {
                    "field": "last_run_time",
                    "type": "datetime",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "time of the last snapshot"
                },
                {
                    "field": "name_description",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "a notes field containing human-readable description"
                },
                {
                    "field": "name_label",
                    "type": "string",
                    "qualifier": "<em>RW</em>",
                    "desc": "a human-readable name"
                },
                {
                    "field": "retained_snapshots",
                    "type": "int",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "maximum number of snapshots that should be stored at any time"
                },
                {
                    "field": "schedule",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "schedule of the snapshot containing ‘hour’, ‘min’, ‘days’. Date/time-related information is in Local Timezone"
                },
                {
                    "field": "type",
                    "type": "vmss_type",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "type of the snapshot schedule"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                },
                {
                    "field": "VMs",
                    "type": "VM ref set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "all VMs attached to this snapshot schedule"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_schedule",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMSS ref",
                            "name": "self",
                            "desc": "The snapshot schedule"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "the key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "the value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "create",
                    "status": "supported",
                    "desc": "Create a new VMSS instance, and return its handle.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMSS record",
                            "name": "args",
                            "desc": "All constructor arguments"
                        }
                    ],
                    "return": {
                        "type": "VMSS ref",
                        "desc": "reference to the newly created object",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "Destroy the specified VMSS instance.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMSS ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the VMSSs known to the system.",
                    "args": [],
                    "return": {
                        "type": "VMSS ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of VMSS references to VMSS records for all VMSSs known to the system.",
                    "args": [],
                    "return": {
                        "type": "(VMSS ref -&gt; VMSS record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_name_label",
                    "status": "supported",
                    "desc": "Get all the VMSS instances with the given label.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "label",
                            "desc": "label of object to return"
                        }
                    ],
                    "return": {
                        "type": "VMSS ref set",
                        "desc": "references to objects with matching names",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the VMSS instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "VMSS ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_enabled",
                    "status": "supported",
                    "desc": "Get the enabled field of the given VMSS.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMSS ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_frequency",
                    "status": "supported",
                    "desc": "Get the frequency field of the given VMSS.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMSS ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "vmss_frequency",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_last_run_time",
                    "status": "supported",
                    "desc": "Get the last_run_time field of the given VMSS.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMSS ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "datetime",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_description",
                    "status": "supported",
                    "desc": "Get the name/description field of the given VMSS.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMSS ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_name_label",
                    "status": "supported",
                    "desc": "Get the name/label field of the given VMSS.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMSS ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given VMSS.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMSS ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VMSS record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_retained_snapshots",
                    "status": "supported",
                    "desc": "Get the retained_snapshots field of the given VMSS.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMSS ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "int",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_schedule",
                    "status": "supported",
                    "desc": "Get the schedule field of the given VMSS.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMSS ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_type",
                    "status": "supported",
                    "desc": "Get the type field of the given VMSS.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMSS ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "vmss_type",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given VMSS.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMSS ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vms",
                    "status": "supported",
                    "desc": "Get the VMs field of the given VMSS.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMSS ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VM ref set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "remove_from_schedule",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMSS ref",
                            "name": "self",
                            "desc": "The snapshot schedule"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "the key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_enabled",
                    "status": "supported",
                    "desc": "Set the enabled field of the given VMSS.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMSS ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "bool",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_frequency",
                    "status": "supported",
                    "desc": "Set the value of the frequency field",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMSS ref",
                            "name": "self",
                            "desc": "The snapshot schedule"
                        },
                        {
                            "type": "vmss_frequency",
                            "name": "value",
                            "desc": "the snapshot schedule frequency"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_last_run_time",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMSS ref",
                            "name": "self",
                            "desc": "The snapshot schedule"
                        },
                        {
                            "type": "datetime",
                            "name": "value",
                            "desc": "the value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": ""
                },
                {
                    "name": "set_name_description",
                    "status": "supported",
                    "desc": "Set the name/description field of the given VMSS.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMSS ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_name_label",
                    "status": "supported",
                    "desc": "Set the name/label field of the given VMSS.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMSS ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_retained_snapshots",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMSS ref",
                            "name": "self",
                            "desc": "The schedule snapshot"
                        },
                        {
                            "type": "int",
                            "name": "value",
                            "desc": "the value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_schedule",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMSS ref",
                            "name": "self",
                            "desc": "The snapshot schedule"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "the value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "set_type",
                    "status": "supported",
                    "desc": "",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMSS ref",
                            "name": "self",
                            "desc": "The snapshot schedule"
                        },
                        {
                            "type": "vmss_type",
                            "name": "value",
                            "desc": "the snapshot schedule type"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                },
                {
                    "name": "snapshot_now",
                    "status": "supported",
                    "desc": "This call executes the snapshot schedule immediately",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VMSS ref",
                            "name": "vmss",
                            "desc": "Snapshot Schedule to execute"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "An XMLRPC result",
                        "errs": []
                    },
                    "minrole": "pool-operator"
                }
            ]
        },
        {
            "name": "vtpm",
            "state": "supported",
            "desc": "A virtual TPM device",
            "fields": [
                {
                    "field": "allowed_operations",
                    "type": "vtpm_operations set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client."
                },
                {
                    "field": "backend",
                    "type": "VM ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The domain where the backend is located (unused)"
                },
                {
                    "field": "current_operations",
                    "type": "(string -&gt; vtpm_operations) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task."
                },
                {
                    "field": "is_protected",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Whether the contents of the VTPM are secured according to the TPM spec"
                },
                {
                    "field": "is_unique",
                    "type": "bool",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "Whether the contents are never copied, satisfying the TPM spec"
                },
                {
                    "field": "persistence_backend",
                    "type": "persistence_backend",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "The backend where the vTPM is persisted"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                },
                {
                    "field": "VM",
                    "type": "VM ref",
                    "qualifier": "<em>RO/constructor</em>",
                    "desc": "The virtual machine the TPM is attached to"
                }
            ],
            "rpcs": [
                {
                    "name": "create",
                    "status": "supported",
                    "desc": "Create a new VTPM instance, and return its handle.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "vM",
                            "desc": "The VM reference the VTPM will be attached to"
                        },
                        {
                            "type": "bool",
                            "name": "is_unique",
                            "desc": "Whether the VTPM must be unique"
                        }
                    ],
                    "return": {
                        "type": "VTPM ref",
                        "desc": "The reference of the newly created VTPM",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "Destroy the specified VTPM instance, along with its state.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VTPM ref",
                            "name": "self",
                            "desc": "The reference to the VTPM object"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "vm-admin"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the VTPMs known to the system.",
                    "args": [],
                    "return": {
                        "type": "VTPM ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of VTPM references to VTPM records for all VTPMs known to the system.",
                    "args": [],
                    "return": {
                        "type": "(VTPM ref -&gt; VTPM record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_allowed_operations",
                    "status": "supported",
                    "desc": "Get the allowed_operations field of the given VTPM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VTPM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "vtpm_operations set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_backend",
                    "status": "supported",
                    "desc": "Get the backend field of the given VTPM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VTPM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VM ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the VTPM instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "VTPM ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_current_operations",
                    "status": "supported",
                    "desc": "Get the current_operations field of the given VTPM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VTPM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; vtpm_operations) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_is_protected",
                    "status": "supported",
                    "desc": "Get the is_protected field of the given VTPM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VTPM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_is_unique",
                    "status": "supported",
                    "desc": "Get the is_unique field of the given VTPM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VTPM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_persistence_backend",
                    "status": "supported",
                    "desc": "Get the persistence_backend field of the given VTPM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VTPM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "persistence_backend",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given VTPM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VTPM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VTPM record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given VTPM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VTPM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vm",
                    "status": "supported",
                    "desc": "Get the VM field of the given VTPM.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VTPM ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VM ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                }
            ]
        },
        {
            "name": "vusb",
            "state": "supported",
            "desc": "Describes the vusb device",
            "fields": [
                {
                    "field": "allowed_operations",
                    "type": "vusb_operations set",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client."
                },
                {
                    "field": "current_operations",
                    "type": "(string -&gt; vusb_operations) map",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task."
                },
                {
                    "field": "currently_attached",
                    "type": "bool",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "is the device currently attached"
                },
                {
                    "field": "other_config",
                    "type": "(string -&gt; string) map",
                    "qualifier": "<em>RW</em>",
                    "desc": "Additional configuration"
                },
                {
                    "field": "USB_group",
                    "type": "USB_group ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "USB group used by the VUSB"
                },
                {
                    "field": "uuid",
                    "type": "string",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "Unique identifier/object reference"
                },
                {
                    "field": "VM",
                    "type": "VM ref",
                    "qualifier": "<em>RO/runtime</em>",
                    "desc": "VM that owns the VUSB"
                }
            ],
            "rpcs": [
                {
                    "name": "add_to_other_config",
                    "status": "supported",
                    "desc": "Add the given key-value pair to the other_config field of the given VUSB.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VUSB ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to add"
                        },
                        {
                            "type": "string",
                            "name": "value",
                            "desc": "Value to add"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "create",
                    "status": "supported",
                    "desc": "Create a new VUSB record in the database only",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VM ref",
                            "name": "VM",
                            "desc": "The VM"
                        },
                        {
                            "type": "USB_group ref",
                            "name": "USB_group",
                            "desc": "&nbsp;"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "other_config",
                            "desc": "&nbsp;"
                        }
                    ],
                    "return": {
                        "type": "VUSB ref",
                        "desc": "The ref of the newly created VUSB record.",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "destroy",
                    "status": "supported",
                    "desc": "Removes a VUSB record from the database",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VUSB ref",
                            "name": "self",
                            "desc": "The VUSB to destroy about"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "get_all",
                    "status": "supported",
                    "desc": "Return a list of all the VUSBs known to the system.",
                    "args": [],
                    "return": {
                        "type": "VUSB ref set",
                        "desc": "references to all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_all_records",
                    "status": "supported",
                    "desc": "Return a map of VUSB references to VUSB records for all VUSBs known to the system.",
                    "args": [],
                    "return": {
                        "type": "(VUSB ref -&gt; VUSB record) map",
                        "desc": "records of all objects",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_allowed_operations",
                    "status": "supported",
                    "desc": "Get the allowed_operations field of the given VUSB.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VUSB ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "vusb_operations set",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_by_uuid",
                    "status": "supported",
                    "desc": "Get a reference to the VUSB instance with the specified UUID.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "string",
                            "name": "uuid",
                            "desc": "UUID of object to return"
                        }
                    ],
                    "return": {
                        "type": "VUSB ref",
                        "desc": "reference to the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_current_operations",
                    "status": "supported",
                    "desc": "Get the current_operations field of the given VUSB.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VUSB ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; vusb_operations) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_currently_attached",
                    "status": "supported",
                    "desc": "Get the currently_attached field of the given VUSB.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VUSB ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "bool",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_other_config",
                    "status": "supported",
                    "desc": "Get the other_config field of the given VUSB.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VUSB ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "(string -&gt; string) map",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_record",
                    "status": "supported",
                    "desc": "Get a record containing the current state of the given VUSB.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VUSB ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VUSB record",
                        "desc": "all fields from the object",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_usb_group",
                    "status": "supported",
                    "desc": "Get the USB_group field of the given VUSB.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VUSB ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "USB_group ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_uuid",
                    "status": "supported",
                    "desc": "Get the uuid field of the given VUSB.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VUSB ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "string",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "get_vm",
                    "status": "supported",
                    "desc": "Get the VM field of the given VUSB.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VUSB ref",
                            "name": "self",
                            "desc": "reference to the object"
                        }
                    ],
                    "return": {
                        "type": "VM ref",
                        "desc": "value of the field",
                        "errs": []
                    },
                    "minrole": "read-only"
                },
                {
                    "name": "remove_from_other_config",
                    "status": "supported",
                    "desc": "Remove the given key and its corresponding value from the other_config field of the given VUSB. If the key is not in that Map, then do nothing.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VUSB ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "string",
                            "name": "key",
                            "desc": "Key to remove"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                },
                {
                    "name": "set_other_config",
                    "status": "supported",
                    "desc": "Set the other_config field of the given VUSB.",
                    "args": [
                        {
                            "type": "session ref",
                            "name": "session_id",
                            "desc": "Reference to a valid session"
                        },
                        {
                            "type": "VUSB ref",
                            "name": "self",
                            "desc": "reference to the object"
                        },
                        {
                            "type": "(string -&gt; string) map",
                            "name": "value",
                            "desc": "New value to set"
                        }
                    ],
                    "return": {
                        "type": "void",
                        "desc": "",
                        "errs": []
                    },
                    "minrole": "pool-admin"
                }
            ]
        }
    ]
}